{
  "info": {
    "_postman_id": "1dcea77f-1205-444a-8316-1e06856a07e4",
    "name": "Smoke Tests",
    "description": "A collection of tests that hit all the QA endpoints with some tests that ensure the API is up and working. These tests don't test complicated business logic but rather ensure that the correct response types and lengths are being returned.",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "625d0173-fa7d-43dd-a584-8e4e1db380a3",
      "name": "Types",
      "description": "",
      "item": [
        {
          "_postman_id": "bb76a0d1-babc-4d19-9197-1c6f23ccece7",
          "name": "Targets",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "de3ac123-8725-4e0b-9a78-857e4ac199de",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "});",
                  "",
                  "pm.test('Has 3 items', function() {",
                  "    pm.expect(jsonData.data.currentItemCount).to.eql(3);",
                  "    pm.expect(jsonData.data.items).to.have.length(3);",
                  "});",
                  "",
                  "pm.test('Has the correct items', function() {",
                  "    var deposit = {",
                  "        \"id\": \"deposit\",",
                  "        \"label\": \"Direct Deposit\",",
                  "        \"plural\": \"Direct Deposits\",",
                  "        \"recipient\": \"Depositor\",",
                  "        \"help\": \"Instructions to a company/govt. agency to change future direct deposits to your account.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(deposit);",
                  "",
                  "    var closure =  {",
                  "        \"id\": \"closure\",",
                  "        \"label\": \"Account Closure\",",
                  "        \"plural\": \"Account Closures\",",
                  "        \"recipient\": \"Financial Instituion\",",
                  "        \"help\": \"Instructions to a company to close an account that you no longer need.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(closure);",
                  "    ",
                  "    var payment =  {",
                  "        \"id\": \"payment\",",
                  "        \"label\": \"Automatic Payment\",",
                  "        \"plural\": \"Automatic Payments\",",
                  "        \"recipient\": \"Payee\",",
                  "        \"help\": \"Instructions to a company/govt. agency to change future automatic payments from your account.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(payment);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api Key"
              }
            ],
            "body": {},
            "url": "{{base_url}}{{targets_postfix}}",
            "description": "Tests out the GET /types/targets method"
          },
          "response": []
        },
        {
          "_postman_id": "ea6e5b8c-c936-42c1-a38c-68285af8b94b",
          "name": "Statuses",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "805f0eb8-4318-42d7-985e-6c3828ecc740",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "});",
                  "",
                  "pm.test('Has 8 items', function() {",
                  "   pm.expect(jsonData.data.currentItemCount).to.eql(8);",
                  "   pm.expect(jsonData.data.items).to.have.length(8);",
                  "});",
                  "",
                  "pm.test('Has the correct items', function() {",
                  "    var ready = {",
                  "        \"id\": \"ready\",",
                  "        \"label\": \"Ready\",",
                  "        \"help\": \"The switch is ready to submit for processing.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(ready);",
                  "",
                  "    var incomplete = {",
                  "        \"id\": \"incomplete\",",
                  "        \"label\": \"Incomplete\",",
                  "        \"help\": \"The switch is missing information required for processing.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(incomplete);",
                  "",
                  "    var canceled =  {",
                  "        \"id\": \"canceled\",",
                  "        \"label\": \"Canceled\",",
                  "        \"help\": \"The switch has been canceled.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(canceled);",
                  "    ",
                  "    var submitted =  {",
                  "        \"id\": \"submitted\",",
                  "        \"label\": \"Submitted\",",
                  "        \"help\": \"The switch has been submitted for processing.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(submitted);",
                  "    ",
                  "    var printed =  {",
                  "        \"id\": \"printed\",",
                  "        \"label\": \"Printed\",",
                  "        \"help\": \"The switch has been printed for signature and/or in-person delivery.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(printed);",
                  "    ",
                  "    var inprocess =  {",
                  "        \"id\": \"inprocess\",",
                  "        \"label\": \"In Process\",",
                  "        \"help\": \"The switch is currently being processed by our fulfillment team.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(inprocess);",
                  "    ",
                  "    var sent =  {",
                  "        \"id\": \"sent\",",
                  "        \"label\": \"Sent\",",
                  "        \"help\": \"The switch has been sent to the company or govt. agency for action.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(sent);",
                  "    ",
                  "    var complete =  {",
                  "        \"id\": \"complete\",",
                  "        \"label\": \"Complete\",",
                  "        \"help\": \"The company or govt. agency has acknowledged that the change has been completed.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(complete);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api Key"
              }
            ],
            "body": {},
            "url": "{{base_url}}{{statuses_postfix}}",
            "description": "Testing the GET /types/switch/statuses route"
          },
          "response": []
        },
        {
          "_postman_id": "5204345b-a644-4026-ac12-ca88c67ac237",
          "name": "Actions",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7d5b53bc-a0f8-481f-bf80-641a9bd7db0f",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "});",
                  "",
                  "pm.test('Has the correct 6 items', function() {",
                  "   pm.expect(jsonData.data.currentItemCount).to.eql(6);",
                  "   pm.expect(jsonData.data.items).to.have.length(6);",
                  "});",
                  "",
                  "pm.test('Has the correct items', function() {",
                  "    var submit = {",
                  "        \"id\": \"submit\",",
                  "        \"label\": \"Submit\",",
                  "        \"help\": \"Submit the switch for processing.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(submit);",
                  "",
                  "    var cancel = {",
                  "        \"id\": \"cancel\",",
                  "        \"label\": \"Cancel\",",
                  "        \"help\": \"Cancel the switch.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(cancel);",
                  "",
                  "    var complete =  {",
                  "        \"id\": \"complete\",",
                  "        \"label\": \"Complete\",",
                  "        \"help\": \"You've taken the steps to make this change online or in person, so mark it complete.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(complete);",
                  "    ",
                  "    var print =  {",
                  "        \"id\": \"print\",",
                  "        \"label\": \"Print\",",
                  "        \"help\": \"Print the switch to sign or deliver in person.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(print);",
                  "    ",
                  "    var uncancel =  {",
                  "        \"id\": \"uncancel\",",
                  "        \"label\": \"Un-Cancel\",",
                  "        \"help\": \"Returns a canceled switch back to a state where it can be edited.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(uncancel);",
                  "    ",
                  "    var deleteAction =  {",
                  "        \"id\": \"delete\",",
                  "        \"label\": \"Delete\",",
                  "        \"help\": \"Deletes a switch that has been canceled.\"",
                  "    };",
                  "    pm.expect(jsonData.data.items).to.deep.include(deleteAction);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api Key"
              }
            ],
            "body": {},
            "url": "{{base_url}}{{actions_postfix}}",
            "description": "Tests for the GET /types/switches/actions route."
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "4a86f86c-d43b-4bc9-bea5-44f5665cd8a8",
      "name": "Customers",
      "description": "",
      "item": [
        {
          "_postman_id": "d4acae9c-3b62-4a88-b58a-84cc2a02a43e",
          "name": "Create Customer",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "599c1d68-13db-41fc-a6bc-fe61a2d37c86",
                "type": "text/javascript",
                "exec": [
                  "var timestamp = Date.now();",
                  "pm.environment.set(\"customer_key\", timestamp);",
                  "pm.environment.set(\"customer_email\", timestamp);",
                  "",
                  "var request_body = ",
                  "{",
                  "    \"email\": \"{{customer_email}}@clickswitch.com\",",
                  "    \"phoneNumber\": \"2183309148\",",
                  "    \"accountHolders\" : [",
                  "        {",
                  "        \"firstName\": \"John\",",
                  "        \"middleInitial\": \"J\",",
                  "        \"lastName\": \"Doe\"",
                  "        },",
                  "        {",
                  "        \"firstName\": \"Jane\",",
                  "        \"middleInitial\": \"M\",",
                  "        \"lastName\": \"Doe\"",
                  "        }",
                  "    ],",
                  "    \"accounts\": [",
                  "        {",
                  "        \"number\": \"212345678900\",",
                  "        \"type\": \"{{checking}}\",",
                  "        \"name\": \"{{checking}}\",",
                  "        \"routingNumber\": \"{{routing_number}}\"",
                  "        }",
                  "    ],",
                  "    \"addresses\": [",
                  "        {",
                  "            \"line1\": \"600 Canal Park Dr.\",",
                  "            \"city\": \"Duluth\",",
                  "            \"zip\": \"55802\",",
                  "            \"state\": \"MN\",",
                  "            \"country\": \"US\"",
                  "        }",
                  "    ]",
                  "};",
                  "",
                  "pm.environment.set(\"request_body\", JSON.stringify(request_body));",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "f339f465-d476-48cc-8168-273d95dbc13b",
                "type": "text/javascript",
                "exec": [
                  "// Note this is just a workaround for an existing bug and should be removed ASAP.",
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "api key"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{request_body}}\n \n"
            },
            "url": {
              "raw": "{{base_url}}{{customers_postfix}}{{customer_key}}",
              "host": [
                "{{base_url}}{{customers_postfix}}{{customer_key}}"
              ],
              "query": [
                {
                  "key": "context",
                  "value": "",
                  "equals": true,
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "0edf78dd-f2e1-4ae6-9ef1-65a5a0012ac3",
          "name": "Create Customer Copy",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ec257296-6c1d-4c72-9790-2632324427bb",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1a901b24-2046-404b-b95d-f5a0e4d18305",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required 1st level elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "});",
                  "",
                  "pm.test('Has required 2nd level elements', function() {",
                  "    pm.expect(jsonData.data).to.have.property('item');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "});",
                  "",
                  "pm.test('Has required 3rd level elements', function() {",
                  "    pm.expect(jsonData.data.item).to.have.property('email');",
                  "    pm.expect(jsonData.data.item).to.have.property('phoneNumber');",
                  "    pm.expect(jsonData.data.item).to.have.property('accountHolders');",
                  "    pm.expect(jsonData.data.item).to.have.property('accounts');",
                  "    pm.expect(jsonData.data.item).to.have.property('addresses');",
                  "    pm.expect(jsonData.data.item).to.have.property('metadata');",
                  "});",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "description": "api key",
                "key": "api-key",
                "value": "{{api_key}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{request_body}}"
            },
            "url": {
              "raw": "{{base_url}}{{customers_postfix}}{{customer_key}}",
              "host": [
                "{{base_url}}{{customers_postfix}}{{customer_key}}"
              ],
              "query": [
                {
                  "equals": true,
                  "key": "context",
                  "value": "",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "b9cfe2aa-3823-4749-9a80-cf80b1050fb0",
          "name": "Get Created Customer",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ec257296-6c1d-4c72-9790-2632324427bb",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "f9f36b28-0291-4478-ba88-6dc3f6513b21",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required 1st level elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "});",
                  "",
                  "pm.test('Has required 2nd level elements', function() {",
                  "    pm.expect(jsonData.data).to.have.property('item');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "});",
                  "",
                  "pm.test('Has required 3rd level elements', function() {",
                  "    pm.expect(jsonData.data.item).to.have.property('email');",
                  "    pm.expect(jsonData.data.item).to.have.property('phoneNumber');",
                  "    pm.expect(jsonData.data.item).to.have.property('accountHolders');",
                  "    pm.expect(jsonData.data.item).to.have.property('accounts');",
                  "    pm.expect(jsonData.data.item).to.have.property('addresses');",
                  "    pm.expect(jsonData.data.item).to.have.property('metadata');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "api key"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "  {\n    \"email\": \"{{customer_email}}@clickswitch.com\",\n    \"phoneNumber\": \"2183309148\",\n    \"metadata\": {\n      \"employee_id\": \"jsmith\",\n      \"branch\": \"21\"\n    },\n    \"accountHolders\" : [\n        {\n        \"firstName\": \"John\",\n        \"middleInitial\": \"J\",\n        \"lastName\": \"Doe\"\n        },\n        {\n        \"firstName\": \"Jane\",\n        \"middleInitial\": \"M\",\n        \"lastName\": \"Doe\"\n        }\n    ],\n    \"accounts\": [\n        {\n        \"number\": \"212345678900\",\n        \"type\": \"{{checking}}\",\n        \"name\": \"{{checking}}\",\n        \"routingNumber\": \"{{routing_number}}\"\n        }\n    ],\n    \"addresses\": [\n        {\n        \"line1\": \"129 Main St.\",\n        \"city\": \"Metropolis\",\n        \"zip\": \"37484\",\n        \"state\": \"DE\",\n        \"country\": \"US\"\n        }\n    ]\n  } \n \n"
            },
            "url": {
              "raw": "{{base_url}}{{customers_postfix}}{{customer_key}}",
              "host": [
                "{{base_url}}{{customers_postfix}}{{customer_key}}"
              ],
              "query": [
                {
                  "key": "context",
                  "value": "",
                  "equals": true,
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "12ebd864-4524-4b41-963b-308d0b5b3d9e",
      "name": "Switches",
      "description": "",
      "item": [
        {
          "_postman_id": "f42085c0-7a8f-4606-9156-f955f5d02aed",
          "name": "Customer Switches",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api-Key"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": {{target_id}},\r\n  \"accountholderIndex\": 0,\r\n  \"metadata\": {\r\n    \"employee_id\": \"jsmith\",\r\n    \"branch\": \"21\"\r\n  }\r\n}"
            },
            "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
          },
          "response": []
        },
        {
          "_postman_id": "f418df38-dcc7-4360-9eb1-799e803e3997",
          "name": "Switch Action",
          "request": {
            "method": "GET",
            "header": [],
            "body": {},
            "url": ""
          },
          "response": []
        },
        {
          "_postman_id": "c1084652-f999-430c-9a40-8b0ffa883ca0",
          "name": "Get Switch",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api Key"
              }
            ],
            "body": {},
            "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "4119ad4a-7080-402f-8fba-4f6dfae1ebd1",
      "name": "Targets",
      "description": "",
      "item": [
        {
          "_postman_id": "588b2234-0a99-4a39-913f-6a27bb126649",
          "name": "Targets",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "26b966a1-4339-4ae5-9f3e-b9b674607cf4",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "});",
                  "",
                  "pm.test('Has the correct 3 items', function() {",
                  "   pm.expect(jsonData.data.currentItemCount).to.eql(1);",
                  "   pm.expect(jsonData.data.items).to.have.length(1);",
                  "});",
                  "",
                  "pm.environment.set(\"target_id\", jsonData.data.items[0].targetId);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api Key"
              }
            ],
            "body": {},
            "url": {
              "raw": "{{base_url}}{{targets_postfix2}}?type=deposit&name=Saturn&customer={{customer_key}}",
              "host": [
                "{{base_url}}{{targets_postfix2}}"
              ],
              "query": [
                {
                  "key": "type",
                  "value": "deposit",
                  "equals": true
                },
                {
                  "key": "name",
                  "value": "Saturn",
                  "equals": true
                },
                {
                  "key": "customer",
                  "value": "{{customer_key}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "edaf8018-1518-41d6-a626-d379bac9eab6",
          "name": "Target By Id",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api Key"
              }
            ],
            "body": {},
            "url": {
              "raw": "{{base_url}}{{targets_postfix2}}?targetId={{target_id}}&customer={{customer_key}}",
              "host": [
                "{{base_url}}{{targets_postfix2}}"
              ],
              "query": [
                {
                  "key": "targetId",
                  "value": "{{target_id}}",
                  "equals": true
                },
                {
                  "key": "customer",
                  "value": "{{customer_key}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "30170c0f-9286-4bfe-8a48-51babb7d4a02",
          "name": "Locations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}"
              }
            ],
            "body": {},
            "url": {
              "raw": "{{base_url}}{{locations_postfix}}?customer={{customer_key}}&name=Saturn",
              "host": [
                "{{base_url}}{{locations_postfix}}"
              ],
              "query": [
                {
                  "key": "customer",
                  "value": "{{customer_key}}",
                  "equals": true
                },
                {
                  "key": "name",
                  "value": "Saturn",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "4e6218b2-1e44-4194-b629-238f81893bf9",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "7c7cc4ad-67c5-45dd-ac30-d3aafba818fb",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}