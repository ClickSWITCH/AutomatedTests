{
  "info": {
    "_postman_id": "82023879-8fc3-4b0b-8b3f-04ad5804c9f2",
    "name": "V2 Mobile API Regression Test Suite",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "API Key In Query",
      "item": [
        {
          "name": "Customers",
          "item": [
            {
              "name": "Enroll One Account",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "bde9f2aa-6575-4e73-920c-e7e0e7723c32",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Minimum Data BranchId",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "bff0f874-3d13-4ae1-8094-16077b8e21a8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Minimum Data ExternalBranchId",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "6166b2e5-05fe-4673-83cb-970d2f8c9b24",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{accountName2}}\",\r\n      \"ExternalBranchId\": 123\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Minimum Data RoutingNumber",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "9dcdfd71-ad9a-44ee-beca-79be56e3567d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Consent To Esign False (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.\r",
                      "var timestamp = Date.now();\r",
                      "var randomString = makeRandomString();\r",
                      "pm.environment.set(\"accountNumber\", timestamp);\r",
                      "pm.environment.set(\"userName\", randomString);\r",
                      "\r",
                      "// Creates a random string of length 10.\r",
                      "function makeRandomString() {\r",
                      "  var text = \"\";\r",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
                      "  \r",
                      "  for (var i = 0; i < 10; i++) {\r",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
                      "  }\r",
                      "  \r",
                      "  return text;\r",
                      "}\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "25b13e01-3f30-414f-a319-4fd7166f53b5",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "});",
                      "",
                      "pm.environment.set(\"customerId\", jsonData.CustomerId);",
                      "pm.environment.set(\"primaryContactId\", jsonData.PrimaryContactId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "8eac8ce8-ad87-4965-b7fd-28165b082fa1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    },\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}0\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{accountName2}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": false,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"SecondaryContact\": {\r\n\t\"FirstName\": \"{{userName}}\",\r\n\t\"MiddleInitial\": \"T\",\r\n\t\"LastName\": \"Test Second\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Consent To Esign Change To True (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                    "exec": [
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "// Do not save the time, as it is not returned in GET Esign Consent Date.",
                      "pm.environment.set(\"esignConsentDate\", pm.response.text().substring(1, 11));",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "586e0bb8-f7a1-4ca8-babc-704373fe85f0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "contacts",
                    ":contactId",
                    "esignConsent"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "key": "contactId",
                      "value": "{{primaryContactId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Esign Consent Date",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct esign consent date\", function() {",
                      "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"esignConsentDate\"));",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "ec09c0ea-7cdd-4fc5-a6ee-1628ab8b588c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "contacts",
                    ":contactId",
                    "esignConsent"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "key": "contactId",
                      "value": "",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Joint Account Two Accounts (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.\r",
                      "var timestamp = Date.now();\r",
                      "var randomString = makeRandomString();\r",
                      "pm.environment.set(\"accountNumber\", timestamp);\r",
                      "pm.environment.set(\"userName\", randomString);\r",
                      "\r",
                      "// Creates a random string of length 10.\r",
                      "function makeRandomString() {\r",
                      "  var text = \"\";\r",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
                      "  \r",
                      "  for (var i = 0; i < 10; i++) {\r",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
                      "  }\r",
                      "  \r",
                      "  return text;\r",
                      "}\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "25b13e01-3f30-414f-a319-4fd7166f53b5",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has to correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "});",
                      "",
                      "pm.environment.set(\"customerId\", jsonData.CustomerId);",
                      "pm.environment.set(\"primaryContactId\", jsonData.PrimaryContactId);",
                      "pm.environment.set(\"secondaryContactId\", jsonData.SecondaryContactId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "c4d88f3c-268f-424a-a86f-782fab28e9f6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    },\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}0\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{accountName2}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"SecondaryContact\": {\r\n\t\"FirstName\": \"{{userName}}\",\r\n\t\"MiddleInitial\": \"T\",\r\n\t\"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find Joint Account Two Accounts",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "    ",
                      "    pm.expect(jsonData.CustomerId).to.equal(pm.environment.get('customerId'));",
                      "    pm.expect(jsonData.PrimaryContactId).to.equal(pm.environment.get('primaryContactId'));",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(pm.environment.get('secondaryContactId'));",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "99ba4f56-ce08-4ff6-9b20-3f20c7cbecd5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/search?apiUserKey={{apiUserKey}}&searchUserName={{userName}}&institutionId={{institutionId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    },
                    {
                      "key": "searchUserName",
                      "value": "{{userName}}"
                    },
                    {
                      "key": "institutionId",
                      "value": "{{institutionId}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "891b0de3-c4c6-4411-a748-91eece4549f6",
          "_postman_isSubFolder": true
        },
        {
          "name": "Depositors",
          "item": [
            {
              "name": "Unknown",
              "item": [
                {
                  "name": "Create Minimum Data",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                          "    pm.expect(jsonData).to.have.property('Form');",
                          "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                          "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('ProfileId');",
                          "    pm.expect(jsonData).to.have.property('Type');",
                          "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5c577948-a531-4683-9462-04bed08416aa",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Create Depositor\",\r\n  \"Notes\": \"Test creating a depositor with the minimum data.\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                          "    pm.expect(jsonData).to.have.property('Form');",
                          "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                          "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('ProfileId');",
                          "    pm.expect(jsonData).to.have.property('Type');",
                          "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                          "});",
                          "",
                          "pm.environment.set('depositorIdUnknown', jsonData.CustomerCreatedDepositorId);",
                          "pm.environment.set('switchProfileIdUnknown', jsonData.ProfileId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "96653b1b-3caa-4055-8f65-42cb574750b2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"{{depositorNameUnknown}}\",\r\n  \"Notes\": \"Test\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains at least one result\", function() {",
                          "    pm.expect(jsonData.length).to.be.at.least(1);",
                          "});",
                          "",
                          "pm.test(\"Contains customer created depositor\", function() {",
                          "    var foundDepositor = false; ",
                          "    ",
                          "    for (var i = 0; i < jsonData.length; i++) {",
                          "        if (jsonData[i].CustomerCreatedDepositorId === pm.environment.get(\"depositorIdUnknown\")) {",
                          "            foundDepositor = true;",
                          "        }",
                          "    }",
                          "    ",
                          "    pm.expect(foundDepositor).to.be.true;",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "13762d53-9016-41af-8e78-0a22874ef69b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNameUnknown}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        },
                        {
                          "key": "searchName",
                          "value": "{{depositorNameUnknown}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "01b814ce-8a60-4b20-abef-5cffb723e472",
              "_postman_isSubFolder": true
            },
            {
              "name": "Unknown PlaceId",
              "item": [
                {
                  "name": "Find PlaceId (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e7770e3-231f-4c08-8901-770715598451",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains at least one result\", function() {",
                          "    pm.expect(jsonData.length).to.be.at.least(1);",
                          "});",
                          "",
                          "pm.environment.set('placeId', jsonData[jsonData.length-1].PlaceId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "61030491-23c8-4b0a-a0e8-7fd4db39fb24",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNamePlace}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        },
                        {
                          "key": "searchName",
                          "value": "{{depositorNamePlace}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create PlaceId (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "91b6c2c6-3cf4-4f52-9f79-1cb88b287d41",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                          "    pm.expect(jsonData).to.have.property('Form');",
                          "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                          "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('ProfileId');",
                          "    pm.expect(jsonData).to.have.property('Type');",
                          "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                          "});",
                          "",
                          "pm.environment.set('depositorIdPlace', jsonData.CustomerCreatedDepositorId);",
                          "pm.environment.set('switchProfileIdPlace', jsonData.ProfileId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "26ea6351-5b8b-4ab6-8633-ef651a14f8c9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor2\",\r\n  \"Notes\": \"Test\",\r\n  \"PlaceId\": \"{{placeId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "4f6794b2-c3a9-491e-8a1a-38c45be54387",
              "_postman_isSubFolder": true
            },
            {
              "name": "Find (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7804db2f-0c0d-400b-b2c8-471ad05fc0fe",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdVerified', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileId', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "d9454b11-4873-4e1c-a757-6043eb81c3f0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNameVerified}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    },
                    {
                      "key": "searchName",
                      "value": "{{depositorNameVerified}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find Print Only (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f9c3a917-2269-44ef-aa97-3b528286bc11",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdPrintOnly', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileIdPrintOnly', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "94aaa91a-f393-4d2a-8db6-4b7d28f9801d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNamePrintOnly}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    },
                    {
                      "key": "searchName",
                      "value": "{{depositorNamePrintOnly}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find Online Only (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c93e0824-aba4-4f3b-bffe-12b066e8bc50",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdOnlineOnly', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileIdOnlineOnly', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "faa323ed-8dfd-43c4-bbfb-850a7f652dd9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNameOnlineOnly}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    },
                    {
                      "key": "searchName",
                      "value": "{{depositorNameOnlineOnly}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "df6b2e8d-d559-481c-b8d3-1debe03f0e8f",
          "_postman_isSubFolder": true
        },
        {
          "name": "Switches",
          "item": [
            {
              "name": "Unknown",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "628931bc-540b-450d-a63e-d0bcad4c179d",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          "",
                          "pm.environment.set('switchIdUnknown', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f66c417c-7fca-48be-a6d4-45fb87bf4bff",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb96ad79-d6d2-4563-8dd5-6a6c9fec1ef5",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "73e4c35c-d959-4e72-832f-9fefb1b33103",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "26731505-88d0-4e29-93db-3b88d51d5da3",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "564f330e-9a64-474d-88d9-b1e2d5d11d98",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "31156932-59df-474a-a2cc-76b5c9c8f591",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(1); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b1c1ef33-a00f-4eea-8f38-a4c0c3452585",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "02fce7ab-1df3-46c7-bfe9-e769d6fc2443",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "cf3ac7f1-b132-4a87-aeb5-927c83b43965",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdUnknown\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7df57775-6b08-4b68-a438-11bf7b3674cc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "3815ad50-836e-4b38-b6f9-bfcd9717d8ad",
              "_postman_isSubFolder": true
            },
            {
              "name": "Unknown PlaceId",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a30754e4-17a2-43d9-8787-be0c751d51ab",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          "",
                          "pm.environment.set('switchIdPlace', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "25d34efd-a179-41c8-8ede-141a5cdd79e3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdPlace}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPlace}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update and Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "902aa43e-3c6c-4679-ab6b-841eed38a774",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "90c90535-5e7f-495b-9866-1088032cec95",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdPlace}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPlace}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}&submitOnSave=true",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        },
                        {
                          "key": "submitOnSave",
                          "value": "true"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPlace}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdPlace\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f94448fd-293f-4c3a-939e-8b1f40cf12f2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPlace}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "c33d1929-b9ac-4596-a3f0-4e2d47635ff1",
              "_postman_isSubFolder": true
            },
            {
              "name": "Percentage",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchId', jsonData.Id);",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b7c525bf-a391-44e5-9baf-e2713b85dbe5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7d282dbf-1680-4434-b5e7-95e457e21964",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b0894b99-e499-4549-a808-37c7c20d375c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(3); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a25cdd83-4e6d-4579-9262-b7e16503afa9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7eecfc10-f9c0-4d9a-9598-b2fea8b851ba",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchId\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "83a17852-82fd-408c-bad6-331f98979619",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "8c179c99-c76f-4ba2-834c-427abd118e01",
              "_postman_isSubFolder": true
            },
            {
              "name": "Currency",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 55,",
                          "        \"SplitUnitType\": \"Currency\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchId', jsonData.Id);",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9621eb28-102b-45f2-ae12-07caa49c1489",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Currency\",\r\n      \"SplitAmount\": 55\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 55,",
                          "        \"SplitUnitType\": \"Currency\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "eba40cd2-bd85-4090-9ed5-7687fd138d18",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Currency\",\r\n      \"SplitAmount\": 55\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 55,",
                          "        \"SplitUnitType\": \"Currency\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a2867234-1574-4664-8a7a-356d9059bc82",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(4); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "da4b992d-c991-40da-b3a9-bc413b6343a3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ad4dab87-c584-484f-8b2e-273e461ea501",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "fb5ca248-b963-4197-ba0f-19577d442af9",
              "_postman_isSubFolder": true
            },
            {
              "name": "Remainder",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Remainder\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchId', jsonData.Id);",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "49072459-840f-4cce-a9ee-f8a08f17acff",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Remainder\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "81c3ba60-0e01-45e5-9a6d-aa055013d625",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Remainder\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f99e3c00-22ca-4317-859c-0c56049d7cf1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(5); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f05ae86c-c3d5-4143-8c59-62e35434d670",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "78fbc09e-f7f9-4848-bdba-634cb1f89be1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct error message\", function() {",
                          "   pm.expect(jsonData.Description).to.equal(\"The switch has already been submitted to ClickSWITCH.\"); ",
                          "   pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "   pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchId\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "aca1126d-91b2-4b6a-895c-b7e7d4a568a3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "f265d8c9-e38c-414b-878d-8b150d013eb8",
              "_postman_isSubFolder": true
            },
            {
              "name": "Online Only",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8f62bfcb-b75e-4e7f-b135-14523c7ac6e0",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "    pm.expect(jsonData.Status).to.equal(\"TrackOnly\");",
                          "});",
                          "",
                          "pm.environment.set('switchIdOnlineOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b689c599-c7f4-4290-827d-ea230a6f40f4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdOnlineOnly}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdOnlineOnly}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a88323bb-4491-40b6-abf9-567eca09d2eb",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "    pm.expect(jsonData.Status).to.equal(\"TrackOnly\");",
                          "});",
                          "",
                          "pm.environment.set('switchIdPrintOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7bb7009b-635d-43da-9d12-103d902c0b78",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdOnlineOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ae86877f-9cc3-4406-988d-4e58a1c11ded",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(6); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a2f28bb0-69f6-41c5-8046-2c87bfe52bc3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ef91648-9fe8-494d-af17-e932f52229bb",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct error message\", function() {",
                          "   pm.expect(jsonData.Description).to.equal(\"The switch has already been submitted to ClickSWITCH.\"); ",
                          "   pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "   pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdOnlineOnly\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "34cf2819-53ad-41c0-ae00-ae6ee7b9374d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdOnlineOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "1363a10e-3347-44e8-ae59-d200e42176dd",
              "_postman_isSubFolder": true
            },
            {
              "name": "Print Only",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "556cbd47-d4f4-42a9-a5a5-2d44103f03a3",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchIdPrintOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3df61ecd-2e27-46cc-9ccd-8d808d92ab93",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdPrintOnly}}\",\r\n  \"FormFields\": [\r\n\t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPrintOnly}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5e126f13-faf5-4985-87b5-329f33bf9f6d",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "4fb34d48-6377-490f-acd2-b54b7138a42a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d4298fad-c7d4-40ac-b18c-6b61a0435111",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(7); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "18543df0-aa4d-4baa-8547-69e6d46971c3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit PrintOnly Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "70f6644c-9545-4d93-84a8-4dfe18c89677",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct error message\", function() {",
                          "   pm.expect(jsonData.Description).to.equal(\"The switch can only be printed.\");",
                          "   pm.expect(jsonData.ErrorCode).to.eql(\"PrintOnly\");",
                          "   pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdPrintOnly\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "41c921f8-219b-431f-8133-cc5317c61aab",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Print PDF",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2d98a637-f01d-41a8-a568-d340414f9e93",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Response contains some data\", function() {",
                          "   pm.expect(jsonData).to.not.equal(null);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "993cf640-84c9-4b12-b096-a166f37fa36e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/pdf"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId/pdf/print?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId",
                        "pdf",
                        "print"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "afa4e300-708e-4e6c-95c9-a258466b1d18",
              "_postman_isSubFolder": true
            },
            {
              "name": "Save And Delete",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9e3657a8-ddab-455c-9ffb-66856a47aec5",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.environment.set('switchIdDelete', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c615ffd8-34d4-44f1-aeb5-27e54b1e5d1d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "pm.test(\"Status code is 204\", function () {",
                          "    pm.response.to.have.status(204);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "72944f96-265f-4cff-a6e7-7e2e89439e8f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdDelete}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get 404 Not Found",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 404\", function() {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Content-Length is 0\", function() {",
                          "    pm.response.to.be.header(\"Content-Length\", \"0\");",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "15d319a0-25db-4365-914f-6c67d225d1ae",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdDelete}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(7); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1f3be9af-e115-4beb-8117-47c38adb35da",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "287f4b5d-c8ed-4dec-a229-e24be20c6448",
              "_postman_isSubFolder": true
            },
            {
              "name": "Depositors Find By Switch Profile Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Address');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('Name');",
                      "    pm.expect(jsonData).to.have.property('PhoneNumber');",
                      "    pm.expect(jsonData).to.have.property('PlaceId');",
                      "    pm.expect(jsonData).to.have.property('SwitchTemplate');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositorId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositSplitInfo');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('Form');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('IsSplittingDepositsPossible');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('OnlineOnlyInstructions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('PrintOnlyInstructions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('ProfileId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('Type');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('TermsAndConditions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeCheckingLimit');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeSavingsLimit');",
                      "});",
                      "",
                      "pm.test('Has the correct depositor id', function() {",
                      "   pm.expect(jsonData.DepositorId).to.equal(pm.environment.get(\"depositorIdVerified\")); ",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "8956b039-a4b9-4a6a-80b1-5db506995e56",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors/:switchProfileGuid?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors",
                    ":switchProfileGuid"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "key": "switchProfileGuid",
                      "value": "{{switchProfileGuid}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "81a36149-f9ad-420b-8e5f-548c3565ffdb",
          "_postman_isSubFolder": true
        },
        {
          "name": "Status Unauthenticated",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e2f3766-afdf-4c8c-b4c7-a549044dfee2",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Has required elements\", function() {",
                  "    pm.expect(jsonData).to.have.property('Version');",
                  "    pm.expect(jsonData.Authenticated).to.be.false;",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "026e4644-c0c9-4702-809e-75f125fee87d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{ocpApimSubscriptionKey}}"
              }
            ],
            "url": "{{baseUrl}}/status"
          },
          "response": []
        },
        {
          "name": "Status Authenticated",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e2f3766-afdf-4c8c-b4c7-a549044dfee2",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Has required elements\", function() {",
                  "    pm.expect(jsonData).to.have.property('Version');",
                  "    pm.expect(jsonData.Authenticated).to.be.true;",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "9e13a033-95ed-4ca0-8d70-8bc72ac4e465",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{ocpApimSubscriptionKey}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/status?apiUserKey={{apiUserKey}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "status"
              ],
              "query": [
                {
                  "key": "apiUserKey",
                  "value": "{{apiUserKey}}"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "_postman_id": "d3cb3d12-6048-4916-ae9d-8e3e49db38c4"
    },
    {
      "name": "API Key In Header",
      "item": [
        {
          "name": "Customers",
          "item": [
            {
              "name": "Enroll Consent To Esign False (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.\r",
                      "var timestamp = Date.now();\r",
                      "var randomString = makeRandomString();\r",
                      "pm.environment.set(\"accountNumber\", timestamp);\r",
                      "pm.environment.set(\"userName\", randomString);\r",
                      "\r",
                      "// Creates a random string of length 10.\r",
                      "function makeRandomString() {\r",
                      "  var text = \"\";\r",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
                      "  \r",
                      "  for (var i = 0; i < 10; i++) {\r",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
                      "  }\r",
                      "  \r",
                      "  return text;\r",
                      "}\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "25b13e01-3f30-414f-a319-4fd7166f53b5",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "});",
                      "",
                      "pm.environment.set(\"customerId\", jsonData.CustomerId);",
                      "pm.environment.set(\"primaryContactId\", jsonData.PrimaryContactId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "d83e90de-893a-47ad-bbf6-6d3923c0f08a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    },\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}0\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{accountName2}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": false,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"SecondaryContact\": {\r\n\t\"FirstName\": \"{{userName}}\",\r\n\t\"MiddleInitial\": \"T\",\r\n\t\"LastName\": \"Test Second\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": "{{baseUrl}}/customers"
              },
              "response": []
            },
            {
              "name": "Consent To Esign Change To True (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                    "exec": [
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "// Do not save the time, as it is not returned in GET Esign Consent Date.",
                      "pm.environment.set(\"esignConsentDate\", pm.response.text().substring(1, 11));",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "052247eb-9ed8-455c-a820-414c1eff46a5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "contacts",
                    ":contactId",
                    "esignConsent"
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "key": "contactId",
                      "value": "{{primaryContactId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Esign Consent Date",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct esign consent date\", function() {",
                      "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"esignConsentDate\"));",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "93f6b0b1-303e-4aba-8bee-8a349c91329e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "contacts",
                    ":contactId",
                    "esignConsent"
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "key": "contactId",
                      "value": "{{primaryContactId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Joint Account Two Accounts (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.\r",
                      "var timestamp = Date.now();\r",
                      "var randomString = makeRandomString();\r",
                      "pm.environment.set(\"accountNumber\", timestamp);\r",
                      "pm.environment.set(\"userName\", randomString);\r",
                      "\r",
                      "// Creates a random string of length 10.\r",
                      "function makeRandomString() {\r",
                      "  var text = \"\";\r",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
                      "  \r",
                      "  for (var i = 0; i < 10; i++) {\r",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
                      "  }\r",
                      "  \r",
                      "  return text;\r",
                      "}\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "25b13e01-3f30-414f-a319-4fd7166f53b5",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has to correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "});",
                      "",
                      "pm.environment.set(\"customerId\", jsonData.CustomerId);",
                      "pm.environment.set(\"primaryContactId\", jsonData.PrimaryContactId);",
                      "pm.environment.set(\"secondaryContactId\", jsonData.SecondaryContactId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "3fe4747c-e87c-43a4-90cf-0f2d42467c69",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    },\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}0\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{accountName2}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"SecondaryContact\": {\r\n\t\"FirstName\": \"{{userName}}\",\r\n\t\"MiddleInitial\": \"T\",\r\n\t\"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": "{{baseUrl}}/customers"
              },
              "response": []
            },
            {
              "name": "Find Joint Account Two Accounts",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "    ",
                      "    pm.expect(jsonData.CustomerId).to.equal(pm.environment.get('customerId'));",
                      "    pm.expect(jsonData.PrimaryContactId).to.equal(pm.environment.get('primaryContactId'));",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(pm.environment.get('secondaryContactId'));",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "35b92ecd-6e38-49d6-a710-2dea4000e42a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/search?searchUserName={{userName}}&institutionId={{institutionId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "searchUserName",
                      "value": "{{userName}}"
                    },
                    {
                      "key": "institutionId",
                      "value": "{{institutionId}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "b4040264-5127-4ec5-a2f3-3fb76b5bd574",
          "_postman_isSubFolder": true
        },
        {
          "name": "Depositors",
          "item": [
            {
              "name": "Unknown",
              "item": [
                {
                  "name": "Create (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                          "    pm.expect(jsonData).to.have.property('Form');",
                          "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                          "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('ProfileId');",
                          "    pm.expect(jsonData).to.have.property('Type');",
                          "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                          "});",
                          "",
                          "pm.environment.set('depositorIdUnknown', jsonData.CustomerCreatedDepositorId);",
                          "pm.environment.set('switchProfileIdUnknown', jsonData.ProfileId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "83507352-f80d-4dcd-babd-8d97ee68caf0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"{{depositorNameUnknown}}\",\r\n  \"Notes\": \"Test\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains at least one result\", function() {",
                          "    pm.expect(jsonData.length).to.be.at.least(1);",
                          "});",
                          "",
                          "pm.test(\"Contains customer created depositor\", function() {",
                          "    var foundDepositor = false; ",
                          "    ",
                          "    for (var i = 0; i < jsonData.length; i++) {",
                          "        if (jsonData[i].CustomerCreatedDepositorId === pm.environment.get(\"depositorIdUnknown\")) {",
                          "            foundDepositor = true;",
                          "        }",
                          "    }",
                          "    ",
                          "    pm.expect(foundDepositor).to.be.true;",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1e187347-ab9f-4686-9b69-2b7ccbdc4cc2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNameUnknown}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "searchName",
                          "value": "{{depositorNameUnknown}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "254c4239-dbd4-4f27-88c4-a6646981f85f",
              "_postman_isSubFolder": true
            },
            {
              "name": "Unknown PlaceId",
              "item": [
                {
                  "name": "Find PlaceId (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e7770e3-231f-4c08-8901-770715598451",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains at least one result\", function() {",
                          "    pm.expect(jsonData.length).to.be.at.least(1);",
                          "});",
                          "",
                          "pm.environment.set('placeId', jsonData[jsonData.length-1].PlaceId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8f929113-7cbb-42e5-b692-80cd9b32669a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNamePlace}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "searchName",
                          "value": "{{depositorNamePlace}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create PlaceId (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "91b6c2c6-3cf4-4f52-9f79-1cb88b287d41",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                          "    pm.expect(jsonData).to.have.property('Form');",
                          "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                          "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('ProfileId');",
                          "    pm.expect(jsonData).to.have.property('Type');",
                          "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                          "});",
                          "",
                          "pm.environment.set('depositorIdPlace', jsonData.CustomerCreatedDepositorId);",
                          "pm.environment.set('switchProfileIdPlace', jsonData.ProfileId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b3cff84a-f283-49cc-8b1f-8f7650755a93",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor2\",\r\n  \"Notes\": \"Test\",\r\n  \"PlaceId\": \"{{placeId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "2efd01c2-bce4-4464-b954-21a28daa112d",
              "_postman_isSubFolder": true
            },
            {
              "name": "Find (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7804db2f-0c0d-400b-b2c8-471ad05fc0fe",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdVerified', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileId', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b1f70a94-88c5-4f83-9955-d3d6e4757223",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNameVerified}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "searchName",
                      "value": "{{depositorNameVerified}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find Print Only (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f9c3a917-2269-44ef-aa97-3b528286bc11",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdPrintOnly', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileIdPrintOnly', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b731e054-6ab2-44d9-9fb7-4645ee5d1f56",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNamePrintOnly}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "searchName",
                      "value": "{{depositorNamePrintOnly}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find Online Only (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c93e0824-aba4-4f3b-bffe-12b066e8bc50",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdOnlineOnly', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileIdOnlineOnly', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "79e89857-527c-4a39-b6a0-0ea2ae36bba2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNameOnlineOnly}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "searchName",
                      "value": "{{depositorNameOnlineOnly}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "f45f1efd-a3c2-4751-802e-5c57588c3846",
          "_postman_isSubFolder": true
        },
        {
          "name": "Switches",
          "item": [
            {
              "name": "Unknown",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "628931bc-540b-450d-a63e-d0bcad4c179d",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          "",
                          "pm.environment.set('switchIdUnknown', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "db126130-ff3e-4029-b622-6ee93d4d690c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb96ad79-d6d2-4563-8dd5-6a6c9fec1ef5",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "20bac4b9-7cdd-459a-8095-b574a0630796",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "26731505-88d0-4e29-93db-3b88d51d5da3",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ef676909-2bc5-4e32-84a7-d7c10a904b5f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "31156932-59df-474a-a2cc-76b5c9c8f591",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(1); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e6558527-8ac8-42a8-9c12-bc58507fe527",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "02fce7ab-1df3-46c7-bfe9-e769d6fc2443",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "58c327ff-86de-47e9-82c6-31e9c8429c42",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdUnknown\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7ceb4c5e-70ca-4b1d-b5a5-618b0f4ff02d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "d22a63fc-e27f-4514-ad6e-66ef542787cd",
              "_postman_isSubFolder": true
            },
            {
              "name": "Unknown PlaceId",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a30754e4-17a2-43d9-8787-be0c751d51ab",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          "",
                          "pm.environment.set('switchIdPlace', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c0267814-1a1f-4853-9223-259e2a47fb32",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdPlace}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPlace}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update and Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "902aa43e-3c6c-4679-ab6b-841eed38a774",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7c3487d2-8ffd-43a8-ae96-377b38f20512",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdPlace}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPlace}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?submitOnSave=true",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "submitOnSave",
                          "value": "true"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPlace}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdPlace\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "43970cfa-2394-4860-af9e-d865ef7b172a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPlace}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "82147e43-d1de-4f63-a79e-8922315c227e",
              "_postman_isSubFolder": true
            },
            {
              "name": "Percentage",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchId', jsonData.Id);",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a794df71-398a-4364-b89f-86acb2dc4156",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3aa156a5-841d-48a1-be52-923fea21c076",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a485ec2c-92f8-46d9-9a8b-4b9f12e4c966",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(3); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5dfdaea2-d9e5-45c1-92b0-36b5ce20885a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f259783a-babc-4bf3-ab85-73d514050ae9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchId\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b0186a6c-6ef5-4ab4-82ce-24e6565eaade",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "2b06a3e6-f4c3-4b2e-bdfd-f259694f431f",
              "_postman_isSubFolder": true
            },
            {
              "name": "Online Only",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8f62bfcb-b75e-4e7f-b135-14523c7ac6e0",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "    pm.expect(jsonData.Status).to.equal(\"TrackOnly\");",
                          "});",
                          "",
                          "pm.environment.set('switchIdOnlineOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "24ed3040-f7a4-46f7-ae40-52ed1feb76cd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdOnlineOnly}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdOnlineOnly}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a88323bb-4491-40b6-abf9-567eca09d2eb",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "    pm.expect(jsonData.Status).to.equal(\"TrackOnly\");",
                          "});",
                          "",
                          "pm.environment.set('switchIdPrintOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d3b18e8b-0679-4826-abd8-33dc8d33db78",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdOnlineOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ae86877f-9cc3-4406-988d-4e58a1c11ded",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(4); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "38ef0e0d-26f1-4ede-b54c-79702c0f6219",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ef91648-9fe8-494d-af17-e932f52229bb",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct error message\", function() {",
                          "   pm.expect(jsonData.Description).to.equal(\"The switch has already been submitted to ClickSWITCH.\"); ",
                          "   pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "   pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdOnlineOnly\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "78c7f4bf-aba2-4149-a189-046c06e7b811",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdOnlineOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "99c8c2cc-9aef-4b8c-9db3-ca2efd5d2cb8",
              "_postman_isSubFolder": true
            },
            {
              "name": "Print Only",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "556cbd47-d4f4-42a9-a5a5-2d44103f03a3",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchIdPrintOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "adbb882b-ee50-43d3-89f4-4fa393f4f6d0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdPrintOnly}}\",\r\n  \"FormFields\": [\r\n\t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPrintOnly}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5e126f13-faf5-4985-87b5-329f33bf9f6d",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ba9a96fa-10a5-48d9-9dd8-83864d86cc3c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d4298fad-c7d4-40ac-b18c-6b61a0435111",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(5); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ad25e75c-5a87-4915-a86a-7697a8a6a23b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit PrintOnly Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "70f6644c-9545-4d93-84a8-4dfe18c89677",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct error message\", function() {",
                          "   pm.expect(jsonData.Description).to.equal(\"The switch can only be printed.\");",
                          "   pm.expect(jsonData.ErrorCode).to.eql(\"PrintOnly\");",
                          "   pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdPrintOnly\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "2f69918c-26a7-4bb5-9132-a822b501b974",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Print PDF",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2d98a637-f01d-41a8-a568-d340414f9e93",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Response contains some data\", function() {",
                          "   pm.expect(jsonData).to.not.equal(null);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "89ab8199-d8da-4703-a9c8-bfe298f9748c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/pdf",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId/pdf/print",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId",
                        "pdf",
                        "print"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "c2e30389-09ea-4157-9f67-cfdb0a2d5f24",
              "_postman_isSubFolder": true
            },
            {
              "name": "Save And Delete",
              "item": [
                {
                  "name": "Save",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9e3657a8-ddab-455c-9ffb-66856a47aec5",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.environment.set('switchIdDelete', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b5118cb2-94d1-4fd0-b8a4-602c86ffda2f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "pm.test(\"Status code is 204\", function () {",
                          "    pm.response.to.have.status(204);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "bde13ede-f98a-4565-9356-621fab1eb994",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdDelete}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get 404 Not Found",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 404\", function() {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Content-Length is 0\", function() {",
                          "    pm.response.to.be.header(\"Content-Length\", \"0\");",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "411abd6a-70a5-47db-a2d7-43b408224563",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdDelete}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(5); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "70d8e0f5-b28d-4fd6-8b12-4dceca140a0d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "9994193a-d080-4659-b1f0-6f9adba3db93",
              "_postman_isSubFolder": true
            },
            {
              "name": "Depositors Find By Switch Profile Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Address');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('Name');",
                      "    pm.expect(jsonData).to.have.property('PhoneNumber');",
                      "    pm.expect(jsonData).to.have.property('PlaceId');",
                      "    pm.expect(jsonData).to.have.property('SwitchTemplate');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositorId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositSplitInfo');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('Form');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('IsSplittingDepositsPossible');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('OnlineOnlyInstructions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('PrintOnlyInstructions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('ProfileId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('Type');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('TermsAndConditions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeCheckingLimit');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeSavingsLimit');",
                      "});",
                      "",
                      "pm.test('Has the correct depositor id', function() {",
                      "   pm.expect(jsonData.DepositorId).to.equal(pm.environment.get(\"depositorIdVerified\")); ",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "31299e67-5f9c-4244-859a-9fa840565f38",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors/:switchProfileGuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors",
                    ":switchProfileGuid"
                  ],
                  "variable": [
                    {
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "key": "switchProfileGuid",
                      "value": "{{switchProfileGuid}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "94f5e0bd-59b5-4e9d-a094-91ddfbf07b7f",
          "_postman_isSubFolder": true
        },
        {
          "name": "Status Authenticated",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e2f3766-afdf-4c8c-b4c7-a549044dfee2",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Has required elements\", function() {",
                  "    pm.expect(jsonData).to.have.property('Version');",
                  "    pm.expect(jsonData.Authenticated).to.be.true;",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "d8143342-b371-4417-935e-49bab9c8a1a1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{ocpApimSubscriptionKey}}"
              },
              {
                "key": "apiUserKey",
                "value": "{{apiUserKey}}",
                "equals": true
              }
            ],
            "url": "{{baseUrl}}/status"
          },
          "response": []
        }
      ],
      "_postman_id": "f44aa926-de5b-410a-ab41-4009081cdac4"
    },
    {
      "name": "401 Unauthorized",
      "item": [
        {
          "name": "Invalid API Key",
          "item": [
            {
              "name": "Customers",
              "item": [
                {
                  "name": "Enroll",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ba68baec-a6b9-4bae-9e36-9b5db09b2c04",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Consent To Esign",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "771af573-deea-476a-a15d-333f6a724d53",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "contacts",
                        ":contactId",
                        "esignConsent"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "contactId",
                          "value": "{{primaryContactId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Esign Consent Date",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "2e43f5a4-d258-4528-be15-131453fd6665",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "contacts",
                        ":contactId",
                        "esignConsent"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "contactId",
                          "value": "{{primaryContactId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "cf51ad77-786e-4dc7-9684-bebf970e58be",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/search?apiUserKey=aaaaa&searchUserName={{userName}}&institutionId={{institutionId}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        "search"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        },
                        {
                          "key": "searchUserName",
                          "value": "{{userName}}"
                        },
                        {
                          "key": "institutionId",
                          "value": "{{institutionId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "6e267331-6f00-4502-94a3-463eeb0888ea",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "449fb18f-56cc-434c-b8d2-105b2abfe4bb",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "54c1da51-b04e-49fa-b4fc-a0890d98309a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Depositors",
              "item": [
                {
                  "name": "Unknown",
                  "item": [
                    {
                      "name": "Create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "7f8c011d-5689-42ef-9804-5c0996da6515",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor\",\r\n  \"Notes\": \"Test\",\r\n  \"PhoneNumber\": \"2185555555\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey=aaaaa",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "apiUserKey",
                              "value": "aaaaa"
                            }
                          ],
                          "variable": [
                            {
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Find",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "1916511b-2d21-43f1-a647-7ddfd5695e7b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey=aaaaa&searchName=Test Depositor&latitude={{latitude}}&longitude={{longitude}}",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "apiUserKey",
                              "value": "aaaaa"
                            },
                            {
                              "key": "searchName",
                              "value": "Test Depositor"
                            },
                            {
                              "key": "latitude",
                              "value": "{{latitude}}"
                            },
                            {
                              "key": "longitude",
                              "value": "{{longitude}}"
                            }
                          ],
                          "variable": [
                            {
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "b6c7d3f3-0e9a-4e09-85b6-9d2be6d98582",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Unknown PlaceId",
                  "item": [
                    {
                      "name": "Find PlaceId",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6e7770e3-231f-4c08-8901-770715598451",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "68f6fb8c-32a2-4c35-8578-804207c64828",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey=aaaaa&searchName={{depositorNamePlace}}&latitude={{latitude}}&longitude={{longitude}}",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "apiUserKey",
                              "value": "aaaaa"
                            },
                            {
                              "key": "searchName",
                              "value": "{{depositorNamePlace}}"
                            },
                            {
                              "key": "latitude",
                              "value": "{{latitude}}"
                            },
                            {
                              "key": "longitude",
                              "value": "{{longitude}}"
                            }
                          ],
                          "variable": [
                            {
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create PlaceId",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "91b6c2c6-3cf4-4f52-9f79-1cb88b287d41",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "c9844064-815e-46b4-8dd7-530a3684276f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor2\",\r\n  \"Notes\": \"Test\",\r\n  \"PlaceId\": \"{{placeId}}\",\r\n  \"PhoneNumber\": \"2185555555\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey=aaaaa",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "apiUserKey",
                              "value": "aaaaa"
                            }
                          ],
                          "variable": [
                            {
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "36a3f251-e513-484b-b3ee-0c98d3e9a1b1",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7804db2f-0c0d-400b-b2c8-471ad05fc0fe",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "70067cc2-c14c-4bff-a8ad-db8981d6f078",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey=aaa&searchName={{depositorNameVerified}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaa"
                        },
                        {
                          "key": "searchName",
                          "value": "{{depositorNameVerified}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find By Switch Profile Id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "bbdc9282-952c-40b9-904e-79139a038170",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors/:switchProfileGuid?apiUserKey=aaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors",
                        ":switchProfileGuid"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaa"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchProfileGuid",
                          "value": "{{switchProfileGuid}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "74aeca8e-7557-4cd7-84da-1ad15902969a",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63dc3038-b599-4e56-b35f-52d562974cbb",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "bcf30ce0-ca6c-424f-86a7-f109d862422e",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Switches",
              "item": [
                {
                  "name": "Save",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "bbadc0a6-c794-4f2e-91b2-6b4555f19868",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\",\r\n      \"SplitAmount\": 0\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "43c2806e-97f3-40d1-be1b-befe08bbbfe5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\",\r\n      \"SplitAmount\": 0\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey=aaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaa"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 401\", function () {",
                          "    pm.response.to.have.status(401);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8e72d966-d25b-4b9a-a07a-e598a8609e47",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c55aafdd-8c33-44cf-9e69-fd0fef57a746",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey=aaaaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "56f77e29-6691-4ad8-9109-4ac34a28dfdc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "917ccd76-a41e-43f4-9387-5a66bbfcf783",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Print PDF",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2d98a637-f01d-41a8-a568-d340414f9e93",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "00331cac-77f8-406a-b11d-047af64f326b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/pdf"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId/pdf/print?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId",
                        "pdf",
                        "print"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "066cc4fe-fd99-4820-babd-ed9873454bc4",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1f165295-f989-4f43-91f0-c158d2f42c00",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "b0b0fd91-799a-4373-b796-a7ca5b53bee6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "504f227e-ab17-4997-97d3-cd2c74df1e06",
          "_postman_isSubFolder": true
        },
        {
          "name": "No API Key",
          "item": [
            {
              "name": "Customers",
              "item": [
                {
                  "name": "Enroll One Account",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "691a5e66-ccae-4d87-890f-ab4ae677e22e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                    },
                    "url": "{{baseUrl}}/customers"
                  },
                  "response": []
                },
                {
                  "name": "Consent To Esign",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "fa7a12f7-2eac-4258-800d-4f62fcbfe81c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "contacts",
                        ":contactId",
                        "esignConsent"
                      ],
                      "variable": [
                        {
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "key": "contactId",
                          "value": "{{primaryContactId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "14a0f64f-ac42-479f-a9a2-d90ccfd598b8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/search?searchUserName={{userName}}&institutionId={{institutionId}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        "search"
                      ],
                      "query": [
                        {
                          "key": "searchUserName",
                          "value": "{{userName}}"
                        },
                        {
                          "key": "institutionId",
                          "value": "{{institutionId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Esign Consent Date",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1973ba72-0e95-4356-827e-56dc37579ec6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": "{{baseUrl}}/customers/{{customerId}}/contacts/{{primaryContactId}}/esignConsent"
                  },
                  "response": []
                }
              ],
              "_postman_id": "08e7fa67-d896-4f4b-9947-a03d05fc7a50",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "449fb18f-56cc-434c-b8d2-105b2abfe4bb",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "54c1da51-b04e-49fa-b4fc-a0890d98309a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Depositors",
              "item": [
                {
                  "name": "Unknown",
                  "item": [
                    {
                      "name": "Create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "c7db1e2d-287f-4ff8-8f06-ecb23a52af36",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"{{depositorNameUnknown}}\",\r\n  \"Notes\": \"Test\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                        },
                        "url": "{{baseUrl}}/{{customerId}}/depositors"
                      },
                      "response": []
                    },
                    {
                      "name": "Find",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "f1761bc2-4dfe-430e-aff8-0adb6e50cc49",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/{{customerId}}/depositors?searchName={{depositorNameUnknown}}&latitude={{latitude}}&longitude={{longitude}}",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "{{customerId}}",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "searchName",
                              "value": "{{depositorNameUnknown}}"
                            },
                            {
                              "key": "latitude",
                              "value": "{{latitude}}"
                            },
                            {
                              "key": "longitude",
                              "value": "{{longitude}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "9960bc6f-6b03-4cdd-ad22-931a2148bc93",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Unknown PlaceId",
                  "item": [
                    {
                      "name": "Find PlaceId",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6e7770e3-231f-4c08-8901-770715598451",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "3411edd0-304a-401e-9f66-63d687864740",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/{{customerId}}/depositors?searchName={{depositorNamePlace}}&latitude={{latitude}}&longitude={{longitude}}",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "{{customerId}}",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "searchName",
                              "value": "{{depositorNamePlace}}"
                            },
                            {
                              "key": "latitude",
                              "value": "{{latitude}}"
                            },
                            {
                              "key": "longitude",
                              "value": "{{longitude}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create PlaceId",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "91b6c2c6-3cf4-4f52-9f79-1cb88b287d41",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "df74ae1f-e107-49f0-b727-f637fd0c583a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor2\",\r\n  \"Notes\": \"Test\",\r\n  \"PlaceId\": \"{{placeId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                        },
                        "url": "{{baseUrl}}/{{customerId}}/depositors"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "a79f6b8d-5c98-4a5d-9cda-ab52f9a0a7ad",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7804db2f-0c0d-400b-b2c8-471ad05fc0fe",
                        "exec": [
                          "pm.test(\"Status code is 401\", function () {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "95d0875c-8a05-4c4b-85a5-ab862ff82478",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/{{customerId}}/depositors?searchName={{depositorNameVerified}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "{{customerId}}",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "searchName",
                          "value": "{{depositorNameVerified}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find By Switch Profile Id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9b0e7e54-caf6-4a28-b71a-1b01b715d5c2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": "{{baseUrl}}/{{customerId}}/depositors/{{switchProfileGuid}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "296e50e6-0330-4a35-b7e0-bc92372c7d4d",
              "_postman_isSubFolder": true
            },
            {
              "name": "Switches",
              "item": [
                {
                  "name": "Save",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "71e512e8-e6d4-486b-a5ba-dd7e9e869a9d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\",\r\n      \"SplitAmount\": 0\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": "{{baseUrl}}/customers/{{customerId}}/switches"
                  },
                  "response": []
                },
                {
                  "name": "Update",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7fab9383-d57e-4325-b780-1be2a9f387ce",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\",\r\n      \"SplitAmount\": 0\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3bac77a3-4141-44ae-b1f9-0e2ed23d936b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "386cd37e-9030-47c1-ab39-a77bb4f86d5e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": "{{baseUrl}}/customers/{{customerId}}/switches"
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7427e09c-8205-480e-a0d4-ec262ad7b9f3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchId}}"
                  },
                  "response": []
                },
                {
                  "name": "Delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "30b09f35-56b2-44e9-8f78-c32a6d5df5ba",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchId}}"
                  },
                  "response": []
                },
                {
                  "name": "Get Print PDF",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2d98a637-f01d-41a8-a568-d340414f9e93",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "13d2688d-81be-44ca-9c65-80899a88af23",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/pdf"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchIdPrintOnly}}/pdf/print"
                  },
                  "response": []
                }
              ],
              "_postman_id": "094d808d-d73b-4384-9434-f442c6261303",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1f165295-f989-4f43-91f0-c158d2f42c00",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "b0b0fd91-799a-4373-b796-a7ca5b53bee6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "91f8314e-953b-4ae3-bcb9-88fd2681874e",
          "_postman_isSubFolder": true
        },
        {
          "name": "Cross-Tenant Attack",
          "item": [
            {
              "name": "Customers: Enroll in unauthorized institution",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66fb37a1-05de-4470-aa0f-d22392c4e4c8",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "077bba8c-afc2-4adf-a4d7-730fa6684873",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has the correct error messages\", function () {",
                      "    pm.expect(jsonData.Message).to.equal(\"The request is invalid.\");",
                      "    pm.expect(jsonData.ModelState.apiUserKey[0]).to.equal(\"This API user is not authorized to access this institution.\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "035df13d-694c-40c6-b573-e4d7ac1a70ba",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{$timestamp}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"BranchId\": \"{{branchId2}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"InstitutionId\":  \"{{institutionId2}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"ShouldntExist\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{$guid}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Customers: Enroll (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"SS\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.environment.set(\"customerId\", jsonData.CustomerId);",
                      "pm.environment.set(\"primaryContactId\", jsonData.PrimaryContactId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "c7e6f58c-0f9c-43b9-829c-c78d47bd3c6c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"ConsentToEsign\": true,\r\n  \"InstitutionId\": \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Customers: Find",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b810d4ca-c903-4ff8-853f-5674dfe38312",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/search?apiUserKey={{apiUserKey2}}&searchUserName={{userName}}&institutionId={{institutionId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    },
                    {
                      "key": "searchUserName",
                      "value": "{{userName}}"
                    },
                    {
                      "key": "institutionId",
                      "value": "{{institutionId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Customers: Consent To Esign",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                    "exec": [
                      "pm.test(\"Status code is 401\", function() {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "fa7b0c0d-7a1c-43ef-af2b-849a28a8d85a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/contacts/{{primaryContactId}}/esignConsent?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "contacts",
                    "{{primaryContactId}}",
                    "esignConsent"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Customers: Get Esign Consent Date",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "c10d9bf5-83c0-4cd2-ad0e-f0ce72a3aab5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/contacts/{{primaryContactId}}/esignConsent?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "contacts",
                    "{{primaryContactId}}",
                    "esignConsent"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Depositors: Create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "01d1f3ce-e599-4b1c-b78d-51d673f71508",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Create Depositor Shouldn't Exist\",\r\n  \"Notes\": \"Test creating a depositor with the minimum data.\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/{{customerId}}/depositors?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{customerId}}",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Depositors: Create (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdUnknown', jsonData.CustomerCreatedDepositorId);",
                      "pm.environment.set('switchProfileIdUnknown', jsonData.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "0007328d-d34b-4af9-a806-c2b95579bcbf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"{{depositorNameUnknown}}\",\r\n  \"Notes\": \"Test cross-tenant attack\"\r\n}\r\n"
                },
                "url": {
                  "raw": "{{baseUrl}}/{{customerId}}/depositors?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{customerId}}",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Depositors: Find",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                    "exec": [
                      "pm.test(\"Status code is 401\", function() {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "370cc08a-af83-4807-a4fb-61523a38b27a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{customerId}}/depositors?apiUserKey={{apiUserKey2}}&searchName={{depositorNameUnknown}}&latitude=-92&longitude=47",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{customerId}}",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    },
                    {
                      "key": "searchName",
                      "value": "{{depositorNameUnknown}}"
                    },
                    {
                      "key": "latitude",
                      "value": "-92"
                    },
                    {
                      "key": "longitude",
                      "value": "47"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Save",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "628931bc-540b-450d-a63e-d0bcad4c179d",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "431325a0-9fe5-4f8a-85e2-6f5585d46ba5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/switches?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "switches"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Save (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "628931bc-540b-450d-a63e-d0bcad4c179d",
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "const jsonData = pm.response.json();",
                      "pm.environment.set('switchIdUnknown', jsonData.Id);",
                      "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "a605dbd8-9ced-42b7-853f-acc242d41e3b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/switches?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "switches"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Update",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb96ad79-d6d2-4563-8dd5-6a6c9fec1ef5",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "3de0d7bd-5510-4e62-9ccd-b264d841abd4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchIdUnknown}}?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "switches",
                    "{{switchIdUnknown}}"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Get (Check)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "26731505-88d0-4e29-93db-3b88d51d5da3",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "67e53cf0-1f0c-4df5-8dce-06817a73349e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchIdUnknown}}?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "switches",
                    "{{switchIdUnknown}}"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Get",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "26731505-88d0-4e29-93db-3b88d51d5da3",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "4f012fb4-4683-46ac-a256-6d7586115510",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchIdUnknown}}?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "switches",
                    "{{switchIdUnknown}}"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Get All",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "31156932-59df-474a-a2cc-76b5c9c8f591",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "87b458bc-2640-49ed-ab01-5bc7762362dd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/switches?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "switches"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "5e5fd2a2-9872-4657-bfb3-71a33038b0d7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchIdUnknown}}?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "switches",
                    "{{switchIdUnknown}}"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Update (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb96ad79-d6d2-4563-8dd5-6a6c9fec1ef5",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "64627703-d291-4a81-8ac0-3153d0acd5d1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchIdUnknown}}?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "switches",
                    "{{switchIdUnknown}}"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Submit",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "9d5ceb3b-c432-4e6c-9e11-22a4956bd47b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/{{customerId}}/switches/{{switchIdUnknown}}?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "{{customerId}}",
                    "switches",
                    "{{switchIdUnknown}}"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Depositors: Find by Switch Profile Id (Check)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has the correct depositor id', function() {",
                      "   pm.expect(jsonData.CustomerCreatedDepositorId).to.equal(pm.environment.get(\"depositorIdUnknown\")); ",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "8e08d14f-5829-46d6-8f3b-41e2e573edc0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{customerId}}/depositors/{{switchProfileGuid}}?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{customerId}}",
                    "depositors",
                    "{{switchProfileGuid}}"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Depositors: Find by Switch Profile Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "1dea9def-2601-46ac-b2fb-c139e054e806",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/{{customerId}}/depositors/{{switchProfileGuid}}?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "{{customerId}}",
                    "depositors",
                    "{{switchProfileGuid}}"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "6a487d39-b0b1-4fbc-ac44-495fc9a7d323",
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "a6848e14-23b4-4949-a929-fd7aecc0e73f"
    },
    {
      "name": "Get  Payroll Provider Logo",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "9fa02dca-d160-45d7-a783-d219173769fa",
            "exec": [
              "pm.test(\"Status code is 200\", function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Content-Type is an image\", function() {",
              "    pm.response.to.be.header(\"Content-Type\", \"image/png\");",
              "});",
              "",
              "pm.test(\"Content-Disposition is a PNG file\", function() {",
              "    pm.response.to.be.header(\"Content-Disposition\", \"attachment; filename=00B8729D20B2610ED6080E1E77BF57A997259FDC0714BC32D740AA87DC14AD3F.png\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "ad7ab89e-af45-4613-a890-4394e4bcd5d4",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Ocp-Apim-Subscription-Key",
            "value": "{{ocpApimSubscriptionKey}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/payroll-providers/:payrollProviderId/:imageHash",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "payroll-providers",
            ":payrollProviderId",
            ":imageHash"
          ],
          "variable": [
            {
              "key": "payrollProviderId",
              "value": "{{payrollProviderId}}",
              "type": "string"
            },
            {
              "key": "imageHash",
              "value": "{{imageHash}}",
              "type": "string"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get  Payroll Provider Logo Width Height",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "9fa02dca-d160-45d7-a783-d219173769fa",
            "exec": [
              "pm.test(\"Status code is 200\", function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Content-Type is an image\", function() {",
              "    pm.response.to.be.header(\"Content-Type\", \"image/png\");",
              "});",
              "",
              "pm.test(\"Content-Disposition is a PNG file\", function() {",
              "    pm.response.to.be.header(\"Content-Disposition\", \"attachment; filename=00B8729D20B2610ED6080E1E77BF57A997259FDC0714BC32D740AA87DC14AD3F.png\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "57d182f8-3bfb-41d2-a0ed-8a60f3210eab",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Ocp-Apim-Subscription-Key",
            "value": "{{ocpApimSubscriptionKey}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/payroll-providers/:payrollProviderId/:imageHash?width={{widthHeight}}&height={{widthHeight}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "payroll-providers",
            ":payrollProviderId",
            ":imageHash"
          ],
          "query": [
            {
              "key": "width",
              "value": "{{widthHeight}}"
            },
            {
              "key": "height",
              "value": "{{widthHeight}}"
            }
          ],
          "variable": [
            {
              "key": "payrollProviderId",
              "value": "{{payrollProviderId}}",
              "type": "string"
            },
            {
              "key": "imageHash",
              "value": "{{imageHash}}",
              "type": "string"
            }
          ]
        }
      },
      "response": []
    }
  ]
}