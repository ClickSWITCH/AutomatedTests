{
  "info": {
    "_postman_id": "82023879-8fc3-4b0b-8b3f-04ad5804c9f2",
    "name": "API v2 Regression Test Suite",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "API Key In Query",
      "item": [
        {
          "name": "Customers",
          "item": [
            {
              "name": "Enroll One Account",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "bde9f2aa-6575-4e73-920c-e7e0e7723c32",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll One Account Valid Name Missing Type",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "5ff5bd60-c9c9-410d-8c14-f6fa99d8b9ad",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll One Account Valid Type Missing Name",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "e63430af-7283-445d-95c7-a12be6abf511",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Minimum Data BranchId",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "bff0f874-3d13-4ae1-8094-16077b8e21a8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Minimum Data ExternalBranchId",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "6166b2e5-05fe-4673-83cb-970d2f8c9b24",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{accountName2}}\",\r\n      \"ExternalBranchId\": 123\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Minimum Data RoutingNumber",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "9dcdfd71-ad9a-44ee-beca-79be56e3567d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Consent To Esign False (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.\r",
                      "var timestamp = Date.now();\r",
                      "var randomString = makeRandomString();\r",
                      "pm.environment.set(\"accountNumber\", timestamp);\r",
                      "pm.environment.set(\"userName\", randomString);\r",
                      "\r",
                      "// Creates a random string of length 10.\r",
                      "function makeRandomString() {\r",
                      "  var text = \"\";\r",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
                      "  \r",
                      "  for (var i = 0; i < 10; i++) {\r",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
                      "  }\r",
                      "  \r",
                      "  return text;\r",
                      "}\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "25b13e01-3f30-414f-a319-4fd7166f53b5",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "});",
                      "",
                      "pm.environment.set(\"customerId\", jsonData.CustomerId);",
                      "pm.environment.set(\"primaryContactId\", jsonData.PrimaryContactId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "8eac8ce8-ad87-4965-b7fd-28165b082fa1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    },\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}0\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{accountName2}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": false,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"SecondaryContact\": {\r\n\t\"FirstName\": \"{{userName}}\",\r\n\t\"MiddleInitial\": \"T\",\r\n\t\"LastName\": \"Test Second\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Consent To Esign Change To True (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                    "exec": [
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "// Do not save the time, as it is not returned in GET Esign Consent Date.",
                      "pm.environment.set(\"esignConsentDate\", pm.response.text().substring(1, 11));",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "586e0bb8-f7a1-4ca8-babc-704373fe85f0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "contacts",
                    ":contactId",
                    "esignConsent"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "d0fdfcbb-41a6-4b64-8a3d-13df3ac80841",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "a3844e52-8caa-48f3-90c4-68d1d48af0d5",
                      "key": "contactId",
                      "value": "{{primaryContactId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Esign Consent Date",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct esign consent date\", function() {",
                      "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"esignConsentDate\"));",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "ec09c0ea-7cdd-4fc5-a6ee-1628ab8b588c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "contacts",
                    ":contactId",
                    "esignConsent"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "b6773c2c-cc7f-4f7e-b0d0-bb98492fcea6",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "3caf2ff3-b2eb-4d5e-88af-088e86e4aa45",
                      "key": "contactId",
                      "value": "{{primaryContactId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Joint Account Two Accounts (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.\r",
                      "var timestamp = Date.now();\r",
                      "var randomString = makeRandomString();\r",
                      "pm.environment.set(\"accountNumber\", timestamp);\r",
                      "pm.environment.set(\"userName\", randomString);\r",
                      "\r",
                      "// Creates a random string of length 10.\r",
                      "function makeRandomString() {\r",
                      "  var text = \"\";\r",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
                      "  \r",
                      "  for (var i = 0; i < 10; i++) {\r",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
                      "  }\r",
                      "  \r",
                      "  return text;\r",
                      "}\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "25b13e01-3f30-414f-a319-4fd7166f53b5",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has to correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "});",
                      "",
                      "pm.environment.set(\"customerId\", jsonData.CustomerId);",
                      "pm.environment.set(\"primaryContactId\", jsonData.PrimaryContactId);",
                      "pm.environment.set(\"secondaryContactId\", jsonData.SecondaryContactId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "c4d88f3c-268f-424a-a86f-782fab28e9f6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    },\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}0\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{accountName2}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"SecondaryContact\": {\r\n\t\"FirstName\": \"{{userName}}\",\r\n\t\"MiddleInitial\": \"T\",\r\n\t\"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find Joint Account Two Accounts",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "    ",
                      "    pm.expect(jsonData.CustomerId).to.equal(pm.environment.get('customerId'));",
                      "    pm.expect(jsonData.PrimaryContactId).to.equal(pm.environment.get('primaryContactId'));",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(pm.environment.get('secondaryContactId'));",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "99ba4f56-ce08-4ff6-9b20-3f20c7cbecd5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/search?apiUserKey={{apiUserKey}}&searchUserName={{userName}}&institutionId={{institutionId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    },
                    {
                      "key": "searchUserName",
                      "value": "{{userName}}"
                    },
                    {
                      "key": "institutionId",
                      "value": "{{institutionId}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "891b0de3-c4c6-4411-a748-91eece4549f6",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "2ce49242-731e-4c56-a4e5-458a2365b479",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a16e8d4a-69ad-464f-a8a3-4eb2b8657a45",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Depositors",
          "item": [
            {
              "name": "Unknown",
              "item": [
                {
                  "name": "Create Minimum Data",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                          "    pm.expect(jsonData).to.have.property('Form');",
                          "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                          "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('ProfileId');",
                          "    pm.expect(jsonData).to.have.property('Type');",
                          "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5c577948-a531-4683-9462-04bed08416aa",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Create Depositor\",\r\n  \"Notes\": \"Test creating a depositor with the minimum data.\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "5ec35308-f582-472c-a428-0c23c653f1e5",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                          "    pm.expect(jsonData).to.have.property('Form');",
                          "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                          "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('ProfileId');",
                          "    pm.expect(jsonData).to.have.property('Type');",
                          "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                          "});",
                          "",
                          "pm.environment.set('depositorIdUnknown', jsonData.CustomerCreatedDepositorId);",
                          "pm.environment.set('switchProfileIdUnknown', jsonData.ProfileId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "96653b1b-3caa-4055-8f65-42cb574750b2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"{{depositorNameUnknown}}\",\r\n  \"Notes\": \"Test\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "c8de9a9e-24e0-41cb-acc5-8da65b78a102",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains at least one result\", function() {",
                          "    pm.expect(jsonData.length).to.be.at.least(1);",
                          "});",
                          "",
                          "pm.test(\"Contains customer created depositor\", function() {",
                          "    var foundDepositor = false; ",
                          "    ",
                          "    for (var i = 0; i < jsonData.length; i++) {",
                          "        if (jsonData[i].CustomerCreatedDepositorId === pm.environment.get(\"depositorIdUnknown\")) {",
                          "            foundDepositor = true;",
                          "        }",
                          "    }",
                          "    ",
                          "    pm.expect(foundDepositor).to.be.true;",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "13762d53-9016-41af-8e78-0a22874ef69b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNameUnknown}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        },
                        {
                          "key": "searchName",
                          "value": "{{depositorNameUnknown}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "ad8c0e46-5787-44ad-94c9-e401571e6d32",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "01b814ce-8a60-4b20-abef-5cffb723e472",
              "_postman_isSubFolder": true
            },
            {
              "name": "Unknown PlaceId",
              "item": [
                {
                  "name": "Find PlaceId (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e7770e3-231f-4c08-8901-770715598451",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains at least one result\", function() {",
                          "    pm.expect(jsonData.length).to.be.at.least(1);",
                          "});",
                          "",
                          "pm.test(\"Contains at least one Google result\", function() {",
                          "    var looped = false;",
                          "    var foundGoogle = false;",
                          "    jsonData.forEach(result => {",
                          "        looped = true;",
                          "        if (result.DepositorId === null) {",
                          "            pm.expect(result).to.have.property(\"Address\");",
                          "            pm.expect(result).to.have.property(\"CustomerCreatedDepositorId\");",
                          "            pm.expect(result).to.have.property(\"DepositorId\");",
                          "            pm.expect(result).to.have.property(\"Name\");",
                          "            pm.expect(result).to.have.property(\"PhoneNumber\");",
                          "            pm.expect(result).to.have.property(\"PlaceId\");",
                          "            pm.expect(result).to.have.property(\"SwitchTemplate\");",
                          "            pm.expect(Object.keys(result).length).to.equal(7);",
                          "            foundGoogle = true;",
                          "        }",
                          "    });",
                          "    ",
                          "    pm.expect(looped).to.be.true;",
                          "    pm.expect(foundGoogle).to.be.true;",
                          "});",
                          "",
                          "pm.environment.set('placeId', jsonData[jsonData.length-1].PlaceId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "61030491-23c8-4b0a-a0e8-7fd4db39fb24",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNamePlace}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        },
                        {
                          "key": "searchName",
                          "value": "{{depositorNamePlace}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "3a8de12e-a812-464a-915d-58e28cf22119",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create PlaceId (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "91b6c2c6-3cf4-4f52-9f79-1cb88b287d41",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                          "    pm.expect(jsonData).to.have.property('Form');",
                          "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                          "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('ProfileId');",
                          "    pm.expect(jsonData).to.have.property('Type');",
                          "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                          "});",
                          "",
                          "pm.environment.set('depositorIdPlace', jsonData.CustomerCreatedDepositorId);",
                          "pm.environment.set('switchProfileIdPlace', jsonData.ProfileId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "26ea6351-5b8b-4ab6-8633-ef651a14f8c9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor2\",\r\n  \"Notes\": \"Test\",\r\n  \"PlaceId\": \"{{placeId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "f3788fdf-cb5a-47de-bd35-09d974a373ad",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "4f6794b2-c3a9-491e-8a1a-38c45be54387",
              "_postman_isSubFolder": true
            },
            {
              "name": "Find (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7804db2f-0c0d-400b-b2c8-471ad05fc0fe",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdVerified', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileId', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "d9454b11-4873-4e1c-a757-6043eb81c3f0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNameVerified}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    },
                    {
                      "key": "searchName",
                      "value": "{{depositorNameVerified}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "9537c602-a652-4c63-910f-6d7a66898891",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find ENR Depositor (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7804db2f-0c0d-400b-b2c8-471ad05fc0fe",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function () {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.test(\"Results names do not contain #ENR#\", function () {",
                      "    var looped = false;",
                      "    for (var i = 0; i < jsonData.length; i++) {",
                      "        looped = true;",
                      "        pm.expect(jsonData[i].Name).to.not.include(\"#ENR#\");",
                      "    }",
                      "    pm.expect(looped).to.be.true;",
                      "});",
                      "",
                      "pm.environment.set(\"depositorIdEnr\", jsonData[0].DepositorId);",
                      "",
                      "pm.test(\"Set the expected depositorIdEnr\", function () {",
                      "    pm.expect(pm.environment.get(\"depositorIdEnr\")).to.equal(14003);",
                      "});",
                      "",
                      "pm.environment.set(\"switchProfileIdEnr\", jsonData[0].SwitchTemplate.ProfileId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "629135b4-541f-4a12-94ff-edc9682d5c95",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNameEnr}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    },
                    {
                      "key": "searchName",
                      "value": "{{depositorNameEnr}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "9537c602-a652-4c63-910f-6d7a66898891",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find Print Only (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f9c3a917-2269-44ef-aa97-3b528286bc11",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdPrintOnly', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileIdPrintOnly', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "94aaa91a-f393-4d2a-8db6-4b7d28f9801d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNamePrintOnly}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    },
                    {
                      "key": "searchName",
                      "value": "{{depositorNamePrintOnly}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "9c199d67-6a6a-44bd-aa56-62e0571ae932",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find Online Only (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c93e0824-aba4-4f3b-bffe-12b066e8bc50",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdOnlineOnly', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileIdOnlineOnly', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "faa323ed-8dfd-43c4-bbfb-850a7f652dd9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}&searchName={{depositorNameOnlineOnly}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    },
                    {
                      "key": "searchName",
                      "value": "{{depositorNameOnlineOnly}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "90f8ad20-3d00-438f-b3d8-8d2617de7ecc",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "df6b2e8d-d559-481c-b8d3-1debe03f0e8f",
          "_postman_isSubFolder": true
        },
        {
          "name": "Switches",
          "item": [
            {
              "name": "Unknown",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "628931bc-540b-450d-a63e-d0bcad4c179d",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          "",
                          "pm.environment.set('switchIdUnknown', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f66c417c-7fca-48be-a6d4-45fb87bf4bff",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "4205f997-6d8c-4d60-90d3-42a1baa96aa8",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb96ad79-d6d2-4563-8dd5-6a6c9fec1ef5",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "73e4c35c-d959-4e72-832f-9fefb1b33103",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "51e480b6-2c48-40b9-bbc3-9383fe5ea127",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "9354e1b1-114d-4c32-a255-81351a3ed306",
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "26731505-88d0-4e29-93db-3b88d51d5da3",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "564f330e-9a64-474d-88d9-b1e2d5d11d98",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "8089e255-ebe7-4669-ad76-a94a3d33606a",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "a8ec241a-184e-419a-8e03-8d390387badc",
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "31156932-59df-474a-a2cc-76b5c9c8f591",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(1); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b1c1ef33-a00f-4eea-8f38-a4c0c3452585",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "8ef100ad-f1d5-450e-a24b-f9bbf1627885",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "02fce7ab-1df3-46c7-bfe9-e769d6fc2443",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "cf3ac7f1-b132-4a87-aeb5-927c83b43965",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "3066120a-d120-48a3-b1d2-4a016fa7f211",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "e28dbdc0-e300-4ede-a448-4b7eb5a9bad4",
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdUnknown\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7df57775-6b08-4b68-a438-11bf7b3674cc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "a186f5bf-2cc3-4913-809f-548106b8b2b8",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "c3b6d99e-1139-4c52-99fb-8952fecfc0b6",
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "3815ad50-836e-4b38-b6f9-bfcd9717d8ad",
              "_postman_isSubFolder": true
            },
            {
              "name": "Unknown PlaceId",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a30754e4-17a2-43d9-8787-be0c751d51ab",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          "",
                          "pm.environment.set('switchIdPlace', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "25d34efd-a179-41c8-8ede-141a5cdd79e3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdPlace}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPlace}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "c0b30914-7564-4208-8367-3d6ad8dee480",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update and Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "902aa43e-3c6c-4679-ab6b-841eed38a774",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "90c90535-5e7f-495b-9866-1088032cec95",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdPlace}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPlace}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}&submitOnSave=true",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        },
                        {
                          "key": "submitOnSave",
                          "value": "true"
                        }
                      ],
                      "variable": [
                        {
                          "id": "25cdb076-15d8-4f94-9dff-7eac1202490d",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "a16e9aa4-67cb-4a4e-a490-a3c649a9d129",
                          "key": "switchId",
                          "value": "{{switchIdPlace}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdPlace\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f94448fd-293f-4c3a-939e-8b1f40cf12f2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "80dcaf0d-77d7-4537-a165-224fd405bf87",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "617407ac-ec42-46a6-9822-c21015038beb",
                          "key": "switchId",
                          "value": "{{switchIdPlace}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "c33d1929-b9ac-4596-a3f0-4e2d47635ff1",
              "_postman_isSubFolder": true
            },
            {
              "name": "Percentage",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchId', jsonData.Id);",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b7c525bf-a391-44e5-9baf-e2713b85dbe5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "448916d3-aabf-4ae8-9488-a7914145debc",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7d282dbf-1680-4434-b5e7-95e457e21964",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "b236c171-edf8-4355-8b8a-5b10a77974bc",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "7ec6d105-cd46-4e95-a380-e9b511a63adf",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b0894b99-e499-4549-a808-37c7c20d375c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "ea1cbee2-6548-40cd-a9bb-846c2e775dd6",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "e3bebc75-9a33-41f4-88d4-e84c87809b76",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(3); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a25cdd83-4e6d-4579-9262-b7e16503afa9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "e37a758d-6e3e-44ee-a001-45d18fce8e2f",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7eecfc10-f9c0-4d9a-9598-b2fea8b851ba",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "bd2ad82d-e6ee-4ab0-8a44-ec72c82ac00c",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "54071197-13ed-4deb-8d3c-1729900d9423",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchId\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "83a17852-82fd-408c-bad6-331f98979619",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "0e9dc28f-60be-49bd-89e2-0f1bb8cf54fd",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "a51ed0fc-af0a-4f1c-a200-fd71f4f19cc5",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "8c179c99-c76f-4ba2-834c-427abd118e01",
              "_postman_isSubFolder": true
            },
            {
              "name": "Currency",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 55,",
                          "        \"SplitUnitType\": \"Currency\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchId', jsonData.Id);",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9621eb28-102b-45f2-ae12-07caa49c1489",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Currency\",\r\n      \"SplitAmount\": 55\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "57306926-82ff-4799-ab5f-e672470bccf1",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 55,",
                          "        \"SplitUnitType\": \"Currency\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "eba40cd2-bd85-4090-9ed5-7687fd138d18",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Currency\",\r\n      \"SplitAmount\": 55\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "c84cb596-f8f8-4f9c-adef-777c4792f713",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "5997fa90-549a-44ca-92f9-afea27dd50c7",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 55,",
                          "        \"SplitUnitType\": \"Currency\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a2867234-1574-4664-8a7a-356d9059bc82",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "9a9dc7e6-b524-4d9a-bc18-99dbf2e99ce4",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "1504e4d3-09c8-47b7-910a-7f7f7f85bc7b",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(4); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "da4b992d-c991-40da-b3a9-bc413b6343a3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "09227960-78f4-439b-ab52-6677ebaf8545",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ad4dab87-c584-484f-8b2e-273e461ea501",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "178b968e-6c38-422e-9781-74d95d9f0f20",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "60abdd30-e21f-4eb0-9f98-47369ba2bb72",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "fb5ca248-b963-4197-ba0f-19577d442af9",
              "_postman_isSubFolder": true
            },
            {
              "name": "Remainder",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Remainder\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchId', jsonData.Id);",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "49072459-840f-4cce-a9ee-f8a08f17acff",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "15ffc0da-4258-45c8-9eca-98ed78c9005d",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Remainder\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "81c3ba60-0e01-45e5-9a6d-aa055013d625",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "c5255db2-ac70-4302-8fca-803e42fc7354",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "cefeb97e-aae4-43fa-8378-255e3a804497",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Remainder\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f99e3c00-22ca-4317-859c-0c56049d7cf1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "105ec3ed-411e-45af-97a1-940d4e538c5f",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "ac061b8b-d48e-465b-9a6d-d9f500eb2f43",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(5); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f05ae86c-c3d5-4143-8c59-62e35434d670",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "fc334f7e-150e-4a6e-bc64-9b4996a45367",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "78fbc09e-f7f9-4848-bdba-634cb1f89be1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "5956bdb2-cd69-4e64-acbb-cd448a15a35d",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "44681c51-4d69-498b-8a42-67a1e24fe1c1",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct error message\", function() {",
                          "   pm.expect(jsonData.Description).to.equal(\"The switch has already been submitted to ClickSWITCH.\"); ",
                          "   pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "   pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchId\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "aca1126d-91b2-4b6a-895c-b7e7d4a568a3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "2b312d50-1651-4d11-a1a9-c7375574f632",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "8a8b15a3-0b36-4398-b54b-6c1f8590607a",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "f265d8c9-e38c-414b-878d-8b150d013eb8",
              "_postman_isSubFolder": true
            },
            {
              "name": "Online Only",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8f62bfcb-b75e-4e7f-b135-14523c7ac6e0",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "    pm.expect(jsonData.Status).to.equal(\"TrackOnly\");",
                          "});",
                          "",
                          "pm.environment.set('switchIdOnlineOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b689c599-c7f4-4290-827d-ea230a6f40f4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdOnlineOnly}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdOnlineOnly}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "7a797b68-34f1-48f5-9dd1-dea281eacb81",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a88323bb-4491-40b6-abf9-567eca09d2eb",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "    pm.expect(jsonData.Status).to.equal(\"TrackOnly\");",
                          "});",
                          "",
                          "pm.environment.set('switchIdPrintOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7bb7009b-635d-43da-9d12-103d902c0b78",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "0bf97ed0-5a4f-4168-a090-f95c0e8a7b7d",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "de072d97-3edf-4f0f-8af6-c5ea90e00fac",
                          "key": "switchId",
                          "value": "{{switchIdOnlineOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ae86877f-9cc3-4406-988d-4e58a1c11ded",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(6); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a2f28bb0-69f6-41c5-8046-2c87bfe52bc3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "72693007-b58b-4f3b-bf5e-b5de735c9412",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ef91648-9fe8-494d-af17-e932f52229bb",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct error message\", function() {",
                          "   pm.expect(jsonData.Description).to.equal(\"The switch has already been submitted to ClickSWITCH.\"); ",
                          "   pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "   pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdOnlineOnly\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "34cf2819-53ad-41c0-ae00-ae6ee7b9374d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "fd4e48f3-e105-4a10-9c9f-2f4662cde2cb",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "4af5f7f6-6bfe-4002-9443-b9f1f4683de5",
                          "key": "switchId",
                          "value": "{{switchIdOnlineOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "1363a10e-3347-44e8-ae59-d200e42176dd",
              "_postman_isSubFolder": true
            },
            {
              "name": "Print Only",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "556cbd47-d4f4-42a9-a5a5-2d44103f03a3",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchIdPrintOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3df61ecd-2e27-46cc-9ccd-8d808d92ab93",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdPrintOnly}}\",\r\n  \"FormFields\": [\r\n\t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPrintOnly}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "24333885-8846-4170-91c0-c008f230b55e",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5e126f13-faf5-4985-87b5-329f33bf9f6d",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "4fb34d48-6377-490f-acd2-b54b7138a42a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "d5cf23e7-bc94-4920-8970-acf9f195ca73",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "bd884e48-fed0-45dc-a0f0-57db9b62e6b0",
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d4298fad-c7d4-40ac-b18c-6b61a0435111",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(7); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "18543df0-aa4d-4baa-8547-69e6d46971c3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "f7cad548-899d-4265-b7de-6c9fc06c8eb9",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit PrintOnly Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "70f6644c-9545-4d93-84a8-4dfe18c89677",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct error message\", function() {",
                          "   pm.expect(jsonData.Description).to.equal(\"The switch can only be printed.\");",
                          "   pm.expect(jsonData.ErrorCode).to.eql(\"PrintOnly\");",
                          "   pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdPrintOnly\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "41c921f8-219b-431f-8133-cc5317c61aab",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "3bf0f4b0-09d1-426c-85dc-59ec68116ca7",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "edff387a-76c3-4a3c-ac86-6a0bb46ef0b1",
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Print PDF",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2d98a637-f01d-41a8-a568-d340414f9e93",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Response contains some data\", function() {",
                          "   pm.expect(jsonData).to.not.equal(null);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "993cf640-84c9-4b12-b096-a166f37fa36e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/pdf"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId/pdf/print?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId",
                        "pdf",
                        "print"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "b34520fd-d9d3-4ce3-b3be-76ac0c73cd70",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "bbdba00b-9552-4526-b153-341c4bfe685c",
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "afa4e300-708e-4e6c-95c9-a258466b1d18",
              "_postman_isSubFolder": true
            },
            {
              "name": "ENR",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function () {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function () {",
                          "   var accounts =",
                          "        {",
                          "            AccountName: pm.environment.get('accountName'),",
                          "            AccountNumber: pm.environment.get('accountNumber').toString(),",
                          "            AccountType: pm.environment.get('accountTypeChecking'),",
                          "            InstitutionName: pm.environment.get('institutionName'),",
                          "            RoutingNumber: pm.environment.get('routingNumber'),",
                          "            SplitAmount: null,",
                          "            SplitUnitType: \"Remainder\"",
                          "        };",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function () {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test(\"Has the correct number of form fields\", function () {",
                          "    pm.expect(jsonData.FormFields).to.have.length(5);",
                          "});",
                          "",
                          "pm.environment.set(\"switchIdEnr\", jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c576b255-afb0-49af-839c-8cf7fd446207",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdEnr}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdEnr}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "448916d3-aabf-4ae8-9488-a7914145debc",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function () {",
                          "   var accounts =",
                          "        {",
                          "            AccountName: pm.environment.get('accountName'),",
                          "            AccountNumber: pm.environment.get('accountNumber').toString(),",
                          "            AccountType: pm.environment.get('accountTypeChecking'),",
                          "            InstitutionName: pm.environment.get('institutionName'),",
                          "            RoutingNumber: pm.environment.get('routingNumber'),",
                          "            SplitAmount: null,",
                          "            SplitUnitType: \"Remainder\"",
                          "        };",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test(\"Has the correct number of form fields\", function () {",
                          "    pm.expect(jsonData.FormFields).to.have.length(5);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "11846604-ed00-48b6-81b3-71a784aa0057",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdEnr}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"TextBox\",\r\n      \"Value\": \"123456789\",\r\n      \"VariableName\": \"ENR_SSN\"\r\n    },\r\n    {\r\n      \"Type\": \"CheckBox\",\r\n      \"Value\": \"True\",\r\n      \"VariableName\": \"ENR_RepPayeePresent\"\r\n    },\r\n    {\r\n      \"Type\": \"TextBox\",\r\n      \"Value\": \"Rep Payee Name\",\r\n      \"VariableName\": \"ENR_RepPayeeName\"\r\n    },\r\n    {\r\n      \"Type\": \"TextBox\",\r\n      \"Value\": \"FirstName\",\r\n      \"VariableName\": \"ENR_CustomerFirstName\"\r\n    },\r\n    {\r\n      \"Type\": \"TextBox\",\r\n      \"Value\": \"LastName\",\r\n      \"VariableName\": \"ENR_CustomerLastName\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdEnr}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "a98d78db-ecff-4771-b64e-422587a57602",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "d51420a8-142b-48b2-aa7a-2eb90ade56ff",
                          "key": "switchId",
                          "value": "{{switchIdEnr}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function () {",
                          "   var accounts =",
                          "        {",
                          "            AccountName: pm.environment.get('accountName'),",
                          "            AccountNumber: pm.environment.get('accountNumber').toString(),",
                          "            AccountType: pm.environment.get('accountTypeChecking'),",
                          "            InstitutionName: pm.environment.get('institutionName'),",
                          "            RoutingNumber: pm.environment.get('routingNumber'),",
                          "            SplitAmount: null,",
                          "            SplitUnitType: \"Remainder\"",
                          "        };",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test(\"Has the correct number of form fields\", function () {",
                          "    pm.expect(jsonData.FormFields).to.have.length(5);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9ef20509-28e1-41be-bdc2-4a4813643811",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "b2c13873-eef4-48f4-a654-f383cc7045f3",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "64a67b5b-b1cc-4ccd-9c6a-32c3788ef8a6",
                          "key": "switchId",
                          "value": "{{switchIdEnr}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(8); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b81a98bf-6d82-4136-bb37-79cbbd0dc93d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "e37a758d-6e3e-44ee-a001-45d18fce8e2f",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Has the correct response\", function () {",
                          "    pm.expect(pm.response.json()).to.deep.equal(",
                          "        {",
                          "            SwitchId: pm.environment.get(\"switchIdEnr\"),",
                          "            EffectiveDate: null,",
                          "            Status: \"OpenRequest\",",
                          "            PayrollProvider: null,",
                          "            IsPrintable: false",
                          "        }",
                          "    );",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "834a5183-dfbc-4404-bfd3-f3292b6b3b95",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "cb497a6f-9913-4936-88e1-a827155f591a",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "9186bd7b-90c7-46a2-b895-36ed300280f2",
                          "key": "switchId",
                          "value": "{{switchIdEnr}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "b2f058ff-cf15-4a30-add8-b7d3ac803dbc",
              "_postman_isSubFolder": true
            },
            {
              "name": "Save And Delete",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9e3657a8-ddab-455c-9ffb-66856a47aec5",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.environment.set('switchIdDelete', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c615ffd8-34d4-44f1-aeb5-27e54b1e5d1d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "f9bf09c4-c221-4045-9d45-f9cb08a716f4",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "pm.test(\"Status code is 204\", function () {",
                          "    pm.response.to.have.status(204);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "72944f96-265f-4cff-a6e7-7e2e89439e8f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "fe2e52d2-1564-471f-94af-0f1441ecd5e8",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "5da10e8e-a6b4-451b-96e7-a4da627c95ab",
                          "key": "switchId",
                          "value": "{{switchIdDelete}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get 404 Not Found",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 404\", function() {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Content-Length is 0\", function() {",
                          "    pm.response.to.be.header(\"Content-Length\", \"0\");",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "15d319a0-25db-4365-914f-6c67d225d1ae",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "703a9b36-e7f3-438d-aef8-991e28600d2e",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "de6f3850-f82f-4fdb-9b1c-3dfd9f5e74ee",
                          "key": "switchId",
                          "value": "{{switchIdDelete}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(8); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1f3be9af-e115-4beb-8117-47c38adb35da",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "{{apiUserKey}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "e2d8b778-bd39-49fa-9a2b-5017e895a97e",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "287f4b5d-c8ed-4dec-a229-e24be20c6448",
              "_postman_isSubFolder": true
            },
            {
              "name": "Depositors Find By Switch Profile Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Address');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('Name');",
                      "    pm.expect(jsonData).to.have.property('PhoneNumber');",
                      "    pm.expect(jsonData).to.have.property('PlaceId');",
                      "    pm.expect(jsonData).to.have.property('SwitchTemplate');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositorId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositSplitInfo');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('Form');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('IsSplittingDepositsPossible');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('OnlineOnlyInstructions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('PrintOnlyInstructions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('ProfileId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('Type');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('TermsAndConditions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeCheckingLimit');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeSavingsLimit');",
                      "});",
                      "",
                      "pm.test('Has the correct depositor id', function() {",
                      "   pm.expect(jsonData.DepositorId).to.equal(pm.environment.get(\"depositorIdVerified\")); ",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "8956b039-a4b9-4a6a-80b1-5db506995e56",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors/:switchProfileGuid?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors",
                    ":switchProfileGuid"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "11286eb5-d347-40ce-8793-19aad2b3b748",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "70fe7aa2-ab24-4e4e-866a-6dee6c097db0",
                      "key": "switchProfileGuid",
                      "value": "{{switchProfileGuid}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "81a36149-f9ad-420b-8e5f-548c3565ffdb",
          "_postman_isSubFolder": true
        },
        {
          "name": "Status Unauthenticated",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e2f3766-afdf-4c8c-b4c7-a549044dfee2",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Has required elements\", function() {",
                  "    pm.expect(jsonData).to.have.property('Version');",
                  "    pm.expect(jsonData.Authenticated).to.be.false;",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "026e4644-c0c9-4702-809e-75f125fee87d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{ocpApimSubscriptionKey}}"
              }
            ],
            "url": "{{baseUrl}}/status"
          },
          "response": []
        },
        {
          "name": "Status Authenticated",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e2f3766-afdf-4c8c-b4c7-a549044dfee2",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Has required elements\", function() {",
                  "    pm.expect(jsonData).to.have.property('Version');",
                  "    pm.expect(jsonData.Authenticated).to.be.true;",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "9e13a033-95ed-4ca0-8d70-8bc72ac4e465",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{ocpApimSubscriptionKey}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/status?apiUserKey={{apiUserKey}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "status"
              ],
              "query": [
                {
                  "key": "apiUserKey",
                  "value": "{{apiUserKey}}"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "_postman_id": "d3cb3d12-6048-4916-ae9d-8e3e49db38c4"
    },
    {
      "name": "API Key In Header",
      "item": [
        {
          "name": "Customers",
          "item": [
            {
              "name": "Enroll Consent To Esign False (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.\r",
                      "var timestamp = Date.now();\r",
                      "var randomString = makeRandomString();\r",
                      "pm.environment.set(\"accountNumber\", timestamp);\r",
                      "pm.environment.set(\"userName\", randomString);\r",
                      "\r",
                      "// Creates a random string of length 10.\r",
                      "function makeRandomString() {\r",
                      "  var text = \"\";\r",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
                      "  \r",
                      "  for (var i = 0; i < 10; i++) {\r",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
                      "  }\r",
                      "  \r",
                      "  return text;\r",
                      "}\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "25b13e01-3f30-414f-a319-4fd7166f53b5",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "});",
                      "",
                      "pm.environment.set(\"customerId\", jsonData.CustomerId);",
                      "pm.environment.set(\"primaryContactId\", jsonData.PrimaryContactId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "d83e90de-893a-47ad-bbf6-6d3923c0f08a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    },\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}0\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{accountName2}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": false,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"SecondaryContact\": {\r\n\t\"FirstName\": \"{{userName}}\",\r\n\t\"MiddleInitial\": \"T\",\r\n\t\"LastName\": \"Test Second\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": "{{baseUrl}}/customers"
              },
              "response": []
            },
            {
              "name": "Consent To Esign Change To True (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                    "exec": [
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "// Do not save the time, as it is not returned in GET Esign Consent Date.",
                      "pm.environment.set(\"esignConsentDate\", pm.response.text().substring(1, 11));",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "052247eb-9ed8-455c-a820-414c1eff46a5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "contacts",
                    ":contactId",
                    "esignConsent"
                  ],
                  "variable": [
                    {
                      "id": "642a2138-2629-4737-8155-2e471a6143d8",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "5e25e2f9-5ecc-4780-858e-737f92e2e55d",
                      "key": "contactId",
                      "value": "{{primaryContactId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Esign Consent Date",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct esign consent date\", function() {",
                      "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"esignConsentDate\"));",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "93f6b0b1-303e-4aba-8bee-8a349c91329e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "contacts",
                    ":contactId",
                    "esignConsent"
                  ],
                  "variable": [
                    {
                      "id": "0e0e8f5d-9966-438d-be11-50a3a654d20c",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "1f3833a7-cfab-4825-8f61-684a3a05e2ce",
                      "key": "contactId",
                      "value": "{{primaryContactId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enroll Joint Account Two Accounts (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.\r",
                      "var timestamp = Date.now();\r",
                      "var randomString = makeRandomString();\r",
                      "pm.environment.set(\"accountNumber\", timestamp);\r",
                      "pm.environment.set(\"userName\", randomString);\r",
                      "\r",
                      "// Creates a random string of length 10.\r",
                      "function makeRandomString() {\r",
                      "  var text = \"\";\r",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
                      "  \r",
                      "  for (var i = 0; i < 10; i++) {\r",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));\r",
                      "  }\r",
                      "  \r",
                      "  return text;\r",
                      "}\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "25b13e01-3f30-414f-a319-4fd7166f53b5",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has to correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "});",
                      "",
                      "pm.environment.set(\"customerId\", jsonData.CustomerId);",
                      "pm.environment.set(\"primaryContactId\", jsonData.PrimaryContactId);",
                      "pm.environment.set(\"secondaryContactId\", jsonData.SecondaryContactId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "3fe4747c-e87c-43a4-90cf-0f2d42467c69",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    },\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}0\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{accountName2}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"SecondaryContact\": {\r\n\t\"FirstName\": \"{{userName}}\",\r\n\t\"MiddleInitial\": \"T\",\r\n\t\"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": "{{baseUrl}}/customers"
              },
              "response": []
            },
            {
              "name": "Find Joint Account Two Accounts",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has the correct ids\", function() {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "    ",
                      "    pm.expect(jsonData.CustomerId).to.equal(pm.environment.get('customerId'));",
                      "    pm.expect(jsonData.PrimaryContactId).to.equal(pm.environment.get('primaryContactId'));",
                      "    pm.expect(jsonData.SecondaryContactId).to.equal(pm.environment.get('secondaryContactId'));",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "35b92ecd-6e38-49d6-a710-2dea4000e42a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/search?searchUserName={{userName}}&institutionId={{institutionId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "searchUserName",
                      "value": "{{userName}}"
                    },
                    {
                      "key": "institutionId",
                      "value": "{{institutionId}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "b4040264-5127-4ec5-a2f3-3fb76b5bd574",
          "_postman_isSubFolder": true
        },
        {
          "name": "Depositors",
          "item": [
            {
              "name": "Unknown",
              "item": [
                {
                  "name": "Create (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                          "    pm.expect(jsonData).to.have.property('Form');",
                          "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                          "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('ProfileId');",
                          "    pm.expect(jsonData).to.have.property('Type');",
                          "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                          "});",
                          "",
                          "pm.environment.set('depositorIdUnknown', jsonData.CustomerCreatedDepositorId);",
                          "pm.environment.set('switchProfileIdUnknown', jsonData.ProfileId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "83507352-f80d-4dcd-babd-8d97ee68caf0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"{{depositorNameUnknown}}\",\r\n  \"Notes\": \"Test\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "variable": [
                        {
                          "id": "ab06d42b-2a97-4294-b505-1d19d491944a",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains at least one result\", function() {",
                          "    pm.expect(jsonData.length).to.be.at.least(1);",
                          "});",
                          "",
                          "pm.test(\"Contains customer created depositor\", function() {",
                          "    var foundDepositor = false; ",
                          "    ",
                          "    for (var i = 0; i < jsonData.length; i++) {",
                          "        if (jsonData[i].CustomerCreatedDepositorId === pm.environment.get(\"depositorIdUnknown\")) {",
                          "            foundDepositor = true;",
                          "        }",
                          "    }",
                          "    ",
                          "    pm.expect(foundDepositor).to.be.true;",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1e187347-ab9f-4686-9b69-2b7ccbdc4cc2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNameUnknown}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "searchName",
                          "value": "{{depositorNameUnknown}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "42b64835-6c18-498d-9af6-b49a21c6caae",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "254c4239-dbd4-4f27-88c4-a6646981f85f",
              "_postman_isSubFolder": true
            },
            {
              "name": "Unknown PlaceId",
              "item": [
                {
                  "name": "Find PlaceId (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e7770e3-231f-4c08-8901-770715598451",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains at least one result\", function() {",
                          "    pm.expect(jsonData.length).to.be.at.least(1);",
                          "});",
                          "",
                          "pm.environment.set('placeId', jsonData[jsonData.length-1].PlaceId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8f929113-7cbb-42e5-b692-80cd9b32669a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNamePlace}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "searchName",
                          "value": "{{depositorNamePlace}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "2c8252a7-0732-400c-84cc-c9eadd13949e",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create PlaceId (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "91b6c2c6-3cf4-4f52-9f79-1cb88b287d41",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                          "    pm.expect(jsonData).to.have.property('Form');",
                          "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                          "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                          "    pm.expect(jsonData).to.have.property('ProfileId');",
                          "    pm.expect(jsonData).to.have.property('Type');",
                          "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                          "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                          "});",
                          "",
                          "pm.environment.set('depositorIdPlace', jsonData.CustomerCreatedDepositorId);",
                          "pm.environment.set('switchProfileIdPlace', jsonData.ProfileId);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b3cff84a-f283-49cc-8b1f-8f7650755a93",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor2\",\r\n  \"Notes\": \"Test\",\r\n  \"PlaceId\": \"{{placeId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "variable": [
                        {
                          "id": "75663f1f-ca3d-4412-b323-378cfa82377d",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "2efd01c2-bce4-4464-b954-21a28daa112d",
              "_postman_isSubFolder": true
            },
            {
              "name": "Find (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7804db2f-0c0d-400b-b2c8-471ad05fc0fe",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdVerified', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileId', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b1f70a94-88c5-4f83-9955-d3d6e4757223",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNameVerified}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "searchName",
                      "value": "{{depositorNameVerified}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "87b3edb8-688e-40a6-bba0-b9009f161680",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find Print Only (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f9c3a917-2269-44ef-aa97-3b528286bc11",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdPrintOnly', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileIdPrintOnly', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b731e054-6ab2-44d9-9fb7-4645ee5d1f56",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNamePrintOnly}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "searchName",
                      "value": "{{depositorNamePrintOnly}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "f1b8afa5-f7d3-443f-b474-582d4519960b",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Find Online Only (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c93e0824-aba4-4f3b-bffe-12b066e8bc50",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function() {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdOnlineOnly', jsonData[0].DepositorId);",
                      "pm.environment.set('switchProfileIdOnlineOnly', jsonData[0].SwitchTemplate.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "79e89857-527c-4a39-b6a0-0ea2ae36bba2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNameOnlineOnly}}&latitude={{latitude}}&longitude={{longitude}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "searchName",
                      "value": "{{depositorNameOnlineOnly}}"
                    },
                    {
                      "key": "latitude",
                      "value": "{{latitude}}"
                    },
                    {
                      "key": "longitude",
                      "value": "{{longitude}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "049694e2-03e0-4382-90e7-6b6df12798ff",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "f45f1efd-a3c2-4751-802e-5c57588c3846",
          "_postman_isSubFolder": true
        },
        {
          "name": "Switches",
          "item": [
            {
              "name": "Unknown",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "628931bc-540b-450d-a63e-d0bcad4c179d",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          "",
                          "pm.environment.set('switchIdUnknown', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "db126130-ff3e-4029-b622-6ee93d4d690c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "0e9ea832-8380-4c9a-8526-d3d0812a9f44",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb96ad79-d6d2-4563-8dd5-6a6c9fec1ef5",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "20bac4b9-7cdd-459a-8095-b574a0630796",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "db94b032-3914-4ec6-a9a0-806c47ac78c7",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "55459c4f-e4eb-4c5c-a4f8-3e0ffcbef7dc",
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "26731505-88d0-4e29-93db-3b88d51d5da3",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ef676909-2bc5-4e32-84a7-d7c10a904b5f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "691db14c-c112-45be-b597-ed4f62dff916",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "f9cd0652-25a5-4980-91e8-7e8ad27864d4",
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "31156932-59df-474a-a2cc-76b5c9c8f591",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(1); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e6558527-8ac8-42a8-9c12-bc58507fe527",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "027c04c3-db73-419d-b112-5b9e33d58335",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "02fce7ab-1df3-46c7-bfe9-e769d6fc2443",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "58c327ff-86de-47e9-82c6-31e9c8429c42",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "da3149a5-4043-4046-a08c-f9569360c262",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "9c3949d1-e539-41be-937b-a96e935e4733",
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdUnknown\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7ceb4c5e-70ca-4b1d-b5a5-618b0f4ff02d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "43b38600-5ba8-473a-b7b3-7c1365c7a3e6",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "d296281b-10b0-4213-809a-59a02c356249",
                          "key": "switchId",
                          "value": "{{switchIdUnknown}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "d22a63fc-e27f-4514-ad6e-66ef542787cd",
              "_postman_isSubFolder": true
            },
            {
              "name": "Unknown PlaceId",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a30754e4-17a2-43d9-8787-be0c751d51ab",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function () {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                          "});",
                          "",
                          "pm.environment.set('switchIdPlace', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c0267814-1a1f-4853-9223-259e2a47fb32",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdPlace}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPlace}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "71e533f9-05f7-4dc7-9ae9-95d54605a5bf",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update and Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "902aa43e-3c6c-4679-ab6b-841eed38a774",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 202\", function() {",
                          "    pm.response.to.have.status(202);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7c3487d2-8ffd-43a8-ae96-377b38f20512",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdPlace}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPlace}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?submitOnSave=true",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "submitOnSave",
                          "value": "true"
                        }
                      ],
                      "variable": [
                        {
                          "id": "8127c517-1e3a-4019-b31e-b388792d68dd",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "3a4c37c8-77ac-4f5a-9f0a-5700a8a716d1",
                          "key": "switchId",
                          "value": "{{switchIdPlace}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdPlace\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "43970cfa-2394-4860-af9e-d865ef7b172a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "339936c4-10a1-4153-b2c7-b802d9a20ec0",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "012d2b72-e612-4388-8403-fd10c5be2453",
                          "key": "switchId",
                          "value": "{{switchIdPlace}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "82147e43-d1de-4f63-a79e-8922315c227e",
              "_postman_isSubFolder": true
            },
            {
              "name": "Percentage",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchId', jsonData.Id);",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a794df71-398a-4364-b89f-86acb2dc4156",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "5d9ca0cd-4e29-4201-b0cc-9f192938e026",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3aa156a5-841d-48a1-be52-923fea21c076",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "e9c8fa4c-3064-46ea-bcf4-6ac9e16733ab",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "397ff54f-7ce9-45d4-b263-37925af97df1",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a485ec2c-92f8-46d9-9a8b-4b9f12e4c966",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "a3aef789-62bb-454a-8cce-23a1189424a3",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "2199ee1e-96eb-4feb-8774-ea2b14740220",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(3); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5dfdaea2-d9e5-45c1-92b0-36b5ce20885a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "9922024b-a5ec-4107-9e92-bbd2db261892",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('SwitchId');",
                          "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f259783a-babc-4bf3-ab85-73d514050ae9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "8b111b9c-b8fd-4017-8907-35ff8128646c",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "368b2fa8-e61a-4b6b-812f-96958cb1e290",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test('Has correct elements', function() {",
                          "    pm.expect(jsonData.Description).to.eql(\"The switch is not in a deletable state.\");",
                          "    pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "    pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchId\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b0186a6c-6ef5-4ab4-82ce-24e6565eaade",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "69e45dd9-e758-4821-9fff-67adb2869abf",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "e1e37674-9648-40e3-8b5a-c715ef8d3130",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "2b06a3e6-f4c3-4b2e-bdfd-f259694f431f",
              "_postman_isSubFolder": true
            },
            {
              "name": "Online Only",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8f62bfcb-b75e-4e7f-b135-14523c7ac6e0",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "    pm.expect(jsonData.Status).to.equal(\"TrackOnly\");",
                          "});",
                          "",
                          "pm.environment.set('switchIdOnlineOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "24ed3040-f7a4-46f7-ae40-52ed1feb76cd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdOnlineOnly}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdOnlineOnly}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "410af5cc-0840-4d7f-9ae5-db3949224530",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a88323bb-4491-40b6-abf9-567eca09d2eb",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": null,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "    pm.expect(jsonData.Status).to.equal(\"TrackOnly\");",
                          "});",
                          "",
                          "pm.environment.set('switchIdPrintOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d3b18e8b-0679-4826-abd8-33dc8d33db78",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "1acc2d3b-779b-4526-8e2e-0242783cf7e8",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "26534f85-f35a-4268-a52e-7765b2d9c125",
                          "key": "switchId",
                          "value": "{{switchIdOnlineOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ae86877f-9cc3-4406-988d-4e58a1c11ded",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(4); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "38ef0e0d-26f1-4ede-b54c-79702c0f6219",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "39695ca5-76d7-4908-887c-3cbc180d07d9",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit SubmittedToClickSwitch Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ef91648-9fe8-494d-af17-e932f52229bb",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct error message\", function() {",
                          "   pm.expect(jsonData.Description).to.equal(\"The switch has already been submitted to ClickSWITCH.\"); ",
                          "   pm.expect(jsonData.ErrorCode).to.eql(\"SubmittedToClickSwitch\");",
                          "   pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdOnlineOnly\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "78c7f4bf-aba2-4149-a189-046c06e7b811",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "2fee51d0-3a96-4340-a2de-8d3f7fc5c7c4",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "18e5fecc-b983-493f-9989-ef5028cc509c",
                          "key": "switchId",
                          "value": "{{switchIdOnlineOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "99c8c2cc-9aef-4b8c-9db3-ca2efd5d2cb8",
              "_postman_isSubFolder": true
            },
            {
              "name": "Print Only",
              "item": [
                {
                  "name": "Save (Dependency)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "556cbd47-d4f4-42a9-a5a5-2d44103f03a3",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          "",
                          "pm.environment.set('switchIdPrintOnly', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "adbb882b-ee50-43d3-89f4-4fa393f4f6d0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdPrintOnly}}\",\r\n  \"FormFields\": [\r\n\t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdPrintOnly}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "b3c69e0b-c4c8-4fba-b845-1f7e5e961cd6",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5e126f13-faf5-4985-87b5-329f33bf9f6d",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('Accounts');",
                          "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorId');",
                          "    pm.expect(jsonData).to.have.property('DepositorName');",
                          "    pm.expect(jsonData).to.have.property('FormFields');",
                          "    pm.expect(jsonData).to.have.property('Id');",
                          "    pm.expect(jsonData).to.have.property('Status');",
                          "    pm.expect(jsonData).to.have.property('IsPrintable');",
                          "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                          "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                          "});",
                          "",
                          "pm.test('Has the correct accounts element', function() {",
                          "   var accounts = ",
                          "    {",
                          "        \"AccountName\": \"\",",
                          "        \"AccountNumber\": \"\",",
                          "        \"AccountType\": \"\",",
                          "        \"InstitutionName\": \"\",",
                          "        \"RoutingNumber\": \"\",",
                          "        \"SplitAmount\": 100,",
                          "        \"SplitUnitType\": \"Percentage\"",
                          "    };",
                          "        ",
                          "    accounts.AccountName = pm.environment.get('accountName');",
                          "    accounts.AccountNumber = pm.environment.get('accountNumber').toString();",
                          "    accounts.AccountType = pm.environment.get('accountTypeChecking');",
                          "    accounts.InstitutionName = pm.environment.get('institutionName');",
                          "    accounts.RoutingNumber = pm.environment.get('routingNumber');",
                          "    ",
                          "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct status', function() {",
                          "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                          "});",
                          "",
                          "pm.test('Has the correct form fields', function() {",
                          "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ba9a96fa-10a5-48d9-9dd8-83864d86cc3c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "0c7973d0-bdcb-4292-b378-9257f741ec86",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "e9657109-fb6c-41fe-994e-a669ec700aa5",
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d4298fad-c7d4-40ac-b18c-6b61a0435111",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(5); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ad25e75c-5a87-4915-a86a-7697a8a6a23b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "d460aad9-64d9-47d8-8707-2f61ee212fdc",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit PrintOnly Error",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "70f6644c-9545-4d93-84a8-4dfe18c89677",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 409\", function() {",
                          "    pm.response.to.have.status(409);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct error message\", function() {",
                          "   pm.expect(jsonData.Description).to.equal(\"The switch can only be printed.\");",
                          "   pm.expect(jsonData.ErrorCode).to.eql(\"PrintOnly\");",
                          "   pm.expect(jsonData.SwitchId).to.eql(pm.environment.get(\"switchIdPrintOnly\"));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "2f69918c-26a7-4bb5-9132-a822b501b974",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "6976ba23-d0bf-4d2f-8c34-8e6a39972ce3",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "10dbcac2-de3d-4519-95a8-6506945755b7",
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Print PDF",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2d98a637-f01d-41a8-a568-d340414f9e93",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Response contains some data\", function() {",
                          "   pm.expect(jsonData).to.not.equal(null);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "89ab8199-d8da-4703-a9c8-bfe298f9748c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/pdf",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId/pdf/print",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId",
                        "pdf",
                        "print"
                      ],
                      "variable": [
                        {
                          "id": "1794bb6e-bcd7-44b1-bcd1-088aae38eb98",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "6d060b03-5216-4569-8157-b0451a410b3f",
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "c2e30389-09ea-4157-9f67-cfdb0a2d5f24",
              "_postman_isSubFolder": true
            },
            {
              "name": "Save And Delete",
              "item": [
                {
                  "name": "Save",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9e3657a8-ddab-455c-9ffb-66856a47aec5",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 201\", function() {",
                          "    pm.response.to.have.status(201);",
                          "});",
                          "",
                          "pm.environment.set('switchIdDelete', jsonData.Id);",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b5118cb2-94d1-4fd0-b8a4-602c86ffda2f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "3fabad89-f682-4cd4-8f5e-6289ac2400cb",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                        "exec": [
                          "pm.test(\"Status code is 204\", function () {",
                          "    pm.response.to.have.status(204);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "bde13ede-f98a-4565-9356-621fab1eb994",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "fabdfe45-3aa9-4c5b-8aeb-17221aaed01e",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "dcf15102-2dd3-4d20-81b3-d4913ac44723",
                          "key": "switchId",
                          "value": "{{switchIdDelete}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get 404 Not Found",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 404\", function() {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Content-Length is 0\", function() {",
                          "    pm.response.to.be.header(\"Content-Length\", \"0\");",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "411abd6a-70a5-47db-a2d7-43b408224563",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "e04875f4-09d7-4f33-b179-1bdc9d620b76",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "6abf51fa-504c-410e-91f4-ff9d226b30bd",
                          "key": "switchId",
                          "value": "{{switchIdDelete}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function() {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Contains the correct number of switches\", function() {",
                          "   pm.expect(jsonData.length).to.equal(5); ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "70d8e0f5-b28d-4fd6-8b12-4dceca140a0d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}",
                        "type": "text"
                      },
                      {
                        "key": "apiUserKey",
                        "value": "{{apiUserKey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "4b783b6b-81b9-463f-9ef3-c2acb89629e1",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "9994193a-d080-4659-b1f0-6f9adba3db93",
              "_postman_isSubFolder": true
            },
            {
              "name": "Depositors Find By Switch Profile Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Address');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('Name');",
                      "    pm.expect(jsonData).to.have.property('PhoneNumber');",
                      "    pm.expect(jsonData).to.have.property('PlaceId');",
                      "    pm.expect(jsonData).to.have.property('SwitchTemplate');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositorId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositSplitInfo');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('Form');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('IsSplittingDepositsPossible');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('OnlineOnlyInstructions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('PrintOnlyInstructions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('ProfileId');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('Type');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('TermsAndConditions');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeCheckingLimit');",
                      "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeSavingsLimit');",
                      "});",
                      "",
                      "pm.test('Has the correct depositor id', function() {",
                      "   pm.expect(jsonData.DepositorId).to.equal(pm.environment.get(\"depositorIdVerified\")); ",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "31299e67-5f9c-4244-859a-9fa840565f38",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  },
                  {
                    "key": "apiUserKey",
                    "value": "{{apiUserKey}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors/:switchProfileGuid",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors",
                    ":switchProfileGuid"
                  ],
                  "variable": [
                    {
                      "id": "2dbef8f0-2f12-486a-a662-9697dd6e8cfb",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "c4f7c4e9-9196-49c7-9d1c-f06872609b38",
                      "key": "switchProfileGuid",
                      "value": "{{switchProfileGuid}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "94f5e0bd-59b5-4e9d-a094-91ddfbf07b7f",
          "_postman_isSubFolder": true
        },
        {
          "name": "Status Authenticated",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e2f3766-afdf-4c8c-b4c7-a549044dfee2",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Has required elements\", function() {",
                  "    pm.expect(jsonData).to.have.property('Version');",
                  "    pm.expect(jsonData.Authenticated).to.be.true;",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "d8143342-b371-4417-935e-49bab9c8a1a1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{ocpApimSubscriptionKey}}"
              },
              {
                "key": "apiUserKey",
                "value": "{{apiUserKey}}",
                "equals": true
              }
            ],
            "url": "{{baseUrl}}/status"
          },
          "response": []
        }
      ],
      "_postman_id": "f44aa926-de5b-410a-ab41-4009081cdac4"
    },
    {
      "name": "401 Unauthorized",
      "item": [
        {
          "name": "Invalid API Key",
          "item": [
            {
              "name": "Customers",
              "item": [
                {
                  "name": "Enroll",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ba68baec-a6b9-4bae-9e36-9b5db09b2c04",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Consent To Esign",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "771af573-deea-476a-a15d-333f6a724d53",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "contacts",
                        ":contactId",
                        "esignConsent"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "id": "daf3dfaa-2a88-49d3-9157-8bb54eeacde9",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "44805fc8-2c61-474d-a4c3-4c5da216e0b4",
                          "key": "contactId",
                          "value": "{{primaryContactId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Esign Consent Date",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "2e43f5a4-d258-4528-be15-131453fd6665",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "contacts",
                        ":contactId",
                        "esignConsent"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "id": "9a0e6b58-64ed-4cfc-933b-b0e44c893a1b",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "29e919a5-a658-49f2-809d-bb2577415744",
                          "key": "contactId",
                          "value": "{{primaryContactId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "cf51ad77-786e-4dc7-9684-bebf970e58be",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/search?apiUserKey=aaaaa&searchUserName={{userName}}&institutionId={{institutionId}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        "search"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        },
                        {
                          "key": "searchUserName",
                          "value": "{{userName}}"
                        },
                        {
                          "key": "institutionId",
                          "value": "{{institutionId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "6e267331-6f00-4502-94a3-463eeb0888ea",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "449fb18f-56cc-434c-b8d2-105b2abfe4bb",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "54c1da51-b04e-49fa-b4fc-a0890d98309a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Depositors",
              "item": [
                {
                  "name": "Unknown",
                  "item": [
                    {
                      "name": "Create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "7f8c011d-5689-42ef-9804-5c0996da6515",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor\",\r\n  \"Notes\": \"Test\",\r\n  \"PhoneNumber\": \"2185555555\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey=aaaaa",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "apiUserKey",
                              "value": "aaaaa"
                            }
                          ],
                          "variable": [
                            {
                              "id": "0be12b24-4f80-4405-a38a-493b228b4673",
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Find",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "1916511b-2d21-43f1-a647-7ddfd5695e7b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey=aaaaa&searchName=Test Depositor&latitude={{latitude}}&longitude={{longitude}}",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "apiUserKey",
                              "value": "aaaaa"
                            },
                            {
                              "key": "searchName",
                              "value": "Test Depositor"
                            },
                            {
                              "key": "latitude",
                              "value": "{{latitude}}"
                            },
                            {
                              "key": "longitude",
                              "value": "{{longitude}}"
                            }
                          ],
                          "variable": [
                            {
                              "id": "024763e3-5032-4c17-afc0-597c085929a6",
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "b6c7d3f3-0e9a-4e09-85b6-9d2be6d98582",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Unknown PlaceId",
                  "item": [
                    {
                      "name": "Find PlaceId",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6e7770e3-231f-4c08-8901-770715598451",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "68f6fb8c-32a2-4c35-8578-804207c64828",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey=aaaaa&searchName={{depositorNamePlace}}&latitude={{latitude}}&longitude={{longitude}}",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "apiUserKey",
                              "value": "aaaaa"
                            },
                            {
                              "key": "searchName",
                              "value": "{{depositorNamePlace}}"
                            },
                            {
                              "key": "latitude",
                              "value": "{{latitude}}"
                            },
                            {
                              "key": "longitude",
                              "value": "{{longitude}}"
                            }
                          ],
                          "variable": [
                            {
                              "id": "d1e8b430-af73-4ba9-ba39-2a3a295ea55c",
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create PlaceId",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "91b6c2c6-3cf4-4f52-9f79-1cb88b287d41",
                            "exec": [
                              "pm.test(\"Status code is 401\", function () {",
                              "    pm.response.to.have.status(401);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "c9844064-815e-46b4-8dd7-530a3684276f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor2\",\r\n  \"Notes\": \"Test\",\r\n  \"PlaceId\": \"{{placeId}}\",\r\n  \"PhoneNumber\": \"2185555555\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey=aaaaa",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "apiUserKey",
                              "value": "aaaaa"
                            }
                          ],
                          "variable": [
                            {
                              "id": "880446c2-566a-46cc-a71c-8472b96a54ae",
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "36a3f251-e513-484b-b3ee-0c98d3e9a1b1",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7804db2f-0c0d-400b-b2c8-471ad05fc0fe",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "70067cc2-c14c-4bff-a8ad-db8981d6f078",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey=aaa&searchName={{depositorNameVerified}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaa"
                        },
                        {
                          "key": "searchName",
                          "value": "{{depositorNameVerified}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "ee9c64c9-b693-4bc4-a642-07c28a09884b",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find By Switch Profile Id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "bbdc9282-952c-40b9-904e-79139a038170",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors/:switchProfileGuid?apiUserKey=aaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors",
                        ":switchProfileGuid"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaa"
                        }
                      ],
                      "variable": [
                        {
                          "id": "9cc3b19b-4ab0-4a98-a7a7-9523f7552ee5",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "630f13be-0b03-4a11-9e05-548d175ad242",
                          "key": "switchProfileGuid",
                          "value": "{{switchProfileGuid}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "74aeca8e-7557-4cd7-84da-1ad15902969a",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63dc3038-b599-4e56-b35f-52d562974cbb",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "bcf30ce0-ca6c-424f-86a7-f109d862422e",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Switches",
              "item": [
                {
                  "name": "Save",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "bbadc0a6-c794-4f2e-91b2-6b4555f19868",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\",\r\n      \"SplitAmount\": 0\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "id": "1b094710-d952-4dc8-93a6-a4814e41ce21",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "43c2806e-97f3-40d1-be1b-befe08bbbfe5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\",\r\n      \"SplitAmount\": 0\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey=aaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaa"
                        }
                      ],
                      "variable": [
                        {
                          "id": "ae67ba29-3fa1-4295-8fe1-324727155ce9",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "c2ffb9d9-28c7-489d-8dd1-de88a49f8e76",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 401\", function () {",
                          "    pm.response.to.have.status(401);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8e72d966-d25b-4b9a-a07a-e598a8609e47",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "id": "f8b80920-2a30-46c4-9ee5-3738d186c215",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "218e38d0-3b4d-41c5-ab02-86bc663231cb",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c55aafdd-8c33-44cf-9e69-fd0fef57a746",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey=aaaaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "id": "1151ee77-8e90-4cd3-81a3-07ec604ee073",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "56f77e29-6691-4ad8-9109-4ac34a28dfdc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "id": "7d383f7a-5a57-4a6d-a256-42d23f6a6289",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "3dcdf29d-fbe8-4f2e-8e92-7a1a0217b3ae",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "917ccd76-a41e-43f4-9387-5a66bbfcf783",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "id": "78be5d72-306a-4a10-813c-4613e4ba3666",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "5687ebdc-a0d0-442d-964a-458d9f122530",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Print PDF",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2d98a637-f01d-41a8-a568-d340414f9e93",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "00331cac-77f8-406a-b11d-047af64f326b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/pdf"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId/pdf/print?apiUserKey=aaaaa",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId",
                        "pdf",
                        "print"
                      ],
                      "query": [
                        {
                          "key": "apiUserKey",
                          "value": "aaaaa"
                        }
                      ],
                      "variable": [
                        {
                          "id": "b836fb6a-8fd8-412f-9c4d-6d4cd80c9710",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "72170832-5f6d-4424-9cc8-ecd44452bcb4",
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "066cc4fe-fd99-4820-babd-ed9873454bc4",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1f165295-f989-4f43-91f0-c158d2f42c00",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "b0b0fd91-799a-4373-b796-a7ca5b53bee6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "504f227e-ab17-4997-97d3-cd2c74df1e06",
          "_postman_isSubFolder": true
        },
        {
          "name": "No API Key",
          "item": [
            {
              "name": "Customers",
              "item": [
                {
                  "name": "Enroll One Account",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "691a5e66-ccae-4d87-890f-ab4ae677e22e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                    },
                    "url": "{{baseUrl}}/customers"
                  },
                  "response": []
                },
                {
                  "name": "Consent To Esign",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "fa7a12f7-2eac-4258-800d-4f62fcbfe81c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "contacts",
                        ":contactId",
                        "esignConsent"
                      ],
                      "variable": [
                        {
                          "id": "9d60cc08-e19e-4a0a-aa18-d63f75b8596f",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "43b7a3b1-18f8-4cb1-87b8-b21e2d2bda62",
                          "key": "contactId",
                          "value": "{{primaryContactId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "14a0f64f-ac42-479f-a9a2-d90ccfd598b8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/search?searchUserName={{userName}}&institutionId={{institutionId}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        "search"
                      ],
                      "query": [
                        {
                          "key": "searchUserName",
                          "value": "{{userName}}"
                        },
                        {
                          "key": "institutionId",
                          "value": "{{institutionId}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Esign Consent Date",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1973ba72-0e95-4356-827e-56dc37579ec6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "contacts",
                        ":contactId",
                        "esignConsent"
                      ],
                      "variable": [
                        {
                          "id": "440ff68c-d371-46c0-8269-ef7fe81efef1",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "bba0aba1-4223-4b2d-be8e-b42193eb1a3f",
                          "key": "contactId",
                          "value": "{{primaryContactId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "08e7fa67-d896-4f4b-9947-a03d05fc7a50",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "449fb18f-56cc-434c-b8d2-105b2abfe4bb",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "54c1da51-b04e-49fa-b4fc-a0890d98309a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Depositors",
              "item": [
                {
                  "name": "Unknown",
                  "item": [
                    {
                      "name": "Create",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "c7db1e2d-287f-4ff8-8f06-ecb23a52af36",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"{{depositorNameUnknown}}\",\r\n  \"Notes\": \"Test\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "variable": [
                            {
                              "id": "aeaa3ad9-47bd-4afb-941b-0e62d19a0950",
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Find",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "f1761bc2-4dfe-430e-aff8-0adb6e50cc49",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNameUnknown}}&latitude={{latitude}}&longitude={{longitude}}",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "searchName",
                              "value": "{{depositorNameUnknown}}"
                            },
                            {
                              "key": "latitude",
                              "value": "{{latitude}}"
                            },
                            {
                              "key": "longitude",
                              "value": "{{longitude}}"
                            }
                          ],
                          "variable": [
                            {
                              "id": "0c84a7ed-2f1d-4440-aca5-149a23937780",
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "9960bc6f-6b03-4cdd-ad22-931a2148bc93",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Unknown PlaceId",
                  "item": [
                    {
                      "name": "Find PlaceId",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6e7770e3-231f-4c08-8901-770715598451",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "3411edd0-304a-401e-9f66-63d687864740",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNamePlace}}&latitude={{latitude}}&longitude={{longitude}}",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "query": [
                            {
                              "key": "searchName",
                              "value": "{{depositorNamePlace}}"
                            },
                            {
                              "key": "latitude",
                              "value": "{{latitude}}"
                            },
                            {
                              "key": "longitude",
                              "value": "{{longitude}}"
                            }
                          ],
                          "variable": [
                            {
                              "id": "32f158ef-ffe1-4c72-bfc9-abf7d6b4bd62",
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Create PlaceId",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "91b6c2c6-3cf4-4f52-9f79-1cb88b287d41",
                            "exec": [
                              "pm.test(\"Status code is 401\", function() {",
                              "    pm.response.to.have.status(401);",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "df74ae1f-e107-49f0-b727-f637fd0c583a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Ocp-Apim-Subscription-Key",
                            "value": "{{ocpApimSubscriptionKey}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor2\",\r\n  \"Notes\": \"Test\",\r\n  \"PlaceId\": \"{{placeId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"WebsiteUrl\" : \"https://www.clickswitch.com\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/:customerId/depositors",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            ":customerId",
                            "depositors"
                          ],
                          "variable": [
                            {
                              "id": "1a4902bc-3f67-4f85-ba42-50f509f350a9",
                              "key": "customerId",
                              "value": "{{customerId}}",
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "a79f6b8d-5c98-4a5d-9cda-ab52f9a0a7ad",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Find",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7804db2f-0c0d-400b-b2c8-471ad05fc0fe",
                        "exec": [
                          "pm.test(\"Status code is 401\", function () {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "95d0875c-8a05-4c4b-85a5-ab862ff82478",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors?searchName={{depositorNameVerified}}&latitude={{latitude}}&longitude={{longitude}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors"
                      ],
                      "query": [
                        {
                          "key": "searchName",
                          "value": "{{depositorNameVerified}}"
                        },
                        {
                          "key": "latitude",
                          "value": "{{latitude}}"
                        },
                        {
                          "key": "longitude",
                          "value": "{{longitude}}"
                        }
                      ],
                      "variable": [
                        {
                          "id": "9e4f7f15-34d1-49e6-96c9-300fe20d560f",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Find By Switch Profile Id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9b0e7e54-caf6-4a28-b71a-1b01b715d5c2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/:customerId/depositors/:switchProfileGuid",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ":customerId",
                        "depositors",
                        ":switchProfileGuid"
                      ],
                      "variable": [
                        {
                          "id": "4af5404b-faa0-4f6c-9db6-4b1fd6a08c69",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "f29ff29a-b8a3-41e3-9df0-b29545880bea",
                          "key": "switchProfileGuid",
                          "value": "{{switchProfileGuid}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "296e50e6-0330-4a35-b7e0-bc92372c7d4d",
              "_postman_isSubFolder": true
            },
            {
              "name": "Switches",
              "item": [
                {
                  "name": "Save",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "71e512e8-e6d4-486b-a5ba-dd7e9e869a9d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\",\r\n      \"SplitAmount\": 0\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "01538b5b-f0de-400c-b944-939f5f95570e",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7fab9383-d57e-4325-b780-1be2a9f387ce",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Remainder\",\r\n      \"SplitAmount\": 0\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{depositorIdVerified}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileId}}\"\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "b3aad50c-bee6-4272-abb6-d7017789eb98",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "2a9f1306-c726-484d-868d-76d6e3b70014",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3bac77a3-4141-44ae-b1f9-0e2ed23d936b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "95411387-9851-43d7-9287-6611915b2725",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "3ad98b42-ceda-4ff8-9c72-d5778f26998f",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get All",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "386cd37e-9030-47c1-ab39-a77bb4f86d5e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches"
                      ],
                      "variable": [
                        {
                          "id": "ba831048-9a76-465d-b83d-10a82ffd1783",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Submit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7427e09c-8205-480e-a0d4-ec262ad7b9f3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "18581c65-6421-4f93-8d9d-2f6c9722af96",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "87f8005b-e0e6-4395-b7b8-2a99e265bc6d",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "30b09f35-56b2-44e9-8f78-c32a6d5df5ba",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId"
                      ],
                      "variable": [
                        {
                          "id": "d90f2051-71fb-4509-8599-0eac0ab73dab",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "fdef4dd5-e212-41dc-80a1-9722eac12b17",
                          "key": "switchId",
                          "value": "{{switchId}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Print PDF",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2d98a637-f01d-41a8-a568-d340414f9e93",
                        "exec": [
                          "pm.test(\"Status code is 401\", function() {",
                          "    pm.response.to.have.status(401);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "13d2688d-81be-44ca-9c65-80899a88af23",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/pdf"
                      },
                      {
                        "key": "Ocp-Apim-Subscription-Key",
                        "value": "{{ocpApimSubscriptionKey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId/pdf/print",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "customers",
                        ":customerId",
                        "switches",
                        ":switchId",
                        "pdf",
                        "print"
                      ],
                      "variable": [
                        {
                          "id": "06fa0ed1-feea-4d59-bf4c-fb30111b459c",
                          "key": "customerId",
                          "value": "{{customerId}}",
                          "type": "string"
                        },
                        {
                          "id": "4253b75d-f9e3-4dab-8ca0-9fab298683bd",
                          "key": "switchId",
                          "value": "{{switchIdPrintOnly}}",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_id": "094d808d-d73b-4384-9434-f442c6261303",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1f165295-f989-4f43-91f0-c158d2f42c00",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "b0b0fd91-799a-4373-b796-a7ca5b53bee6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "91f8314e-953b-4ae3-bcb9-88fd2681874e",
          "_postman_isSubFolder": true
        },
        {
          "name": "Cross-Tenant Attack",
          "item": [
            {
              "name": "Customers: Enroll in unauthorized institution",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66fb37a1-05de-4470-aa0f-d22392c4e4c8",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "077bba8c-afc2-4adf-a4d7-730fa6684873",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Has the correct error messages\", function () {",
                      "    pm.expect(jsonData.Message).to.equal(\"The request is invalid.\");",
                      "    pm.expect(jsonData.ModelState.apiUserKey[0]).to.equal(\"This API user is not authorized to access this institution.\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "035df13d-694c-40c6-b573-e4d7ac1a70ba",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{$timestamp}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"BranchId\": \"{{branchId2}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"InstitutionId\":  \"{{institutionId2}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"ShouldntExist\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{$guid}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Customers: Enroll (Dependency)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "exec": [
                      "// Set accountNumber env var to timestamp to create a unique customer each run.",
                      "var timestamp = Date.now();",
                      "var randomString = makeRandomString();",
                      "pm.environment.set(\"accountNumber\", timestamp);",
                      "pm.environment.set(\"userName\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"SS\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "  ",
                      "  for (var i = 0; i < 10; i++) {",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "  }",
                      "  ",
                      "  return text;",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.environment.set(\"customerId\", jsonData.CustomerId);",
                      "pm.environment.set(\"primaryContactId\", jsonData.PrimaryContactId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "c7e6f58c-0f9c-43b9-829c-c78d47bd3c6c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{accountName}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"ConsentToEsign\": true,\r\n  \"InstitutionId\": \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Customers: Find",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b810d4ca-c903-4ff8-853f-5674dfe38312",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/search?apiUserKey={{apiUserKey2}}&searchUserName={{userName}}&institutionId={{institutionId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    },
                    {
                      "key": "searchUserName",
                      "value": "{{userName}}"
                    },
                    {
                      "key": "institutionId",
                      "value": "{{institutionId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Customers: Consent To Esign",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                    "exec": [
                      "pm.test(\"Status code is 401\", function() {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "fa7b0c0d-7a1c-43ef-af2b-849a28a8d85a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "contacts",
                    ":contactId",
                    "esignConsent"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "27f54d65-a786-4027-b515-0e54bc5a7683",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "46861542-d9d3-4fda-be33-8747d8cc8205",
                      "key": "contactId",
                      "value": "{{primaryContactId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Customers: Get Esign Consent Date",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "c10d9bf5-83c0-4cd2-ad0e-f0ce72a3aab5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/contacts/:contactId/esignConsent?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "contacts",
                    ":contactId",
                    "esignConsent"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "75fd749c-32a3-4f37-a0e8-6042a72a67c5",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "23744495-34ed-4eb2-8e73-ff89544904be",
                      "key": "contactId",
                      "value": "{{primaryContactId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Depositors: Create",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "01d1f3ce-e599-4b1c-b78d-51d673f71508",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Create Depositor Shouldn't Exist\",\r\n  \"Notes\": \"Test creating a depositor with the minimum data.\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "dbb36055-2146-4f60-890f-96c826d5ae18",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Depositors: Create (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function() {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.environment.set('depositorIdUnknown', jsonData.CustomerCreatedDepositorId);",
                      "pm.environment.set('switchProfileIdUnknown', jsonData.ProfileId);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "0007328d-d34b-4af9-a806-c2b95579bcbf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"{{depositorNameUnknown}}\",\r\n  \"Notes\": \"Test cross-tenant attack\"\r\n}\r\n"
                },
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "46569155-6402-45c6-a953-66fb1af599dd",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Depositors: Find",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                    "exec": [
                      "pm.test(\"Status code is 401\", function() {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "370cc08a-af83-4807-a4fb-61523a38b27a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors?apiUserKey={{apiUserKey2}}&searchName={{depositorNameUnknown}}&latitude=-92&longitude=47",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    },
                    {
                      "key": "searchName",
                      "value": "{{depositorNameUnknown}}"
                    },
                    {
                      "key": "latitude",
                      "value": "-92"
                    },
                    {
                      "key": "longitude",
                      "value": "47"
                    }
                  ],
                  "variable": [
                    {
                      "id": "d401f4d3-9a99-4c03-8110-76414a750a45",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Save",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "628931bc-540b-450d-a63e-d0bcad4c179d",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "431325a0-9fe5-4f8a-85e2-6f5585d46ba5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "switches"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "7d111109-f135-46fc-9f29-d2ca081b6bba",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Save (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "628931bc-540b-450d-a63e-d0bcad4c179d",
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "const jsonData = pm.response.json();",
                      "pm.environment.set('switchIdUnknown', jsonData.Id);",
                      "pm.environment.set('switchProfileGuid', jsonData.SwitchProfileGuid);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "a605dbd8-9ced-42b7-853f-acc242d41e3b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "switches"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "16888834-725f-4106-b9b8-889a25cb8654",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Update",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb96ad79-d6d2-4563-8dd5-6a6c9fec1ef5",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "3de0d7bd-5510-4e62-9ccd-b264d841abd4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "switches",
                    ":switchId"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "6e52f4d9-7341-41c1-ab32-f09a6c1bf6a7",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "262591e8-d917-4efc-ace7-aaf3646e43fd",
                      "key": "switchId",
                      "value": "{{switchIdUnknown}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Get (Check)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "26731505-88d0-4e29-93db-3b88d51d5da3",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "67e53cf0-1f0c-4df5-8dce-06817a73349e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "switches",
                    ":switchId"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "3309f33d-2410-4a4f-b137-1eac9dc24380",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "36d26c44-9bc9-4ba5-8443-a3455d9698b5",
                      "key": "switchId",
                      "value": "{{switchIdUnknown}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Get",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "26731505-88d0-4e29-93db-3b88d51d5da3",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "4f012fb4-4683-46ac-a256-6d7586115510",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "switches",
                    ":switchId"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "5f06fa18-6290-4fb0-8a8b-36b3492f873d",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "75567b53-b835-4496-9934-897ccbab841e",
                      "key": "switchId",
                      "value": "{{switchIdUnknown}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Get All",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "31156932-59df-474a-a2cc-76b5c9c8f591",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "87b458bc-2640-49ed-ab01-5bc7762362dd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/switches?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "switches"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "1f4e3be0-9774-424e-80e4-4eb82ef71bc4",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Delete",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "5e5fd2a2-9872-4657-bfb3-71a33038b0d7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "switches",
                    ":switchId"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "f8531150-c449-418d-bdb1-0aee97ec9f1b",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "e55a1410-3218-4d42-ab42-78af43716450",
                      "key": "switchId",
                      "value": "{{switchIdUnknown}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Update (Dependency)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb96ad79-d6d2-4563-8dd5-6a6c9fec1ef5",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "64627703-d291-4a81-8ac0-3153d0acd5d1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{depositorIdUnknown}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{primaryContactId}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{primaryContactId}}\",\r\n  \"SwitchProfileId\": \"{{switchProfileIdUnknown}}\"\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "switches",
                    ":switchId"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "e03d5269-5fc8-41a6-a36a-399ff798c1cc",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "7ac145ce-0fb2-4072-912e-5488cb84456c",
                      "key": "switchId",
                      "value": "{{switchIdUnknown}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Switches: Submit",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "9d5ceb3b-c432-4e6c-9e11-22a4956bd47b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{primaryContactId}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/customers/:customerId/switches/:switchId?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "customers",
                    ":customerId",
                    "switches",
                    ":switchId"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "669dc573-0f84-4360-a937-785b0eaa5bca",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "83ca70a0-b260-4802-9abe-4f642ca6a4c2",
                      "key": "switchId",
                      "value": "{{switchIdUnknown}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Depositors: Find by Switch Profile Id (Check)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has the correct depositor id', function() {",
                      "   pm.expect(jsonData.CustomerCreatedDepositorId).to.equal(pm.environment.get(\"depositorIdUnknown\")); ",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "8e08d14f-5829-46d6-8f3b-41e2e573edc0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors/:switchId?apiUserKey={{apiUserKey}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors",
                    ":switchId"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "cebdd696-5742-40be-af55-fe34884a11d0",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "2a93388f-59ed-44a2-af1d-b20a4cea6a84",
                      "key": "switchId",
                      "value": "{{switchProfileGuid}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Depositors: Find by Switch Profile Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "1dea9def-2601-46ac-b2fb-c139e054e806",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{ocpApimSubscriptionKey}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/:customerId/depositors/:switchProfileGuid?apiUserKey={{apiUserKey2}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ":customerId",
                    "depositors",
                    ":switchProfileGuid"
                  ],
                  "query": [
                    {
                      "key": "apiUserKey",
                      "value": "{{apiUserKey2}}"
                    }
                  ],
                  "variable": [
                    {
                      "id": "50ba6ce9-cc4d-4cb1-83a8-0af550289a68",
                      "key": "customerId",
                      "value": "{{customerId}}",
                      "type": "string"
                    },
                    {
                      "id": "9b07d8ed-8c21-4f12-9e02-9c5719dc5905",
                      "key": "switchProfileGuid",
                      "value": "{{switchProfileGuid}}",
                      "type": "string"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "6a487d39-b0b1-4fbc-ac44-495fc9a7d323",
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "a6848e14-23b4-4949-a929-fd7aecc0e73f"
    },
    {
      "name": "Validation",
      "item": [
        {
          "name": "Enroll Missing AccountName and AccountTypeId",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                "exec": [
                  "// Set accountNumber env var to timestamp to create a unique customer each run.",
                  "var timestamp = Date.now();",
                  "var randomString = makeRandomString();",
                  "pm.environment.set(\"accountNumber\", timestamp);",
                  "pm.environment.set(\"userName\", randomString);",
                  "",
                  "// Creates a random string of length 10.",
                  "function makeRandomString() {",
                  "  var text = \"\";",
                  "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                  "  ",
                  "  for (var i = 0; i < 10; i++) {",
                  "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                  "  }",
                  "  ",
                  "  return text;",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Has the correct response\", function () {",
                  "pm.expect(pm.response.json()).to.deep.equal(",
                  "    {",
                  "        \"Message\": \"The request is invalid.\",",
                  "        \"ModelState\":",
                  "            {",
                  "                \"newCustomer.Accounts[0].AccountTypeId\": [",
                  "                \"One of AccountName, AccountTypeId must be set\"",
                  "                ],",
                  "                \"newCustomer.Accounts[0].AccountName\": [",
                  "                \"One of AccountTypeId, AccountName must be set\"",
                  "                ]",
                  "            }",
                  "    });",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f16f7585-e88d-4147-a471-b88e2b160e56",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{ocpApimSubscriptionKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{accountNumber}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routingNumber}}\",\r\n      \"BranchId\": \"{{branchId}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branchId}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routingNumber}}\",\r\n  \"EmailAddress\": \"{{accountNumber}}@clickswitch.com\",\r\n  \"InstitutionId\":  \"{{institutionId}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{userName}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{userName}}\"\r\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/customers?apiUserKey={{apiUserKey}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "customers"
              ],
              "query": [
                {
                  "key": "apiUserKey",
                  "value": "{{apiUserKey}}"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "_postman_id": "8a40a920-63c2-412d-a4f5-64ec1a379ce2"
    },
    {
      "name": "Get  Payroll Provider Logo",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "9fa02dca-d160-45d7-a783-d219173769fa",
            "exec": [
              "pm.test(\"Status code is 200\", function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Content-Type is an image\", function() {",
              "    pm.response.to.be.header(\"Content-Type\", \"image/png\");",
              "});",
              "",
              "pm.test(\"Content-Disposition is a PNG file\", function() {",
              "    pm.response.to.be.header(\"Content-Disposition\", \"attachment; filename=00B8729D20B2610ED6080E1E77BF57A997259FDC0714BC32D740AA87DC14AD3F.png\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "ad7ab89e-af45-4613-a890-4394e4bcd5d4",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Ocp-Apim-Subscription-Key",
            "value": "{{ocpApimSubscriptionKey}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/payroll-providers/:payrollProviderId/:imageHash",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "payroll-providers",
            ":payrollProviderId",
            ":imageHash"
          ],
          "variable": [
            {
              "id": "76ff5c4b-0dbd-4b98-811c-741a56a65724",
              "key": "payrollProviderId",
              "value": "{{payrollProviderId}}",
              "type": "string"
            },
            {
              "id": "11d2af36-b8fc-4628-9ecd-1df18e86b312",
              "key": "imageHash",
              "value": "{{imageHash}}",
              "type": "string"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get  Payroll Provider Logo Width Height",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "9fa02dca-d160-45d7-a783-d219173769fa",
            "exec": [
              "pm.test(\"Status code is 200\", function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Content-Type is an image\", function() {",
              "    pm.response.to.be.header(\"Content-Type\", \"image/png\");",
              "});",
              "",
              "pm.test(\"Content-Disposition is a PNG file\", function() {",
              "    pm.response.to.be.header(\"Content-Disposition\", \"attachment; filename=00B8729D20B2610ED6080E1E77BF57A997259FDC0714BC32D740AA87DC14AD3F.png\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "57d182f8-3bfb-41d2-a0ed-8a60f3210eab",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Ocp-Apim-Subscription-Key",
            "value": "{{ocpApimSubscriptionKey}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/payroll-providers/:payrollProviderId/:imageHash?width={{widthHeight}}&height={{widthHeight}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "payroll-providers",
            ":payrollProviderId",
            ":imageHash"
          ],
          "query": [
            {
              "key": "width",
              "value": "{{widthHeight}}"
            },
            {
              "key": "height",
              "value": "{{widthHeight}}"
            }
          ],
          "variable": [
            {
              "id": "5ca872d5-e957-41cc-8558-df9b8351def8",
              "key": "payrollProviderId",
              "value": "{{payrollProviderId}}",
              "type": "string"
            },
            {
              "id": "742d045a-be75-4ba8-9a3b-09361dfde606",
              "key": "imageHash",
              "value": "{{imageHash}}",
              "type": "string"
            }
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "d1624db3-76bf-44f2-b7e8-ff5227c8cc7e",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "2b67cc43-d3c0-48fb-a0c9-34c2c0726f89",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}