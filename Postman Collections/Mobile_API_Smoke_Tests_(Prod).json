{
  "info": {
    "_postman_id": "850ffbf3-beb2-4d36-bb57-c06ec664b759",
    "name": "Mobile API Smoke Tests (Prod)",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "07f34f2c-e4c7-4ce7-960f-db77db075d41",
      "name": "Customers",
      "description": "",
      "item": [
        {
          "_postman_id": "01e7913b-4edc-4a1b-a8a9-f285b269694b",
          "name": "Single Customer Single Account Enroll",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                "type": "text/javascript",
                "exec": [
                  "var timestamp = Date.now();",
                  "",
                  "var randomString = makeRandomString();",
                  "",
                  "// Set the timestamp to environment vars to create an unique",
                  "// customer on each test run.",
                  "pm.environment.set(\"customer_key\", timestamp);",
                  "",
                  "pm.environment.set(\"customer_name\", randomString);",
                  "",
                  "// Creates a random string of length 10.",
                  "function makeRandomString() {",
                  "  var text = \"\";",
                  "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                  "",
                  "  for (var i = 0; i < 10; i++)",
                  "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                  "",
                  "  return text;",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "80b84949-f0a1-45b9-a38e-b255c5fbbe3f",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Has to correct IDs\", function () {",
                  "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                  "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                  "    pm.expect(jsonData.SecondaryContactId).to.equal(null);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{checking_name}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"BranchId\": \"{{branch_id}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branch_id}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routing_number}}\",\r\n  \"EmailAddress\": \"{{customer_key}}@clickswitch.com\",\r\n  \"InstitutionId\":  \"{{institution_id}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{customer_name}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{customer_name}}\"\r\n}"
            },
            "url": "{{base_url}}{{customers_postfix}}{{api_key_param}}{{api_key}}"
          },
          "response": []
        },
        {
          "_postman_id": "9bbb030d-ea23-4ef9-802c-a0fbb0b80b8c",
          "name": "Joint Customer Joint Account Enroll",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                "type": "text/javascript",
                "exec": [
                  "var timestamp = Date.now();",
                  "",
                  "var randomString = makeRandomString();",
                  "",
                  "// Set the timestamp to environment vars to create an unique",
                  "// customer on each test run.",
                  "pm.environment.set(\"customer_key\", timestamp);",
                  "",
                  "pm.environment.set(\"customer_name\", randomString);",
                  "",
                  "// Creates a random string of length 10.",
                  "function makeRandomString() {",
                  "  var text = \"\";",
                  "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                  "",
                  "  for (var i = 0; i < 10; i++)",
                  "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                  "",
                  "  return text;",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "25b13e01-3f30-414f-a319-4fd7166f53b5",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Has to correct IDs\", function () {",
                  "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                  "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                  "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                  "});",
                  "",
                  "pm.environment.set(\"customer_id\", jsonData.CustomerId);",
                  "pm.environment.set(\"customer_contact_id\", jsonData.PrimaryContactId);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{checking_name}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"BranchId\": \"{{branch_id}}\"\r\n    },\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}0\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{checking_name}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"BranchId\": \"{{branch_id}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branch_id}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routing_number}}\",\r\n  \"EmailAddress\": \"{{customer_key}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institution_id}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{customer_name}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"SecondaryContact\": {\r\n\t\"FirstName\": \"{{customer_name}}\",\r\n\t\"MiddleInitial\": \"T\",\r\n\t\"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{customer_name}}\"\r\n}"
            },
            "url": "{{base_url}}{{customers_postfix}}{{api_key_param}}{{api_key}}"
          },
          "response": []
        },
        {
          "_postman_id": "ec3e6239-6c60-4f22-83bf-a8139a0b46af",
          "name": "Customer Find",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "2b72de1d-03b9-4154-aa65-2c1e72a79e65",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "46f51bab-ffea-443b-8ec8-3245d2066255",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Has to correct IDs\", function () {",
                  "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                  "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                  "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                  "    ",
                  "    pm.expect(jsonData.CustomerId).to.equal(pm.environment.get('customer_id'));",
                  "    pm.expect(jsonData.PrimaryContactId).to.equal(pm.environment.get('customer_contact_id'));",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{base_url}}{{customers_postfix}}/search{{api_key_param}}{{api_key}}&searchUserName={{customer_name}}&institutionId={{institution_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "6385bd43-0dc0-4e6e-959b-47fbadf1c90b",
          "name": "Customer Consent to Esign",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "b4fbe413-c2ef-411c-bdec-340eebc52a46",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "5dfcceb9-a16e-42c4-b380-c5cef2e6ad45",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{checking_name}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"BranchId\": \"{{branch_id}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branch_id}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routing_number}}\",\r\n  \"EmailAddress\": \"{{customer_key}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institution_id}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{customer_name}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{customer_name}}\"\r\n}"
            },
            "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}/contacts/{{customer_contact_id}}/esignConsent{{api_key_param}}{{api_key}}"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "6ac1e3e3-a97a-42f0-bb1a-c3a1113f20f3",
      "name": "Depositors",
      "description": "",
      "item": [
        {
          "_postman_id": "5009a20d-309e-414b-8ce6-1ef730e8355d",
          "name": "Unknown Depositor",
          "description": "",
          "item": [
            {
              "_postman_id": "f3de2842-17a2-445b-88b5-d59206928cbb",
              "name": "Create Depositor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                      "    pm.expect(jsonData).to.have.property('Form');",
                      "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                      "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                      "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                      "    pm.expect(jsonData).to.have.property('ProfileId');",
                      "    pm.expect(jsonData).to.have.property('Type');",
                      "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                      "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                      "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                      "});",
                      "",
                      "pm.environment.set('custom_depositor_id', jsonData.CustomerCreatedDepositorId);",
                      "pm.environment.set('custom_depositor_switch_profile_id', jsonData.ProfileId);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor\",\r\n  \"Notes\": \"Test\",\r\n  \"PhoneNumber\": \"2185555555\"\r\n}"
                },
                "url": "{{base_url}}{{customer_id}}/depositors{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "c76f22fc-1ac7-4b07-b526-1606b39b4db6",
              "name": "Get Created Depositor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2c9858a-3042-4718-8335-a7458909ff42",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function () {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('unknown_target_id', jsonData[0].DepositorId);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customer_id}}/depositors{{api_key_param}}{{api_key}}&searchName=Test Depositor&latitude=-92&longitude=47"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "8746f27a-dd33-496f-9799-551f559e54c0",
          "name": "Location Depositor",
          "description": "",
          "item": [
            {
              "_postman_id": "1fcd1e6d-f91e-4825-a7f9-e46b86560201",
              "name": "Location Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e7770e3-231f-4c08-8901-770715598451",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function () {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('location_id', jsonData[jsonData.length-1].PlaceId);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customer_id}}/depositors{{api_key_param}}{{api_key}}&searchName={{location_name}}&latitude=-92&longitude=47"
              },
              "response": []
            },
            {
              "_postman_id": "2c586297-6776-448d-88e2-06be158ef74a",
              "name": "Create Depositor From LocationId",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "91b6c2c6-3cf4-4f52-9f79-1cb88b287d41",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                      "    pm.expect(jsonData).to.have.property('Form');",
                      "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                      "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                      "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                      "    pm.expect(jsonData).to.have.property('ProfileId');",
                      "    pm.expect(jsonData).to.have.property('Type');",
                      "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                      "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                      "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                      "});",
                      "",
                      "pm.environment.set('custom_location_depositor_id', jsonData.CustomerCreatedDepositorId);",
                      "pm.environment.set('custom_location_switch_profile_id', jsonData.ProfileId);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor2\",\r\n  \"Notes\": \"Test\",\r\n  \"PlaceId\": \"{{location_id}}\",\r\n  \"PhoneNumber\": \"2185555555\"\r\n}"
                },
                "url": "{{base_url}}{{customer_id}}/depositors{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "b1f97398-6734-4fb2-81d3-f7ca5f90b02e",
          "name": "Deposit",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7804db2f-0c0d-400b-b2c8-471ad05fc0fe",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Contains at least one result\", function () {",
                  "    pm.expect(jsonData.length).to.be.at.least(1);",
                  "});",
                  "",
                  "pm.environment.set('deposit_target_id', jsonData[0].DepositorId);",
                  "pm.environment.set('deposit_target_switch_profile_id', jsonData[0].SwitchTemplate.ProfileId);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{base_url}}{{customer_id}}/depositors{{api_key_param}}{{api_key}}&searchName={{deposit_target_name}}&latitude=-92&longitude=47"
          },
          "response": []
        },
        {
          "_postman_id": "0237fe30-24d9-4553-a276-c97ca55ba1cc",
          "name": "Deposit Print Only",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f9c3a917-2269-44ef-aa97-3b528286bc11",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Contains at least one result\", function () {",
                  "    pm.expect(jsonData.length).to.be.at.least(1);",
                  "});",
                  "",
                  "pm.environment.set('deposit_print_target_id', jsonData[0].DepositorId);",
                  "pm.environment.set('deposit_print_target_switch_profile_id', jsonData[0].SwitchTemplate.ProfileId);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{base_url}}{{customer_id}}/depositors{{api_key_param}}{{api_key}}&searchName={{deposit_print_only_name}}&latitude=-92&longitude=47"
          },
          "response": []
        },
        {
          "_postman_id": "57dd797b-b1d1-44c8-bd50-66fc9a636d84",
          "name": "Deposit Online Only",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c93e0824-aba4-4f3b-bffe-12b066e8bc50",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Contains at least one result\", function () {",
                  "    pm.expect(jsonData.length).to.be.at.least(1);",
                  "});",
                  "",
                  "pm.environment.set('deposit_online_target_id', jsonData[0].DepositorId);",
                  "pm.environment.set('deposit_online_target_switch_profile_id', jsonData[0].SwitchTemplate.ProfileId);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{base_url}}{{customer_id}}/depositors{{api_key_param}}{{api_key}}&searchName={{deposit_online_only_name}}&latitude=-92&longitude=47"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "4a88d4fb-04ec-4699-8ffb-0a2f2d8e72d2",
      "name": "Switches",
      "description": "",
      "item": [
        {
          "_postman_id": "f84188d7-ba84-40e8-9ce3-5d9dacf4f85e",
          "name": "Unknown Switch",
          "description": "",
          "item": [
            {
              "_postman_id": "e8cdf2f5-6650-40e9-be01-4d206c9bf55e",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "628931bc-540b-450d-a63e-d0bcad4c179d",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": 100,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                      "});",
                      "",
                      "pm.environment.set('custom_switch_id', jsonData.Id);",
                      "pm.environment.set('custom_target_guid', jsonData.SwitchProfileGuid);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{custom_depositor_id}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{custom_depositor_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "f0f97ad3-276b-4747-bb97-a29ea89897be",
              "name": "Update Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb96ad79-d6d2-4563-8dd5-6a6c9fec1ef5",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": 100,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{custom_depositor_id}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{custom_depositor_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{custom_switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "a2608de9-12fc-469d-bfd3-c15352f3fa43",
              "name": "Get Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "26731505-88d0-4e29-93db-3b88d51d5da3",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": 100,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                      "});",
                      "",
                      "pm.environment.set('switch_id', jsonData.Id);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{custom_switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "aacf937c-cb0c-4d2b-994d-0adf702f92fe",
              "name": "Get All Switches",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "31156932-59df-474a-a2cc-76b5c9c8f591",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains the correct number of switches\", function () {",
                      "   pm.expect(jsonData.length).to.equal(1); ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "bf1d2286-fd31-45cd-9844-74d33267b828",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "02fce7ab-1df3-46c7-bfe9-e769d6fc2443",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('SwitchId');",
                      "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{custom_switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "a30ae721-cdf6-42cd-80e9-87dba6c7db7f",
          "name": "Normal Switch",
          "description": "",
          "item": [
            {
              "_postman_id": "6ef46a3d-8a73-4e32-a8c5-0f8045108aa0",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57f57fce-2c73-476e-8674-38c04bbb9af7",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": 100,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                      "});",
                      "",
                      "pm.environment.set('deposit_switch_id', jsonData.Id);",
                      "pm.environment.set('deposit_target_guid', jsonData.SwitchProfileGuid);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{deposit_target_id}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{deposit_target_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "06521679-017d-4f06-82c5-aa9dc4b13033",
              "name": "Update Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "309a7c0f-56d7-49f8-b480-a20412612fa6",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": 100,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                      "});",
                      "",
                      "pm.environment.set('deposit_target_guid', jsonData.SwitchProfileGuid);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{deposit_target_id}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{deposit_target_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{deposit_switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "e5d4b94f-ce35-4b2f-a30f-4a5c05646180",
              "name": "Get Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd6f8bba-d6b2-4a0a-be19-604329dbf5bd",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": 100,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{deposit_switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "163499cf-2fd9-490a-a584-ad5d2fef9ff7",
              "name": "Get All Switches",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f5a09f18-a9d4-4943-91a7-f9a759d05f02",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains the correct number of switches\", function () {",
                      "   pm.expect(jsonData.length).to.equal(2); ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "6d4d564b-77df-455e-be0d-d89f6059e013",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11a2b909-dbf1-403a-a771-67741218b1e4",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('SwitchId');",
                      "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"PrimaryContactSignature\": {\r\n    \"ContactId\": \"{{customer_contact_id}}\",\r\n    \"Signature\": \"Test Signature\"\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{deposit_switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "60ec2f0a-8b56-4e95-a592-56c8423895bf",
          "name": "Location Id Switch",
          "description": "",
          "item": [
            {
              "_postman_id": "c5561d27-4173-4031-8a0e-0598354614c4",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a30754e4-17a2-43d9-8787-be0c751d51ab",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": 100,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                      "});",
                      "",
                      "pm.environment.set('location_deposit_switch_id', jsonData.Id);",
                      "",
                      "",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{custom_location_depositor_id}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{custom_location_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "0b6bd1bd-1efb-4df3-a4fb-1dc8e7523377",
              "name": "Update and Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "902aa43e-3c6c-4679-ab6b-841eed38a774",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 202\", function () {",
                      "    pm.response.to.have.status(202);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('SwitchId');",
                      "    pm.expect(jsonData).to.have.property('EffectiveDate');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('PayrollProvider');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{custom_location_depositor_id}}\",\r\n  \"FormFields\": [   \r\n  \t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{custom_location_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{location_deposit_switch_id}}{{api_key_param}}{{api_key}}&submitOnSave=true"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "6cb10d9e-93c0-4512-8fd7-890943dec812",
          "name": "Print Only Switch",
          "description": "",
          "item": [
            {
              "_postman_id": "3cbfe601-b76e-49e3-acd6-5b275dd18405",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "556cbd47-d4f4-42a9-a5a5-2d44103f03a3",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": 100,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                      "});",
                      "",
                      "pm.environment.set('print_only_switch_id', jsonData.Id);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{deposit_print_target_id}}\",\r\n  \"FormFields\": [\r\n\t{\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"1234\",\r\n      \"VariableName\": \"Custom_SSN4\"\r\n    },\r\n    {\r\n      \"Type\": \"textbox\",\r\n      \"Value\": \"Test Building\",\r\n      \"VariableName\": \"Custom_Employee/ID\"\r\n    },\r\n    {\r\n      \"Type\": \"address\",\r\n      \"AddressValue\": {\r\n            \"AddressLine1\": \"123 Test St.\",\r\n            \"AddressLine2\": null,\r\n            \"AddressLine3\": null,\r\n            \"City\": \"Test\",\r\n            \"CountryCode\": \"US\",\r\n            \"PostalCode\": \"55555\",\r\n            \"StateProvinceCode\": \"MN\"\r\n\t\t},\r\n      \"VariableName\": \"Custom_Company/MailingAddress\"\r\n    }\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{deposit_print_target_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "b53b9473-841c-4f26-9997-1136ec0d6b97",
              "name": "Get Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e126f13-faf5-4985-87b5-329f33bf9f6d",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": 100,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{print_only_switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "245d4cf8-e1a2-49c2-b598-ae8bebd5091e",
              "name": "Get All Switches",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d4298fad-c7d4-40ac-b18c-6b61a0435111",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains the correct number of switches\", function () {",
                      "   pm.expect(jsonData.length).to.equal(4); ",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "26cba562-3d47-4f36-8d5a-2facb94dcdf4",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "70f6644c-9545-4d93-84a8-4dfe18c89677",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 409\", function () {",
                      "    pm.response.to.have.status(409);",
                      "});",
                      "",
                      "pm.test(\"Contains the correct error message\", function () {",
                      "   pm.expect(jsonData.Description).to.equal(\"The switch can only be printed.\"); ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{print_only_switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "77940c7a-2c24-4b85-8b4c-d1180611c07e",
              "name": "Get Switch PDF",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2d98a637-f01d-41a8-a568-d340414f9e93",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response contains some data\", function () {",
                      "   pm.expect(jsonData).to.not.equal(null);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/pdf"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{print_only_switch_id}}/pdf/print{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "32c626e7-33b9-403d-ba63-ca720b54b514",
          "name": "Online Only Switch",
          "description": "",
          "item": [
            {
              "_postman_id": "b6a1fb12-b55b-4c51-9f73-7b3bfe8ba8d8",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f62bfcb-b75e-4e7f-b135-14523c7ac6e0",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": null,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "    pm.expect(jsonData.Status).to.equal(\"TrackOnly\");",
                      "});",
                      "",
                      "pm.environment.set('online_only_switch_id', jsonData.Id);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Percentage\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{deposit_online_target_id}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{deposit_online_target_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "b23059dc-ed66-446c-98e6-dbd5f73b17d3",
              "name": "Get Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a88323bb-4491-40b6-abf9-567eca09d2eb",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": null,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "    pm.expect(jsonData.Status).to.equal(\"TrackOnly\");",
                      "});",
                      "",
                      "pm.environment.set('print_only_switch_id', jsonData.Id);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{online_only_switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "b66b8b47-48a7-4e38-a68f-83133e5ccc96",
              "name": "Get All Switches",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ae86877f-9cc3-4406-988d-4e58a1c11ded",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains the correct number of switches\", function () {",
                      "   pm.expect(jsonData.length).to.equal(5); ",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "02aff28c-958c-43ca-8a32-80fc0fba7fd7",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ef91648-9fe8-494d-af17-e932f52229bb",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 409\", function () {",
                      "    pm.response.to.have.status(409);",
                      "});",
                      "",
                      "pm.test(\"Contains the correct error message\", function () {",
                      "   pm.expect(jsonData.Description).to.equal(\"The switch has already been submitted to ClickSWITCH.\"); ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{online_only_switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "cef7e316-5469-4059-be10-b66a72e6723d",
          "name": "Create and Delete Switch",
          "description": "",
          "item": [
            {
              "_postman_id": "263ed045-9522-416e-902a-1ff8d165cd70",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e3657a8-ddab-455c-9ffb-66856a47aec5",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.environment.set('switch_id', jsonData.Id);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Remainder\"\r\n    }\r\n  ],\r\n  \"DepositorId\": \"{{deposit_target_id}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{deposit_target_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "613e092d-f919-4ccd-bdb6-7d2cf2c301d5",
              "name": "Delete Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d831da88-de3c-49f2-91a5-89f5450de2b2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 204\", function () {",
                      "    pm.response.to.have.status(204);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}/{{switch_id}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            },
            {
              "_postman_id": "aea8ae6b-7962-4e6d-8476-7df424f03e38",
              "name": "Get All Switches",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ae86877f-9cc3-4406-988d-4e58a1c11ded",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains the correct number of switches\", function () {",
                      "   pm.expect(jsonData.length).to.equal(5); ",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "90985c20-a9e6-4d6e-a2a1-e60fdd63856a",
          "name": "Get Depositor By Switch Profile Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('Address');",
                  "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                  "    pm.expect(jsonData).to.have.property('DepositorId');",
                  "    pm.expect(jsonData).to.have.property('Name');",
                  "    pm.expect(jsonData).to.have.property('PhoneNumber');",
                  "    pm.expect(jsonData).to.have.property('PlaceId');",
                  "    pm.expect(jsonData).to.have.property('SwitchTemplate');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('CustomerCreatedDepositorId');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositorId');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositSplitInfo');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('Form');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('IsSplittingDepositsPossible');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('OnlineOnlyInstructions');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('PrintOnlyInstructions');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('ProfileId');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('Type');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('TermsAndConditions');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeCheckingLimit');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeSavingsLimit');",
                  "});",
                  "",
                  "pm.test('Has the correct depositor id', function() {",
                  "   pm.expect(jsonData.DepositorId).to.equal(pm.environment.get(\"deposit_target_id\")); ",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{base_url}}{{customer_id}}/depositors/{{deposit_target_guid}}{{api_key_param}}{{api_key}}"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "fa58f26c-f8fb-4d04-ba55-2b453b9b1322",
      "name": "Other",
      "description": "",
      "item": [
        {
          "_postman_id": "b9f39332-d6a5-402d-a623-39f949ca7edf",
          "name": "Get API Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b3e67bdb-f97a-4122-9385-c1135595263e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{base_url}}status"
          },
          "response": []
        },
        {
          "_postman_id": "efc919e3-7f64-46b2-8179-005bd160dd23",
          "name": "Get  Payroll Provider Logo",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{base_url}}payroll-providers/5248ab74-6cc1-4693-87f0-628756b3c9db/00B8729D20B2610ED6080E1E77BF57A997259FDC0714BC32D740AA87DC14AD3F"
          },
          "response": []
        }
      ]
    }
  ]
}