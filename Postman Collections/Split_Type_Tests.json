{
  "info": {
    "_postman_id": "037b017f-525d-4033-a812-ce02667badfd",
    "name": "Split Type Tests",
    "description": "Split Type permutations",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "14f67e8c-7f11-461d-9389-2b2bf82ca057",
      "name": "Create Customer and Switch",
      "description": "",
      "item": [
        {
          "_postman_id": "88f4c9de-ad1a-492c-9dff-33d067810f21",
          "name": "Create Customer",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7fd0ed89-ce20-4361-9fbb-944873615ee7",
                "exec": [
                  "var timestamp = Date.now();",
                  "",
                  "var randomString = makeRandomString();",
                  "",
                  "// Set the timestamp to environment vars to create an unique",
                  "// customer on each test run.",
                  "pm.environment.set(\"customer_key\", timestamp);",
                  "",
                  "pm.environment.set(\"customer_name\", randomString);",
                  "",
                  "// Creates a random string of length 10.",
                  "function makeRandomString() {",
                  "  var text = \"\";",
                  "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                  "",
                  "  for (var i = 0; i < 10; i++)",
                  "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                  "",
                  "  return text;",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "6d5da495-3091-4a5f-81f5-9191f441d2ef",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required 1st level elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "});",
                  "",
                  "pm.test('Has required 2nd level elements', function() {",
                  "    pm.expect(jsonData.data).to.have.property('item');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "});",
                  "",
                  "pm.test('Has required 3rd level elements', function() {",
                  "    pm.expect(jsonData.data.item).to.have.property('email');",
                  "    pm.expect(jsonData.data.item).to.have.property('phoneNumber');",
                  "    pm.expect(jsonData.data.item).to.have.property('accountHolders');",
                  "    pm.expect(jsonData.data.item).to.have.property('accounts');",
                  "    pm.expect(jsonData.data.item).to.have.property('addresses');",
                  "    pm.expect(jsonData.data.item).to.have.property('metadata');",
                  "});",
                  "",
                  "pm.test('Has the correct kind attribute', function() {",
                  "   pm.expect(jsonData.data.kind).to.equal('Customer'); ",
                  "});",
                  "",
                  "pm.test('Has the correct email', function() {",
                  "   var email = jsonData.data.item.email;",
                  "   var customerEmail = pm.environment.get(\"customer_key\");",
                  "   pm.expect(email).to.equal(customerEmail + \"@clickswitch.com\")",
                  "});",
                  "",
                  "pm.test('Has the correct phoneNumber', function() {",
                  "   var phone = jsonData.data.item.phoneNumber;",
                  "   pm.expect(phone).to.equal(\"2185555555\")",
                  "});",
                  "",
                  "pm.test('Has the correct account holders', function() {",
                  "   var accountHolders = jsonData.data.item.accountHolders;",
                  "   ",
                  "   pm.expect(accountHolders).to.have.length(2);",
                  "   ",
                  "   var john = {",
                  "        \"firstName\": \"\",",
                  "        \"middleInitial\": \"J\",",
                  "        \"lastName\": \"Test\"",
                  "    };",
                  "    ",
                  "    john.firstName = pm.environment.get(\"customer_name\");",
                  "                ",
                  "    pm.expect(accountHolders).to.deep.include(john);",
                  "    ",
                  "   var jane = {",
                  "        \"firstName\": \"\",",
                  "        \"middleInitial\": \"M\",",
                  "        \"lastName\": \"Test\"",
                  "    };",
                  "    ",
                  "    jane.firstName = pm.environment.get(\"customer_name\");",
                  "                ",
                  "    pm.expect(accountHolders).to.deep.include(jane);",
                  "});",
                  "",
                  "pm.test('Has the correct accounts', function() {",
                  "   var accounts = jsonData.data.item.accounts;",
                  "   ",
                  "   pm.expect(accounts).to.have.length(2);",
                  "   ",
                  "   var account = {",
                  "        \"number\": \"\",",
                  "        \"type\": \"\",",
                  "        \"name\": \"\",",
                  "        \"routingNumber\": \"\",",
                  "        \"index\": 0,",
                  "        \"metadata\": {}",
                  "    };",
                  "    ",
                  "    // Set the account vars to the values passed in the request body.",
                  "    account.number = pm.environment.get(\"customer_key\").toString();",
                  "    account.type = pm.environment.get(\"checking_type\");",
                  "    account.name = pm.environment.get(\"checking_name\");",
                  "    account.routingNumber = pm.environment.get(\"routing_number\");",
                  "    ",
                  "    pm.expect(accounts).to.deep.include(account);",
                  "    ",
                  "    // Todo: This should have an index of 1. Bug reported.",
                  "    var account2 = {",
                  "        \"number\": \"\",",
                  "        \"type\": \"\",",
                  "        \"name\": \"\",",
                  "        \"routingNumber\": \"\",",
                  "        \"index\": 1,",
                  "        \"metadata\": {}",
                  "    };",
                  "    ",
                  "    // Set the account vars to the values passed in the request body.",
                  "    account2.number = pm.environment.get(\"customer_key\").toString()+\"0\";",
                  "    account2.type = pm.environment.get(\"savings_type\");",
                  "    account2.name = pm.environment.get(\"savings_name\");",
                  "    account2.routingNumber = pm.environment.get(\"routing_number_2\");",
                  "    ",
                  "    pm.expect(accounts).to.deep.include(account2);",
                  "    ",
                  "});",
                  "",
                  "pm.test('Has the correct addresses', function() {",
                  "   var addresses = jsonData.data.item.addresses;",
                  "   ",
                  "   pm.expect(addresses).to.have.length(1);",
                  "   ",
                  "   // Todo: Removed the spaces from the address.",
                  "   var address = {",
                  "        \"line1\": \"600 Canal Park Dr.\",",
                  "        \"city\": \"Duluth\",",
                  "        \"zip\": \"55802\",",
                  "        \"state\": \"MN\",",
                  "        \"country\": \"US\"",
                  "    };",
                  "                ",
                  "    pm.expect(addresses).to.deep.include(address);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "api key"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"customerKey\": \"{{customer_key}}\",\n    \"email\": \"{{customer_key}}@clickswitch.com\",\n    \"phoneNumber\": \"2185555555\",\n    \"accountHolders\" : [\n        {\n        \"firstName\": \"{{customer_name}}\",\n        \"middleInitial\": \"J\",\n        \"lastName\": \"Test\"\n        },\n        {\n        \"firstName\": \"{{customer_name}}\",\n        \"middleInitial\": \"M\",\n        \"lastName\": \"Test\"\n        }\n    ],\n    \"accounts\": [\n        {\n        \"number\": \"{{customer_key}}\",\n        \"type\": \"{{checking_type}}\",\n        \"name\": \"{{checking_name}}\",\n        \"routingNumber\": \"{{routing_number}}\"\n        },\n        {\n        \"number\": \"{{customer_key}}0\",\n        \"type\": \"{{savings_type}}\",\n        \"name\": \"{{savings_name}}\",\n        \"routingNumber\": \"{{routing_number_2}}\"\n        },\n        {\n        \"number\": \"{{customer_key}}00\",\n        \"type\": \"{{savings_type}}\",\n        \"name\": \"{{savings_name}}\",\n        \"routingNumber\": \"{{routing_number_2}}\"\n        },\n        {\n        \"number\": \"{{customer_key}}000\",\n        \"type\": \"{{savings_type}}\",\n        \"name\": \"{{savings_name}}\",\n        \"routingNumber\": \"{{routing_number_2}}\"\n        },\n        {\n        \"number\": \"{{customer_key}}0000\",\n        \"type\": \"{{savings_type}}\",\n        \"name\": \"{{savings_name}}\",\n        \"routingNumber\": \"{{routing_number_2}}\"\n        }\n    ],\n    \"addresses\": [\n        {\n            \"line1\": \"600 Canal Park Dr.\",\n            \"city\": \"Duluth\",\n            \"zip\": \"55802\",\n            \"state\": \"MN\",\n            \"country\": \"US\"\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{base_url}}{{customers_postfix}}{{customer_key}}",
              "host": [
                "{{base_url}}{{customers_postfix}}{{customer_key}}"
              ],
              "query": [
                {
                  "key": "context",
                  "value": "",
                  "equals": true,
                  "disabled": true
                }
              ]
            },
            "description": "Test that creates a customer with two account holders and two accounts."
          },
          "response": []
        },
        {
          "_postman_id": "5cc58d8f-ac93-4811-bee4-3e7a5468c00b",
          "name": "Target By Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "10795ed6-ce38-4565-8bdb-19fc007914ed",
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "const isCanada = pm.environment.get('isCanada') === 'true';",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "});",
                  "",
                  "pm.test('Has some items', function() {",
                  "   pm.expect(jsonData.data.currentItemCount).to.be.above(0);",
                  "   pm.expect(jsonData.data.items.length).to.be.above(0);",
                  "});",
                  "",
                  "pm.test('Has required inner elements', function() {",
                  "    jsonData.data.items.forEach(i => {",
                  "        pm.expect(i).to.have.property('targetId');",
                  "        pm.expect(i).to.have.property('name');",
                  "        pm.expect(i).to.have.property('type');",
                  "        pm.expect(i.type).to.eql('deposit');",
                  "    });",
                  "});",
                  "",
                  "pm.test('Has the correct kind attribute', function() {",
                  "   pm.expect(jsonData.data.kind).to.equal('types#targets'); ",
                  "});",
                  "",
                  "// Set an environment variable to test get target by id next.",
                  "pm.environment.set(\"split_deposit_target_id\", jsonData.data.items[0].targetId);"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api Key"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base_url}}{{targets_postfix2}}?type=deposit&name={{split_deposit_name}}&customer={{customer_key}}",
              "host": [
                "{{base_url}}{{targets_postfix2}}"
              ],
              "query": [
                {
                  "key": "type",
                  "value": "deposit",
                  "equals": true
                },
                {
                  "key": "name",
                  "value": "{{split_deposit_name}}",
                  "equals": true
                },
                {
                  "key": "customer",
                  "value": "{{customer_key}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "2982d8e0-eb0c-4de4-88d6-5f5afa859ddb",
          "name": "Target By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e61e303a-619f-4bcf-aa1a-8b5f128fc5bc",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "const isCanada = pm.environment.get('isCanada') === 'true';",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "    pm.expect(jsonData.data).to.have.property('item');",
                  "});",
                  "",
                  "pm.test('Has required inner elements', function() {",
                  "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                  "    pm.expect(jsonData.data.item).to.have.property('name');",
                  "    pm.expect(jsonData.data.item).to.have.property('type');",
                  "    pm.expect(jsonData.data.item).to.have.property('finalAction');",
                  "    pm.expect(jsonData.data.item).to.have.property('ux');",
                  "});",
                  "",
                  "pm.test('Has the correct kind attribute', function() {",
                  "   pm.expect(jsonData.data.kind).to.equal('target'); ",
                  "});",
                  "",
                  "pm.test('Has the correct type element', function() {",
                  "   pm.expect(jsonData.data.item.type).to.equal('deposit'); ",
                  "});",
                  "",
                  "pm.test('Has the correct categories', function() {",
                  "    var categories = {",
                  "        \"key\": \"1\",",
                  "        \"label\": \"Payroll\"",
                  "    };  ",
                  "    pm.expect(jsonData.data.item.categories).to.deep.include(categories); ",
                  "});",
                  "",
                  "pm.test('Has the correct ux element', function() {",
                  "    var ux = {",
                  "        \"accounts\": {",
                  "            \"limit\": 5,",
                  "            \"maxChecking\": 5,",
                  "            \"maxSavings\": 5,",
                  "            \"choices\": [],",
                  "            \"fields\": [",
                  "                {",
                  "                    \"key\": \"SplitAmount\",",
                  "                    \"label\": \"Percent or Fixed Amount\",",
                  "                    \"type\": \"textbox\",",
                  "                    \"required\": true,",
                  "                    \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                  "                    \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                  "                },",
                  "                {",
                  "                    \"key\": \"SplitType\",",
                  "                    \"label\": \"Type\",",
                  "                    \"type\": \"select\",",
                  "                    \"required\": true,",
                  "                    \"selections\": [",
                  "                        {",
                  "                            \"key\": \"Remainder\",",
                  "                            \"label\": \"Remainder\"",
                  "                        }",
                  "                    ]",
                  "                },",
                  "                {",
                  "                    \"key\": \"Custom_A for Add account or C for Change acct\",",
                  "                    \"label\": \"Split[5]_A for Add account or C for Change account\",",
                  "                    \"type\": \"Textbox\",",
                  "                    \"required\": false",
                  "                },",
                  "                {",
                  "                    \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                  "                    \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                  "                    \"type\": \"Textbox\",",
                  "                    \"required\": false",
                  "                }",
                  "            ]",
                  "        },",
                  "        \"fields\": [",
                  "            {",
                  "                \"key\": \"Custom_Agency ID\",",
                  "                \"label\": \"Agency ID\",",
                  "                \"type\": \"textbox\",",
                  "                \"required\": true",
                  "            },",
                  "            {",
                  "                \"key\": \"Custom_Employee Identification Number (EIN)\",",
                  "                \"label\": \"Employee Identification Number (EIN)\",",
                  "                \"type\": \"textbox\",",
                  "                \"required\": true",
                  "            }",
                  "        ]",
                  "    };",
                  "",
                  "    pm.expect(jsonData.data.item.ux).to.deep.include(ux); ",
                  "});",
                  "",
                  "pm.test('Has the correct final action', function() {",
                  "   pm.expect(jsonData.data.item.finalAction).to.equal('submit'); ",
                  "});",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api Key"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{base_url}}{{targets_postfix3}}{{split_deposit_target_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "6ff262b0-1f78-4d05-aedf-b7f1be54f07a",
          "name": "Create Switch",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "30a09755-1908-49ff-b5a5-9b2ac7c04a6f",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "});",
                  "",
                  "pm.test('Has required 2nd level elements', function() {",
                  "    pm.expect(jsonData.data.item).to.have.property('index');",
                  "    pm.expect(jsonData.data.item).to.have.property('type');",
                  "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                  "    pm.expect(jsonData.data.item).to.have.property('name');",
                  "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                  "    pm.expect(jsonData.data.item).to.have.property('values');",
                  "    pm.expect(jsonData.data.item).to.have.property('ux');",
                  "    pm.expect(jsonData.data.item).to.have.property('state');",
                  "});",
                  "",
                  "pm.test('Has the correct index', function() {",
                  "   pm.expect(jsonData.data.item.index).to.equal(1);",
                  "});",
                  "",
                  "pm.test('Has the correct type', function() {",
                  "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                  "});",
                  "",
                  "pm.test('Has the correct targetId', function() {",
                  "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                  "});",
                  "",
                  "pm.test('Has the correct accountHolderIndex', function() {",
                  "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                  "});",
                  "",
                  "pm.test('Has the correct state', function() {",
                  "    var state = {",
                  "        \"status\": \"Incomplete\",",
                  "        \"actions\": [",
                  "            \"HTTP-PUT\",",
                  "            \"Cancel\"",
                  "        ],",
                  "        \"validation\": {",
                  "            \"accounts\": [],",
                  "            \"fields\": {",
                  "                \"Custom_Agency ID\": \"Custom_Agency ID is required.\",",
                  "                \"Custom_Employee Identification Number (EIN)\": \"Custom_Employee Identification Number (EIN) is required.\"",
                  "            },",
                  "            \"overall\": []",
                  "        }",
                  "    };",
                  "    ",
                  "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                  "});",
                  "",
                  "pm.test('Has the correct ux.accounts element', function() {",
                  "   var accounts = {",
                  "        \"limit\": 5,",
                  "        \"maxChecking\": 5,",
                  "        \"maxSavings\": 5,",
                  "        \"choices\": [",
                  "            {",
                  "                \"index\": 0,",
                  "                \"label\": \"*6363\"",
                  "            },",
                  "            {",
                  "                \"index\": 1,",
                  "                \"label\": \"*3630\"",
                  "            }",
                  "        ],",
                  "        \"fields\": [",
                  "            {",
                  "                \"key\": \"SplitAmount\",",
                  "                \"label\": \"Percent or Fixed Amount\",",
                  "                \"type\": \"textbox\",",
                  "                \"required\": true,",
                  "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                  "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                  "            },",
                  "            {",
                  "                \"key\": \"SplitType\",",
                  "                \"label\": \"Type\",",
                  "                \"type\": \"select\",",
                  "                \"required\": true,",
                  "                \"selections\": [",
                  "                    {",
                  "                        \"key\": \"Remainder\",",
                  "                        \"label\": \"Remainder\"",
                  "                    }",
                  "                ]",
                  "            },",
                  "            {",
                  "                \"key\": \"Custom_A for Add account or C for Change acct\",",
                  "                \"label\": \"Split[5]_A for Add account or C for Change account\",",
                  "                \"type\": \"Textbox\",",
                  "                \"required\": false",
                  "            },",
                  "            {",
                  "                \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                  "                \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                  "                \"type\": \"Textbox\",",
                  "                \"required\": false",
                  "            }",
                  "        ]",
                  "    };",
                  "            ",
                  "    var customer_key = pm.environment.get('customer_key').toString();",
                  "    ",
                  "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                  "    ",
                  "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                  "    ",
                  "    accounts.choices[0].label = accountName1;",
                  "    accounts.choices[1].label = accountName2;",
                  "    ",
                  "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                  "});",
                  "",
                  "pm.test('Has the correct values element', function() {",
                  "   var values ={",
                  "        \"accounts\": [",
                  "            {",
                  "                \"index\": 0",
                  "            },",
                  "            {",
                  "                \"index\": 1",
                  "            }",
                  "        ],",
                  "        \"fields\": {",
                  "            \"Custom_Agency ID\": null,",
                  "            \"Custom_Employee Identification Number (EIN)\": null",
                  "        }",
                  "    };",
                  "    ",
                  "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "description": "Api-Key",
                "key": "api-key",
                "value": "{{api_key}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n\t{ \t\r\n\t\t\"index\": 0\r\n\t},\r\n\t{ \t\r\n\t\t\"index\": 1\r\n\t}\r\n    ]\r\n  }\r\n}"
            },
            "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
          },
          "response": []
        },
        {
          "_postman_id": "1859cd93-180b-4916-a12f-1d95fa6e85c1",
          "name": "Cancel Switch",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9b4982a1-c3ae-4b11-9f97-6ccd09edb375",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has the correct state', function() {",
                  "    var state = {",
                  "        \"status\": \"Canceled\",",
                  "        \"actions\": [",
                  "            \"Uncancel\",",
                  "            \"HTTP-DELETE\"",
                  "        ],",
                  "        \"validation\": {",
                  "            \"accounts\": [],",
                  "            \"fields\": {},",
                  "            \"overall\": [",
                  "                        \"At least one account must be selected\"",
                  "                    ]",
                  "        }",
                  "    };",
                  "    ",
                  "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"index\": 1,\r\n  \"action\": \"Cancel\"\r\n}"
            },
            "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1/action"
          },
          "response": []
        },
        {
          "_postman_id": "ac845ebf-db2f-4cca-9384-130a81cd58a6",
          "name": "Delete Switch",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1be1b33e-16f0-4720-af7c-af5cad2f089b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}"
              }
            ],
            "body": {},
            "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
            "description": "\t"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "87bc56d8-97ef-4322-8d9a-66355b3bac30",
      "name": "Split Deposit Switches",
      "description": null,
      "item": [
        {
          "_postman_id": "c29570c3-6ed1-462c-9f4c-2b0bfd93867f",
          "name": "One Account",
          "description": null,
          "item": [
            {
              "_postman_id": "d5165678-8a7f-47a3-8ba0-47fc50cad397",
              "name": "Zero Split Fields",
              "description": null,
              "item": [
                {
                  "_postman_id": "938dd699-16eb-4b00-8d0b-32badde87c2f",
                  "name": "One account, index only, no fields array",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "{\"index\": 0}"
                  },
                  "response": []
                },
                {
                  "_postman_id": "b8b6ca31-7b0d-4436-9842-a5bb2df64e2d",
                  "name": "One account,  empty fields array ",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"1649\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "8365dba0-f254-4500-b16f-f93d4d6c4d77",
                  "name": "One account, splitType included",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"1649\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\": \"Remainder\"\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "63ecdf47-2c75-414a-a172-dd4466b39147",
                  "name": "One account, splitType, splitAmount included",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"1649\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\": \"Remainder\",\r\n\t\t\t\t\"splitAmount\": 0\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "129d31f1-fbfa-463a-b34a-efb8afe05c6a",
              "name": "One Split Field",
              "description": null,
              "item": [
                {
                  "_postman_id": "44fd8f06-e30e-4a11-a031-2b7db6f66396",
                  "name": "One account, One Split Field, default value",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "cbdb7e16-cc0a-47f3-88e6-688f664ed1b4",
                  "name": "One Account, One Split Field, not default value",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "34aed533-df35-430e-99ce-7fd1d43cc242",
              "name": "Two Split Fields",
              "description": null,
              "item": [
                {
                  "_postman_id": "d95e2681-82ea-480d-b40e-0b78c92b241b",
                  "name": "One account, Two Split Fields, default values",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n \"type\": \"Deposit\",\r\n \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "2afc4886-d6ce-43d3-96e3-2ed03457aedb",
                  "name": "One Account, Two Split Fields, First not default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n \"type\": \"Deposit\",\r\n \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "f818028e-9903-489f-bd99-72a2153592ac",
                  "name": "One Account, Two Split Fields, Second not default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n \"type\": \"Deposit\",\r\n \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "34f634e5-30f9-45c0-8444-1a9b395c9cab",
                  "name": "One Account, Two Split Fields, neither is default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n \"type\": \"Deposit\",\r\n \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\": true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "1b1de1db-f40d-4289-863f-f4f9b92f51c7",
          "name": "Two Accounts",
          "description": null,
          "item": [
            {
              "_postman_id": "ae10d221-c716-4f23-9a4f-051fa6d767e5",
              "name": "Zero Split Fields",
              "description": null,
              "item": [
                {
                  "_postman_id": "903b5014-fe88-435c-bbb6-d1b84ee238cd",
                  "name": "index only, no fields array",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "0fd30fe9-21ea-4e0e-9581-307e7dc6e832",
                  "name": "empty fields array",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "269e683b-6b3e-449c-849c-713e53688e0f",
                  "name": "splitType included",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\":\"Remainder\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\":\"Currency\"\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "c92a784a-4dc8-47a0-ba18-657ff5cc8646",
                  "name": "splitType, splitAmount included",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Remainder\",\r\n\t\t\t\t\"SplitAmount\": 0\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Currency\",\r\n\t\t\t\t\"SplitAmount\": 10\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "99cb0931-2ab4-4b1e-8e7b-4fe6b1fe2dd1",
              "name": "One Split Field",
              "description": null,
              "item": [
                {
                  "_postman_id": "c2967b0c-48d9-4e93-9770-7ad2c10d9d6b",
                  "name": "default value in both splits",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "205ba38d-1004-4b16-9781-c56db211148e",
                  "name": "non-default value in first",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Percentage\",\r\n\t\t\t\t\"splitAmount\" : 101,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "48a50ead-a784-41a3-b70d-a3ed225f607d",
                  "name": "non-default value in second",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "this is a failing case because expected result is:\n\"accounts\": [\n    {\n        \"index\": 0,\n        \"fields\": {\n            \"splitAmount\": 0,\n            \"splitType\": \"Remainder\",\n            \"Custom_Is Entire Net Amount\": \"False\"\n        }\n    },\n    {\n        \"index\": 1,\n        \"fields\": {\n            \"splitAmount\": 10,\n            \"splitType\": \"Currency\",\n            \"Custom_Is Entire Net Amount\": \"true\"\n        }\n    }\n]\n\nThe SwitchToCustomerAccounts need to be inserted into the database in the opposite order they are in now"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "5d24bb31-88bd-4a67-bf6e-4c39c5cb75e9",
              "name": "Two SplitFields",
              "description": null,
              "item": [
                {
                  "_postman_id": "806e3c59-19f9-4fee-9eb1-f1fa8334342c",
                  "name": "all answers default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "9bef731c-8ab9-462f-be49-9aeaddc4e351",
                  "name": "one answer not default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "7f296460-7d79-40b9-bb6d-b11f79e85822",
                  "name": "two answers not default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\": true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "b4bf1a6c-8eda-4095-a65a-ef5b8835135a",
                  "name": "three answers not default -fail",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\": true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "356d34f9-1719-4fc4-9831-d7d2b1ed5c3b",
                  "name": "no answers are default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "d5328f85-2653-4c49-9988-5ba20948c54b",
                  "name": "first set of answers default, second set of answers not default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "101ed3fc-ade6-4d91-ad85-077fea2163b2",
          "name": "More Than Two Accounts",
          "description": null,
          "item": [
            {
              "_postman_id": "7ce1ca00-a3fb-49d3-8cb4-6876453679b6",
              "name": "Zero Split Fields",
              "description": null,
              "item": [
                {
                  "_postman_id": "bf338e6f-54ba-4d06-b445-8f6d2bf2e034",
                  "name": "index only, no fields array",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "de602ab2-7761-444e-a973-52da1a96b710",
                  "name": "empty fields array",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "a5a6d8c8-dace-4850-ae5d-2ab310198df2",
                  "name": "splitType included",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Currency\"\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "7aa73240-2e3c-4188-80e0-f02aec1e6eed",
                  "name": "splitType, splitAmount included",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "cfc7e375-03e9-457a-af08-d99d8f005743",
              "name": "One Split Field",
              "description": null,
              "item": [
                {
                  "_postman_id": "26dffe6f-a18e-423d-b4d1-a6b111a9c6bf",
                  "name": "default value in both splits",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "c08808f7-eb4e-49f5-9f12-70483cd14baf",
                  "name": "non-default value in first",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "edc78306-d5e7-4fa5-8e83-43c368596c89",
                  "name": "non-default value in second",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "this is a failing case because expected result is:\n\"accounts\": [\n    {\n        \"index\": 0,\n        \"fields\": {\n            \"splitAmount\": 0,\n            \"splitType\": \"Remainder\",\n            \"Custom_Is Entire Net Amount\": \"False\"\n        }\n    },\n    {\n        \"index\": 1,\n        \"fields\": {\n            \"splitAmount\": 10,\n            \"splitType\": \"Currency\",\n            \"Custom_Is Entire Net Amount\": \"true\"\n        }\n    }\n]\n\nThe SwitchToCustomerAccounts need to be inserted into the database in the opposite order they are in now"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "81c75e84-5611-4eba-b75d-dc288c8c3b7f",
              "name": "Two SplitFields",
              "description": null,
              "item": [
                {
                  "_postman_id": "212b2dde-611d-4952-811a-46947d18f70b",
                  "name": "all answers default",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0xMC0wMlQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.0YnhuhaOktkdZ9a34yT_wRDSemnFePAkanDXT5gZBW0"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "74327356-9399-4daf-81ce-9ab2b077fd2b",
                  "name": "one answer not default",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0xMC0wMlQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.0YnhuhaOktkdZ9a34yT_wRDSemnFePAkanDXT5gZBW0",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "837e4e3e-c191-4863-ae52-e92bb1a854e8",
                  "name": "two answers not default",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0xMC0wMlQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.0YnhuhaOktkdZ9a34yT_wRDSemnFePAkanDXT5gZBW0",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "612ed418-22fb-4e3e-98ea-81c1f78c20c4",
                  "name": "three answers not default -fail",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "06fe7253-423d-4f8c-b5ce-f5d27fc45a8f",
                  "name": "no answers are default",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "934af30a-36f2-4299-916a-2931da6b4a2c",
                  "name": "first set of answers default, second set of answers not default",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e24a52f3-3137-4df0-b080-c1ee47fc0a3d",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c463a736-d5d8-4df0-8871-0d501f734980",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "993a5f8a-b408-48ec-ac3f-b2b3c70691a9",
          "name": "MissingSplitFieldsInRequest",
          "description": "An imperfect request is sent such that the fields array is present, but not all form template fields have a key value pair in the request",
          "item": [
            {
              "_postman_id": "52b918b3-603b-48e5-85f3-d5f72cde2b1e",
              "name": "One Missing Split Field",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "type": "text"
                  },
                  {
                    "key": "Content",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                "description": "One split field is missing from request"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "d08b7c95-abb5-4f4d-a2e3-d6587e7012ef",
          "name": "ExtraneousSplitFieldsInRequest",
          "description": "The request contains a key value pair for a field that does not exist in the form template fields table.",
          "item": [
            {
              "_postman_id": "a3289a32-be27-4666-bf41-30186375ef0c",
              "name": "One Extra Split Field",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "type": "text",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false,\r\n\t\t  \"Custom_I am extra field\":false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                "description": "One split field is missing from request"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "6bd6c3c2-bbda-4144-88ca-23cd5c7969ca",
          "name": "Account index does not exist",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "api-key",
                "type": "text",
                "value": "{{api_key}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \t\"accounts\":[\r\n{\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\":50,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"__Is Entire Net Amount\": true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"__Is Entire Net Amount\": false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 2,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"__Is Entire Net Amount\": false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 3,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"__Is Entire Net Amount\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
            },
            "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "6bccda22-0477-4722-804a-50244a64a1d3",
      "name": "Reilly 3484 Testing",
      "description": "",
      "item": [
        {
          "_postman_id": "fc540952-6cb0-4d15-918a-01390b7d1e79",
          "name": "County of Ventura, CA (43330)",
          "description": "",
          "item": [
            {
              "_postman_id": "6403b660-3d11-4b9a-89c6-67690bf6541a",
              "name": "Target By Name",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "10795ed6-ce38-4565-8bdb-19fc007914ed",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has some items', function() {",
                      "   pm.expect(jsonData.data.currentItemCount).to.be.above(0);",
                      "   pm.expect(jsonData.data.items.length).to.be.above(0);",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    jsonData.data.items.forEach(i => {",
                      "        pm.expect(i).to.have.property('targetId');",
                      "        pm.expect(i).to.have.property('name');",
                      "        pm.expect(i).to.have.property('type');",
                      "        pm.expect(i.type).to.eql('deposit');",
                      "    });",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('types#targets'); ",
                      "});",
                      "",
                      "// Set an environment variable to test get target by id next.",
                      "pm.environment.set(\"split_deposit_target_id\", jsonData.data.items[0].targetId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base_url}}{{targets_postfix2}}?type=deposit&name=County of Ventura, CA&customer={{customer_key}}",
                  "host": [
                    "{{base_url}}{{targets_postfix2}}"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "deposit",
                      "equals": true
                    },
                    {
                      "key": "name",
                      "value": "County of Ventura, CA",
                      "equals": true
                    },
                    {
                      "key": "customer",
                      "value": "{{customer_key}}",
                      "equals": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "e339525d-c5a3-483d-b52e-acc86780a5aa",
              "name": "Target By Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e61e303a-619f-4bcf-aa1a-8b5f128fc5bc",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "    pm.expect(jsonData.data).to.have.property('item');",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('finalAction');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('target'); ",
                      "});",
                      "",
                      "pm.test('Has the correct type element', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal('deposit'); ",
                      "});",
                      "",
                      "pm.test('Has the correct categories', function() {",
                      "    var categories = {",
                      "        \"key\": \"1\",",
                      "        \"label\": \"Payroll\"",
                      "    };  ",
                      "    pm.expect(jsonData.data.item.categories).to.deep.include(categories); ",
                      "});",
                      "",
                      "pm.test('Has the correct ux element', function() {",
                      "    var ux = {",
                      "        \"accounts\": {",
                      "            \"limit\": 5,",
                      "            \"maxChecking\": 5,",
                      "            \"maxSavings\": 5,",
                      "            \"choices\": [],",
                      "            \"fields\": [",
                      "                {",
                      "                    \"key\": \"SplitAmount\",",
                      "                    \"label\": \"Percent or Fixed Amount\",",
                      "                    \"type\": \"textbox\",",
                      "                    \"required\": true,",
                      "                    \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                    \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "                },",
                      "                {",
                      "                    \"key\": \"SplitType\",",
                      "                    \"label\": \"Type\",",
                      "                    \"type\": \"select\",",
                      "                    \"required\": true,",
                      "                    \"selections\": [",
                      "                        {",
                      "                            \"key\": \"Remainder\",",
                      "                            \"label\": \"Remainder\"",
                      "                        }",
                      "                    ]",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                    \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                    \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                }",
                      "            ]",
                      "        },",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"Custom_Agency ID\",",
                      "                \"label\": \"Agency ID\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Employee Identification Number (EIN)\",",
                      "                \"label\": \"Employee Identification Number (EIN)\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            }",
                      "        ]",
                      "    };",
                      "",
                      "    pm.expect(jsonData.data.item.ux).to.deep.include(ux); ",
                      "});",
                      "",
                      "pm.test('Has the correct final action', function() {",
                      "   pm.expect(jsonData.data.item.finalAction).to.equal('submit'); ",
                      "});",
                      "",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{targets_postfix3}}{{split_deposit_target_id}}"
              },
              "response": []
            },
            {
              "_postman_id": "504d4e12-1404-486b-813a-4315182eeb60",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30a09755-1908-49ff-b5a5-9b2ac7c04a6f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has required 2nd level elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('index');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                      "    pm.expect(jsonData.data.item).to.have.property('values');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "    pm.expect(jsonData.data.item).to.have.property('state');",
                      "});",
                      "",
                      "pm.test('Has the correct index', function() {",
                      "   pm.expect(jsonData.data.item.index).to.equal(1);",
                      "});",
                      "",
                      "pm.test('Has the correct type', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                      "});",
                      "",
                      "pm.test('Has the correct targetId', function() {",
                      "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                      "});",
                      "",
                      "pm.test('Has the correct accountHolderIndex', function() {",
                      "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Incomplete\",",
                      "        \"actions\": [",
                      "            \"HTTP-PUT\",",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {",
                      "                \"Custom_Agency ID\": \"Custom_Agency ID is required.\",",
                      "                \"Custom_Employee Identification Number (EIN)\": \"Custom_Employee Identification Number (EIN) is required.\"",
                      "            },",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      "",
                      "pm.test('Has the correct ux.accounts element', function() {",
                      "   var accounts = {",
                      "        \"limit\": 5,",
                      "        \"maxChecking\": 5,",
                      "        \"maxSavings\": 5,",
                      "        \"choices\": [",
                      "            {",
                      "                \"index\": 0,",
                      "                \"label\": \"*6363\"",
                      "            },",
                      "            {",
                      "                \"index\": 1,",
                      "                \"label\": \"*3630\"",
                      "            }",
                      "        ],",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"SplitAmount\",",
                      "                \"label\": \"Percent or Fixed Amount\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true,",
                      "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "            },",
                      "            {",
                      "                \"key\": \"SplitType\",",
                      "                \"label\": \"Type\",",
                      "                \"type\": \"select\",",
                      "                \"required\": true,",
                      "                \"selections\": [",
                      "                    {",
                      "                        \"key\": \"Remainder\",",
                      "                        \"label\": \"Remainder\"",
                      "                    }",
                      "                ]",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            }",
                      "        ]",
                      "    };",
                      "            ",
                      "    var customer_key = pm.environment.get('customer_key').toString();",
                      "    ",
                      "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                      "    ",
                      "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                      "    ",
                      "    accounts.choices[0].label = accountName1;",
                      "    accounts.choices[1].label = accountName2;",
                      "    ",
                      "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct values element', function() {",
                      "   var values ={",
                      "        \"accounts\": [",
                      "            {",
                      "                \"index\": 0",
                      "            },",
                      "            {",
                      "                \"index\": 1",
                      "            }",
                      "        ],",
                      "        \"fields\": {",
                      "            \"Custom_Agency ID\": null,",
                      "            \"Custom_Employee Identification Number (EIN)\": null",
                      "        }",
                      "    };",
                      "    ",
                      "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "description": "Api-Key",
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n\t{ \t\r\n\t\t\"index\": 0\r\n\t},\r\n\t{ \t\r\n\t\t\"index\": 1\r\n\t}\r\n    ]\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
              },
              "response": []
            },
            {
              "_postman_id": "b2e7e22b-4cca-4bc3-9674-6769d9742e97",
              "name": "Update Switch",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "type": "text",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Percentage\",\r\n\t\t\t\t\"SplitAmount\": 10\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Remainder\",\r\n\t\t\t\t\"SplitAmount\": 0\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_Employee/ID\": \"1234\",\r\n\t  \"Custom_Company/Dept\": \"Testing\"\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
              },
              "response": []
            },
            {
              "_postman_id": "89df1f73-d8a9-4e1a-a71d-957a26f002b5",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc9a5690-3ae7-4784-a80f-1de7b2c418db",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has the correct context', function() {",
                      "    pm.expect(jsonData.context).to.equal('testing_context');",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Submitted\",",
                      "        \"actions\": [",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {},",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"index\": 1,\r\n  \"action\": \"Submit\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1/action{{context_param}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "0250f50f-0037-4553-aa35-a7fb6aa2d212",
          "name": "Wheaton Franciscan Healthcare (2612)",
          "description": "",
          "item": [
            {
              "_postman_id": "cc39b201-d915-42a7-a945-23dcf702bdd2",
              "name": "Target By Name",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "10795ed6-ce38-4565-8bdb-19fc007914ed",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has some items', function() {",
                      "   pm.expect(jsonData.data.currentItemCount).to.be.above(0);",
                      "   pm.expect(jsonData.data.items.length).to.be.above(0);",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    jsonData.data.items.forEach(i => {",
                      "        pm.expect(i).to.have.property('targetId');",
                      "        pm.expect(i).to.have.property('name');",
                      "        pm.expect(i).to.have.property('type');",
                      "        pm.expect(i.type).to.eql('deposit');",
                      "    });",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('types#targets'); ",
                      "});",
                      "",
                      "// Set an environment variable to test get target by id next.",
                      "pm.environment.set(\"split_deposit_target_id\", jsonData.data.items[0].targetId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base_url}}{{targets_postfix2}}?type=deposit&name=Wheaton Franciscan Healthcare&customer={{customer_key}}",
                  "host": [
                    "{{base_url}}{{targets_postfix2}}"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "deposit",
                      "equals": true
                    },
                    {
                      "key": "name",
                      "value": "Wheaton Franciscan Healthcare",
                      "equals": true
                    },
                    {
                      "key": "customer",
                      "value": "{{customer_key}}",
                      "equals": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "94e68115-b391-4ca5-9931-7c77c722099f",
              "name": "Target By Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e61e303a-619f-4bcf-aa1a-8b5f128fc5bc",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "    pm.expect(jsonData.data).to.have.property('item');",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('finalAction');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('target'); ",
                      "});",
                      "",
                      "pm.test('Has the correct type element', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal('deposit'); ",
                      "});",
                      "",
                      "pm.test('Has the correct categories', function() {",
                      "    var categories = {",
                      "        \"key\": \"1\",",
                      "        \"label\": \"Payroll\"",
                      "    };  ",
                      "    pm.expect(jsonData.data.item.categories).to.deep.include(categories); ",
                      "});",
                      "",
                      "pm.test('Has the correct ux element', function() {",
                      "    var ux = {",
                      "        \"accounts\": {",
                      "            \"limit\": 5,",
                      "            \"maxChecking\": 5,",
                      "            \"maxSavings\": 5,",
                      "            \"choices\": [],",
                      "            \"fields\": [",
                      "                {",
                      "                    \"key\": \"SplitAmount\",",
                      "                    \"label\": \"Percent or Fixed Amount\",",
                      "                    \"type\": \"textbox\",",
                      "                    \"required\": true,",
                      "                    \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                    \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "                },",
                      "                {",
                      "                    \"key\": \"SplitType\",",
                      "                    \"label\": \"Type\",",
                      "                    \"type\": \"select\",",
                      "                    \"required\": true,",
                      "                    \"selections\": [",
                      "                        {",
                      "                            \"key\": \"Remainder\",",
                      "                            \"label\": \"Remainder\"",
                      "                        }",
                      "                    ]",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                    \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                    \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                }",
                      "            ]",
                      "        },",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"Custom_Agency ID\",",
                      "                \"label\": \"Agency ID\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Employee Identification Number (EIN)\",",
                      "                \"label\": \"Employee Identification Number (EIN)\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            }",
                      "        ]",
                      "    };",
                      "",
                      "    pm.expect(jsonData.data.item.ux).to.deep.include(ux); ",
                      "});",
                      "",
                      "pm.test('Has the correct final action', function() {",
                      "   pm.expect(jsonData.data.item.finalAction).to.equal('submit'); ",
                      "});",
                      "",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{targets_postfix3}}{{split_deposit_target_id}}"
              },
              "response": []
            },
            {
              "_postman_id": "63957b86-5659-4d91-bce1-c2482ca5a099",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30a09755-1908-49ff-b5a5-9b2ac7c04a6f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has required 2nd level elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('index');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                      "    pm.expect(jsonData.data.item).to.have.property('values');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "    pm.expect(jsonData.data.item).to.have.property('state');",
                      "});",
                      "",
                      "pm.test('Has the correct index', function() {",
                      "   pm.expect(jsonData.data.item.index).to.equal(1);",
                      "});",
                      "",
                      "pm.test('Has the correct type', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                      "});",
                      "",
                      "pm.test('Has the correct targetId', function() {",
                      "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                      "});",
                      "",
                      "pm.test('Has the correct accountHolderIndex', function() {",
                      "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Incomplete\",",
                      "        \"actions\": [",
                      "            \"HTTP-PUT\",",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {",
                      "                \"Custom_Agency ID\": \"Custom_Agency ID is required.\",",
                      "                \"Custom_Employee Identification Number (EIN)\": \"Custom_Employee Identification Number (EIN) is required.\"",
                      "            },",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      "",
                      "pm.test('Has the correct ux.accounts element', function() {",
                      "   var accounts = {",
                      "        \"limit\": 5,",
                      "        \"maxChecking\": 5,",
                      "        \"maxSavings\": 5,",
                      "        \"choices\": [",
                      "            {",
                      "                \"index\": 0,",
                      "                \"label\": \"*6363\"",
                      "            },",
                      "            {",
                      "                \"index\": 1,",
                      "                \"label\": \"*3630\"",
                      "            }",
                      "        ],",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"SplitAmount\",",
                      "                \"label\": \"Percent or Fixed Amount\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true,",
                      "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "            },",
                      "            {",
                      "                \"key\": \"SplitType\",",
                      "                \"label\": \"Type\",",
                      "                \"type\": \"select\",",
                      "                \"required\": true,",
                      "                \"selections\": [",
                      "                    {",
                      "                        \"key\": \"Remainder\",",
                      "                        \"label\": \"Remainder\"",
                      "                    }",
                      "                ]",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            }",
                      "        ]",
                      "    };",
                      "            ",
                      "    var customer_key = pm.environment.get('customer_key').toString();",
                      "    ",
                      "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                      "    ",
                      "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                      "    ",
                      "    accounts.choices[0].label = accountName1;",
                      "    accounts.choices[1].label = accountName2;",
                      "    ",
                      "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct values element', function() {",
                      "   var values ={",
                      "        \"accounts\": [",
                      "            {",
                      "                \"index\": 0",
                      "            },",
                      "            {",
                      "                \"index\": 1",
                      "            }",
                      "        ],",
                      "        \"fields\": {",
                      "            \"Custom_Agency ID\": null,",
                      "            \"Custom_Employee Identification Number (EIN)\": null",
                      "        }",
                      "    };",
                      "    ",
                      "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "description": "Api-Key",
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n\t{ \t\r\n\t\t\"index\": 0\r\n\t},\r\n\t{ \t\r\n\t\t\"index\": 1\r\n\t}\r\n    ]\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
              },
              "response": []
            },
            {
              "_postman_id": "73a5c5fc-78a1-4565-98d8-6bf3e44e2a69",
              "name": "Update Switch",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "type": "text",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Currency\",\r\n\t\t\t\t\"SplitAmount\": 10\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Remainder\",\r\n\t\t\t\t\"SplitAmount\": 01\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 2,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Currency\",\r\n\t\t\t\t\"SplitAmount\": 01,\r\n\t\t\t\t\"Custom_Account:Add\": true,\r\n                \"Custom_Account:Change\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_Employee/ID\": \"1234\",\r\n\t  \"Custom_Company/Dept\": \"Testing\"\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
              },
              "response": []
            },
            {
              "_postman_id": "d74b1cdc-0e2f-42d0-9a2d-67782086b3a1",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc9a5690-3ae7-4784-a80f-1de7b2c418db",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has the correct context', function() {",
                      "    pm.expect(jsonData.context).to.equal('testing_context');",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Submitted\",",
                      "        \"actions\": [",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {},",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"index\": 1,\r\n  \"action\": \"Submit\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1/action{{context_param}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "24cd3487-5f62-45e1-8e2f-26dc55b0b3ad",
          "name": "State of Utah (Payroll) (14288)",
          "description": "",
          "item": [
            {
              "_postman_id": "6e64860c-37d6-4c97-9575-236f77eb811c",
              "name": "Target By Name",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "10795ed6-ce38-4565-8bdb-19fc007914ed",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has some items', function() {",
                      "   pm.expect(jsonData.data.currentItemCount).to.be.above(0);",
                      "   pm.expect(jsonData.data.items.length).to.be.above(0);",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    jsonData.data.items.forEach(i => {",
                      "        pm.expect(i).to.have.property('targetId');",
                      "        pm.expect(i).to.have.property('name');",
                      "        pm.expect(i).to.have.property('type');",
                      "        pm.expect(i.type).to.eql('deposit');",
                      "    });",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('types#targets'); ",
                      "});",
                      "",
                      "// Set an environment variable to test get target by id next.",
                      "pm.environment.set(\"split_deposit_target_id\", jsonData.data.items[0].targetId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base_url}}{{targets_postfix2}}?type=deposit&name=State of Utah (Payroll)&customer={{customer_key}}",
                  "host": [
                    "{{base_url}}{{targets_postfix2}}"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "deposit",
                      "equals": true
                    },
                    {
                      "key": "name",
                      "value": "State of Utah (Payroll)",
                      "equals": true
                    },
                    {
                      "key": "customer",
                      "value": "{{customer_key}}",
                      "equals": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "cab085ba-1888-455b-9058-93bf39cb816b",
              "name": "Target By Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e61e303a-619f-4bcf-aa1a-8b5f128fc5bc",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "    pm.expect(jsonData.data).to.have.property('item');",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('finalAction');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('target'); ",
                      "});",
                      "",
                      "pm.test('Has the correct type element', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal('deposit'); ",
                      "});",
                      "",
                      "pm.test('Has the correct categories', function() {",
                      "    var categories = {",
                      "        \"key\": \"1\",",
                      "        \"label\": \"Payroll\"",
                      "    };  ",
                      "    pm.expect(jsonData.data.item.categories).to.deep.include(categories); ",
                      "});",
                      "",
                      "pm.test('Has the correct ux element', function() {",
                      "    var ux = {",
                      "        \"accounts\": {",
                      "            \"limit\": 5,",
                      "            \"maxChecking\": 5,",
                      "            \"maxSavings\": 5,",
                      "            \"choices\": [],",
                      "            \"fields\": [",
                      "                {",
                      "                    \"key\": \"SplitAmount\",",
                      "                    \"label\": \"Percent or Fixed Amount\",",
                      "                    \"type\": \"textbox\",",
                      "                    \"required\": true,",
                      "                    \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                    \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "                },",
                      "                {",
                      "                    \"key\": \"SplitType\",",
                      "                    \"label\": \"Type\",",
                      "                    \"type\": \"select\",",
                      "                    \"required\": true,",
                      "                    \"selections\": [",
                      "                        {",
                      "                            \"key\": \"Remainder\",",
                      "                            \"label\": \"Remainder\"",
                      "                        }",
                      "                    ]",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                    \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                    \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                }",
                      "            ]",
                      "        },",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"Custom_Agency ID\",",
                      "                \"label\": \"Agency ID\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Employee Identification Number (EIN)\",",
                      "                \"label\": \"Employee Identification Number (EIN)\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            }",
                      "        ]",
                      "    };",
                      "",
                      "    pm.expect(jsonData.data.item.ux).to.deep.include(ux); ",
                      "});",
                      "",
                      "pm.test('Has the correct final action', function() {",
                      "   pm.expect(jsonData.data.item.finalAction).to.equal('submit'); ",
                      "});",
                      "",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{targets_postfix3}}{{split_deposit_target_id}}"
              },
              "response": []
            },
            {
              "_postman_id": "ca760fc0-e8a8-4c40-8af1-6b3d67420f00",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30a09755-1908-49ff-b5a5-9b2ac7c04a6f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has required 2nd level elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('index');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                      "    pm.expect(jsonData.data.item).to.have.property('values');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "    pm.expect(jsonData.data.item).to.have.property('state');",
                      "});",
                      "",
                      "pm.test('Has the correct index', function() {",
                      "   pm.expect(jsonData.data.item.index).to.equal(1);",
                      "});",
                      "",
                      "pm.test('Has the correct type', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                      "});",
                      "",
                      "pm.test('Has the correct targetId', function() {",
                      "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                      "});",
                      "",
                      "pm.test('Has the correct accountHolderIndex', function() {",
                      "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Incomplete\",",
                      "        \"actions\": [",
                      "            \"HTTP-PUT\",",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {",
                      "                \"Custom_Agency ID\": \"Custom_Agency ID is required.\",",
                      "                \"Custom_Employee Identification Number (EIN)\": \"Custom_Employee Identification Number (EIN) is required.\"",
                      "            },",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      "",
                      "pm.test('Has the correct ux.accounts element', function() {",
                      "   var accounts = {",
                      "        \"limit\": 5,",
                      "        \"maxChecking\": 5,",
                      "        \"maxSavings\": 5,",
                      "        \"choices\": [",
                      "            {",
                      "                \"index\": 0,",
                      "                \"label\": \"*6363\"",
                      "            },",
                      "            {",
                      "                \"index\": 1,",
                      "                \"label\": \"*3630\"",
                      "            }",
                      "        ],",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"SplitAmount\",",
                      "                \"label\": \"Percent or Fixed Amount\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true,",
                      "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "            },",
                      "            {",
                      "                \"key\": \"SplitType\",",
                      "                \"label\": \"Type\",",
                      "                \"type\": \"select\",",
                      "                \"required\": true,",
                      "                \"selections\": [",
                      "                    {",
                      "                        \"key\": \"Remainder\",",
                      "                        \"label\": \"Remainder\"",
                      "                    }",
                      "                ]",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            }",
                      "        ]",
                      "    };",
                      "            ",
                      "    var customer_key = pm.environment.get('customer_key').toString();",
                      "    ",
                      "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                      "    ",
                      "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                      "    ",
                      "    accounts.choices[0].label = accountName1;",
                      "    accounts.choices[1].label = accountName2;",
                      "    ",
                      "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct values element', function() {",
                      "   var values ={",
                      "        \"accounts\": [",
                      "            {",
                      "                \"index\": 0",
                      "            },",
                      "            {",
                      "                \"index\": 1",
                      "            }",
                      "        ],",
                      "        \"fields\": {",
                      "            \"Custom_Agency ID\": null,",
                      "            \"Custom_Employee Identification Number (EIN)\": null",
                      "        }",
                      "    };",
                      "    ",
                      "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "description": "Api-Key",
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n\t{ \t\r\n\t\t\"index\": 0\r\n\t},\r\n\t{ \t\r\n\t\t\"index\": 1\r\n\t}\r\n    ]\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
              },
              "response": []
            },
            {
              "_postman_id": "142fafe0-6d6f-4a20-976b-26e8ce98ba00",
              "name": "Update Switch",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "type": "text",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Currency\",\r\n\t\t\t\t\"SplitAmount\": 10\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Percentage\",\r\n\t\t\t\t\"SplitAmount\": 01\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 2,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Percentage\",\r\n\t\t\t\t\"SplitAmount\": 01\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 3,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Currency\",\r\n\t\t\t\t\"SplitAmount\": 99\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_Employee/ID\": \"1234\",\r\n\t  \"Custom_Company/Dept\": \"Testing\"\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
              },
              "response": []
            },
            {
              "_postman_id": "b22c4cf4-2d25-4355-a194-f6950fca6bb7",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc9a5690-3ae7-4784-a80f-1de7b2c418db",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has the correct context', function() {",
                      "    pm.expect(jsonData.context).to.equal('testing_context');",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Submitted\",",
                      "        \"actions\": [",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {},",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"index\": 1,\r\n  \"action\": \"Submit\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1/action{{context_param}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "87ce54bf-e2af-4013-b42c-76d2de3332e6",
          "name": "JBS USA (Headquarters) (6785)",
          "description": "",
          "item": [
            {
              "_postman_id": "78cca538-b2a1-4b3a-a0f1-2e2992750e94",
              "name": "Target By Name",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "10795ed6-ce38-4565-8bdb-19fc007914ed",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has some items', function() {",
                      "   pm.expect(jsonData.data.currentItemCount).to.be.above(0);",
                      "   pm.expect(jsonData.data.items.length).to.be.above(0);",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    jsonData.data.items.forEach(i => {",
                      "        pm.expect(i).to.have.property('targetId');",
                      "        pm.expect(i).to.have.property('name');",
                      "        pm.expect(i).to.have.property('type');",
                      "        pm.expect(i.type).to.eql('deposit');",
                      "    });",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('types#targets'); ",
                      "});",
                      "",
                      "// Set an environment variable to test get target by id next.",
                      "pm.environment.set(\"split_deposit_target_id\", jsonData.data.items[0].targetId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base_url}}{{targets_postfix2}}?type=deposit&name=JBS USA (Headquarters)&customer={{customer_key}}",
                  "host": [
                    "{{base_url}}{{targets_postfix2}}"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "deposit",
                      "equals": true
                    },
                    {
                      "key": "name",
                      "value": "JBS USA (Headquarters)",
                      "equals": true
                    },
                    {
                      "key": "customer",
                      "value": "{{customer_key}}",
                      "equals": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "1246096e-fcdd-4221-89ee-90b1f9f91a45",
              "name": "Target By Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e61e303a-619f-4bcf-aa1a-8b5f128fc5bc",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "    pm.expect(jsonData.data).to.have.property('item');",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('finalAction');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('target'); ",
                      "});",
                      "",
                      "pm.test('Has the correct type element', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal('deposit'); ",
                      "});",
                      "",
                      "pm.test('Has the correct categories', function() {",
                      "    var categories = {",
                      "        \"key\": \"1\",",
                      "        \"label\": \"Payroll\"",
                      "    };  ",
                      "    pm.expect(jsonData.data.item.categories).to.deep.include(categories); ",
                      "});",
                      "",
                      "pm.test('Has the correct ux element', function() {",
                      "    var ux = {",
                      "        \"accounts\": {",
                      "            \"limit\": 5,",
                      "            \"maxChecking\": 5,",
                      "            \"maxSavings\": 5,",
                      "            \"choices\": [],",
                      "            \"fields\": [",
                      "                {",
                      "                    \"key\": \"SplitAmount\",",
                      "                    \"label\": \"Percent or Fixed Amount\",",
                      "                    \"type\": \"textbox\",",
                      "                    \"required\": true,",
                      "                    \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                    \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "                },",
                      "                {",
                      "                    \"key\": \"SplitType\",",
                      "                    \"label\": \"Type\",",
                      "                    \"type\": \"select\",",
                      "                    \"required\": true,",
                      "                    \"selections\": [",
                      "                        {",
                      "                            \"key\": \"Remainder\",",
                      "                            \"label\": \"Remainder\"",
                      "                        }",
                      "                    ]",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                    \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                    \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                }",
                      "            ]",
                      "        },",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"Custom_Agency ID\",",
                      "                \"label\": \"Agency ID\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Employee Identification Number (EIN)\",",
                      "                \"label\": \"Employee Identification Number (EIN)\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            }",
                      "        ]",
                      "    };",
                      "",
                      "    pm.expect(jsonData.data.item.ux).to.deep.include(ux); ",
                      "});",
                      "",
                      "pm.test('Has the correct final action', function() {",
                      "   pm.expect(jsonData.data.item.finalAction).to.equal('submit'); ",
                      "});",
                      "",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{targets_postfix3}}{{split_deposit_target_id}}"
              },
              "response": []
            },
            {
              "_postman_id": "3d1a8a73-9e57-4226-91cd-e1e5a4ebaff8",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30a09755-1908-49ff-b5a5-9b2ac7c04a6f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has required 2nd level elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('index');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                      "    pm.expect(jsonData.data.item).to.have.property('values');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "    pm.expect(jsonData.data.item).to.have.property('state');",
                      "});",
                      "",
                      "pm.test('Has the correct index', function() {",
                      "   pm.expect(jsonData.data.item.index).to.equal(1);",
                      "});",
                      "",
                      "pm.test('Has the correct type', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                      "});",
                      "",
                      "pm.test('Has the correct targetId', function() {",
                      "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                      "});",
                      "",
                      "pm.test('Has the correct accountHolderIndex', function() {",
                      "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Incomplete\",",
                      "        \"actions\": [",
                      "            \"HTTP-PUT\",",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {",
                      "                \"Custom_Agency ID\": \"Custom_Agency ID is required.\",",
                      "                \"Custom_Employee Identification Number (EIN)\": \"Custom_Employee Identification Number (EIN) is required.\"",
                      "            },",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      "",
                      "pm.test('Has the correct ux.accounts element', function() {",
                      "   var accounts = {",
                      "        \"limit\": 5,",
                      "        \"maxChecking\": 5,",
                      "        \"maxSavings\": 5,",
                      "        \"choices\": [",
                      "            {",
                      "                \"index\": 0,",
                      "                \"label\": \"*6363\"",
                      "            },",
                      "            {",
                      "                \"index\": 1,",
                      "                \"label\": \"*3630\"",
                      "            }",
                      "        ],",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"SplitAmount\",",
                      "                \"label\": \"Percent or Fixed Amount\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true,",
                      "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "            },",
                      "            {",
                      "                \"key\": \"SplitType\",",
                      "                \"label\": \"Type\",",
                      "                \"type\": \"select\",",
                      "                \"required\": true,",
                      "                \"selections\": [",
                      "                    {",
                      "                        \"key\": \"Remainder\",",
                      "                        \"label\": \"Remainder\"",
                      "                    }",
                      "                ]",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            }",
                      "        ]",
                      "    };",
                      "            ",
                      "    var customer_key = pm.environment.get('customer_key').toString();",
                      "    ",
                      "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                      "    ",
                      "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                      "    ",
                      "    accounts.choices[0].label = accountName1;",
                      "    accounts.choices[1].label = accountName2;",
                      "    ",
                      "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct values element', function() {",
                      "   var values ={",
                      "        \"accounts\": [",
                      "            {",
                      "                \"index\": 0",
                      "            },",
                      "            {",
                      "                \"index\": 1",
                      "            }",
                      "        ],",
                      "        \"fields\": {",
                      "            \"Custom_Agency ID\": null,",
                      "            \"Custom_Employee Identification Number (EIN)\": null",
                      "        }",
                      "    };",
                      "    ",
                      "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "description": "Api-Key",
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n\t{ \t\r\n\t\t\"index\": 0,\r\n        \"Custom_Account:Add\": false,\r\n               \"Custom_Account:Change\": false\r\n\t},\r\n\t{ \t\r\n\t\t\"index\": 1,\r\n\t\t        \"Custom_Account:Add\": false,\r\n               \"Custom_Account:Change\": false\r\n\t}\r\n    ]\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
              },
              "response": []
            },
            {
              "_postman_id": "f5f6d761-910a-4693-9a15-2d67fc4ba373",
              "name": "Update Switch",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "type": "text",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Currency\",\r\n\t\t\t\t\"SplitAmount\": 10,\r\n\t\t\t\t\"Custom_Account:Add\": true,\r\n                \"Custom_Account:Change\": false\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Currency\",\r\n\t\t\t\t\"SplitAmount\": 01,\r\n\t\t\t\t\"Custom_Account:Add\": true,\r\n                \"Custom_Account:Change\": false\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 2,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Percentage\",\r\n\t\t\t\t\"SplitAmount\": 01,\r\n\t\t\t\t\"Custom_Account:Add\": true,\r\n                \"Custom_Account:Change\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_Employee/ID\": \"1234\",\r\n\t  \"Custom_Company/Location\": \"Testing\",\r\n\t  \"Custom_SSN\": \"1234\"\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
              },
              "response": []
            },
            {
              "_postman_id": "6d5565f2-6ed5-4126-80e9-1e78511a3321",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc9a5690-3ae7-4784-a80f-1de7b2c418db",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has the correct context', function() {",
                      "    pm.expect(jsonData.context).to.equal('testing_context');",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Submitted\",",
                      "        \"actions\": [",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {},",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"index\": 1,\r\n  \"action\": \"Submit\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1/action{{context_param}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "5cedb939-591d-4a1b-9e18-9754a0adc451",
          "name": "Paychex, Inc. (15995)",
          "description": "",
          "item": [
            {
              "_postman_id": "59baa251-5de0-4318-a869-949f4776c6e8",
              "name": "Target By Name",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "10795ed6-ce38-4565-8bdb-19fc007914ed",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has some items', function() {",
                      "   pm.expect(jsonData.data.currentItemCount).to.be.above(0);",
                      "   pm.expect(jsonData.data.items.length).to.be.above(0);",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    jsonData.data.items.forEach(i => {",
                      "        pm.expect(i).to.have.property('targetId');",
                      "        pm.expect(i).to.have.property('name');",
                      "        pm.expect(i).to.have.property('type');",
                      "        pm.expect(i.type).to.eql('deposit');",
                      "    });",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('types#targets'); ",
                      "});",
                      "",
                      "// Set an environment variable to test get target by id next.",
                      "pm.environment.set(\"split_deposit_target_id\", jsonData.data.items[0].targetId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base_url}}{{targets_postfix2}}?type=deposit&name=Paychex, Inc.&customer={{customer_key}}",
                  "host": [
                    "{{base_url}}{{targets_postfix2}}"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "deposit",
                      "equals": true
                    },
                    {
                      "key": "name",
                      "value": "Paychex, Inc.",
                      "equals": true
                    },
                    {
                      "key": "customer",
                      "value": "{{customer_key}}",
                      "equals": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "274d42d6-48f5-4e70-b85b-abcb4eb13f0e",
              "name": "Target By Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e61e303a-619f-4bcf-aa1a-8b5f128fc5bc",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "    pm.expect(jsonData.data).to.have.property('item');",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('finalAction');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('target'); ",
                      "});",
                      "",
                      "pm.test('Has the correct type element', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal('deposit'); ",
                      "});",
                      "",
                      "pm.test('Has the correct categories', function() {",
                      "    var categories = {",
                      "        \"key\": \"1\",",
                      "        \"label\": \"Payroll\"",
                      "    };  ",
                      "    pm.expect(jsonData.data.item.categories).to.deep.include(categories); ",
                      "});",
                      "",
                      "pm.test('Has the correct ux element', function() {",
                      "    var ux = {",
                      "        \"accounts\": {",
                      "            \"limit\": 5,",
                      "            \"maxChecking\": 5,",
                      "            \"maxSavings\": 5,",
                      "            \"choices\": [],",
                      "            \"fields\": [",
                      "                {",
                      "                    \"key\": \"SplitAmount\",",
                      "                    \"label\": \"Percent or Fixed Amount\",",
                      "                    \"type\": \"textbox\",",
                      "                    \"required\": true,",
                      "                    \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                    \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "                },",
                      "                {",
                      "                    \"key\": \"SplitType\",",
                      "                    \"label\": \"Type\",",
                      "                    \"type\": \"select\",",
                      "                    \"required\": true,",
                      "                    \"selections\": [",
                      "                        {",
                      "                            \"key\": \"Remainder\",",
                      "                            \"label\": \"Remainder\"",
                      "                        }",
                      "                    ]",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                    \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                    \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                }",
                      "            ]",
                      "        },",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"Custom_Agency ID\",",
                      "                \"label\": \"Agency ID\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Employee Identification Number (EIN)\",",
                      "                \"label\": \"Employee Identification Number (EIN)\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            }",
                      "        ]",
                      "    };",
                      "",
                      "    pm.expect(jsonData.data.item.ux).to.deep.include(ux); ",
                      "});",
                      "",
                      "pm.test('Has the correct final action', function() {",
                      "   pm.expect(jsonData.data.item.finalAction).to.equal('submit'); ",
                      "});",
                      "",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{targets_postfix3}}{{split_deposit_target_id}}"
              },
              "response": []
            },
            {
              "_postman_id": "15ff943d-b1ed-4ffb-a78c-8748fb699a05",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30a09755-1908-49ff-b5a5-9b2ac7c04a6f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has required 2nd level elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('index');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                      "    pm.expect(jsonData.data.item).to.have.property('values');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "    pm.expect(jsonData.data.item).to.have.property('state');",
                      "});",
                      "",
                      "pm.test('Has the correct index', function() {",
                      "   pm.expect(jsonData.data.item.index).to.equal(1);",
                      "});",
                      "",
                      "pm.test('Has the correct type', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                      "});",
                      "",
                      "pm.test('Has the correct targetId', function() {",
                      "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                      "});",
                      "",
                      "pm.test('Has the correct accountHolderIndex', function() {",
                      "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Incomplete\",",
                      "        \"actions\": [",
                      "            \"HTTP-PUT\",",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {",
                      "                \"Custom_Agency ID\": \"Custom_Agency ID is required.\",",
                      "                \"Custom_Employee Identification Number (EIN)\": \"Custom_Employee Identification Number (EIN) is required.\"",
                      "            },",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      "",
                      "pm.test('Has the correct ux.accounts element', function() {",
                      "   var accounts = {",
                      "        \"limit\": 5,",
                      "        \"maxChecking\": 5,",
                      "        \"maxSavings\": 5,",
                      "        \"choices\": [",
                      "            {",
                      "                \"index\": 0,",
                      "                \"label\": \"*6363\"",
                      "            },",
                      "            {",
                      "                \"index\": 1,",
                      "                \"label\": \"*3630\"",
                      "            }",
                      "        ],",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"SplitAmount\",",
                      "                \"label\": \"Percent or Fixed Amount\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true,",
                      "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "            },",
                      "            {",
                      "                \"key\": \"SplitType\",",
                      "                \"label\": \"Type\",",
                      "                \"type\": \"select\",",
                      "                \"required\": true,",
                      "                \"selections\": [",
                      "                    {",
                      "                        \"key\": \"Remainder\",",
                      "                        \"label\": \"Remainder\"",
                      "                    }",
                      "                ]",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            }",
                      "        ]",
                      "    };",
                      "            ",
                      "    var customer_key = pm.environment.get('customer_key').toString();",
                      "    ",
                      "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                      "    ",
                      "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                      "    ",
                      "    accounts.choices[0].label = accountName1;",
                      "    accounts.choices[1].label = accountName2;",
                      "    ",
                      "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct values element', function() {",
                      "   var values ={",
                      "        \"accounts\": [",
                      "            {",
                      "                \"index\": 0",
                      "            },",
                      "            {",
                      "                \"index\": 1",
                      "            }",
                      "        ],",
                      "        \"fields\": {",
                      "            \"Custom_Agency ID\": null,",
                      "            \"Custom_Employee Identification Number (EIN)\": null",
                      "        }",
                      "    };",
                      "    ",
                      "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "description": "Api-Key",
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n\t{ \t\r\n\t\t\"index\": 0\r\n\t},\r\n\t{ \t\r\n\t\t\"index\": 1\r\n\t}\r\n    ]\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
              },
              "response": []
            },
            {
              "_postman_id": "9dcd16de-5180-41ce-bbbc-b747e0c7150d",
              "name": "Update Switch",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "type": "text",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Percentage\",\r\n\t\t\t\t\"SplitAmount\": 100\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_Employee/ID\": \"1234\",\r\n\t  \"Custom_Company/Dept\": \"Testing\",\r\n\t  \"Custom_SSN\": \"1234\"\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
              },
              "response": []
            },
            {
              "_postman_id": "cf279312-51cd-414a-adf6-039ddd66d94a",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc9a5690-3ae7-4784-a80f-1de7b2c418db",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has the correct context', function() {",
                      "    pm.expect(jsonData.context).to.equal('testing_context');",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Submitted\",",
                      "        \"actions\": [",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {},",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"index\": 1,\r\n  \"action\": \"Submit\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1/action{{context_param}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "69eb7bcb-e109-4250-a9ba-30c6f443d2f0",
          "name": "ASI Group, Inc (23409)",
          "description": "",
          "item": [
            {
              "_postman_id": "b84af743-8b55-4d8d-ac79-9559724e0de3",
              "name": "Target By Name",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "10795ed6-ce38-4565-8bdb-19fc007914ed",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has some items', function() {",
                      "   pm.expect(jsonData.data.currentItemCount).to.be.above(0);",
                      "   pm.expect(jsonData.data.items.length).to.be.above(0);",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    jsonData.data.items.forEach(i => {",
                      "        pm.expect(i).to.have.property('targetId');",
                      "        pm.expect(i).to.have.property('name');",
                      "        pm.expect(i).to.have.property('type');",
                      "        pm.expect(i.type).to.eql('deposit');",
                      "    });",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('types#targets'); ",
                      "});",
                      "",
                      "// Set an environment variable to test get target by id next.",
                      "pm.environment.set(\"split_deposit_target_id\", jsonData.data.items[0].targetId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base_url}}{{targets_postfix2}}?type=deposit&name=ASI Group, Inc&customer={{customer_key}}",
                  "host": [
                    "{{base_url}}{{targets_postfix2}}"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "deposit",
                      "equals": true
                    },
                    {
                      "key": "name",
                      "value": "ASI Group, Inc",
                      "equals": true
                    },
                    {
                      "key": "customer",
                      "value": "{{customer_key}}",
                      "equals": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "8c833f36-c07c-4fc9-9169-c3b84a4c7b18",
              "name": "Target By Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e61e303a-619f-4bcf-aa1a-8b5f128fc5bc",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "    pm.expect(jsonData.data).to.have.property('item');",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('finalAction');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('target'); ",
                      "});",
                      "",
                      "pm.test('Has the correct type element', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal('deposit'); ",
                      "});",
                      "",
                      "pm.test('Has the correct categories', function() {",
                      "    var categories = {",
                      "        \"key\": \"1\",",
                      "        \"label\": \"Payroll\"",
                      "    };  ",
                      "    pm.expect(jsonData.data.item.categories).to.deep.include(categories); ",
                      "});",
                      "",
                      "pm.test('Has the correct ux element', function() {",
                      "    var ux = {",
                      "        \"accounts\": {",
                      "            \"limit\": 5,",
                      "            \"maxChecking\": 5,",
                      "            \"maxSavings\": 5,",
                      "            \"choices\": [],",
                      "            \"fields\": [",
                      "                {",
                      "                    \"key\": \"SplitAmount\",",
                      "                    \"label\": \"Percent or Fixed Amount\",",
                      "                    \"type\": \"textbox\",",
                      "                    \"required\": true,",
                      "                    \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                    \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "                },",
                      "                {",
                      "                    \"key\": \"SplitType\",",
                      "                    \"label\": \"Type\",",
                      "                    \"type\": \"select\",",
                      "                    \"required\": true,",
                      "                    \"selections\": [",
                      "                        {",
                      "                            \"key\": \"Remainder\",",
                      "                            \"label\": \"Remainder\"",
                      "                        }",
                      "                    ]",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                    \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                    \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                }",
                      "            ]",
                      "        },",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"Custom_Agency ID\",",
                      "                \"label\": \"Agency ID\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Employee Identification Number (EIN)\",",
                      "                \"label\": \"Employee Identification Number (EIN)\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            }",
                      "        ]",
                      "    };",
                      "",
                      "    pm.expect(jsonData.data.item.ux).to.deep.include(ux); ",
                      "});",
                      "",
                      "pm.test('Has the correct final action', function() {",
                      "   pm.expect(jsonData.data.item.finalAction).to.equal('submit'); ",
                      "});",
                      "",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{targets_postfix3}}{{split_deposit_target_id}}"
              },
              "response": []
            },
            {
              "_postman_id": "2bec5244-865c-41ec-ae4e-467b9fec5aa7",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30a09755-1908-49ff-b5a5-9b2ac7c04a6f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has required 2nd level elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('index');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                      "    pm.expect(jsonData.data.item).to.have.property('values');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "    pm.expect(jsonData.data.item).to.have.property('state');",
                      "});",
                      "",
                      "pm.test('Has the correct index', function() {",
                      "   pm.expect(jsonData.data.item.index).to.equal(1);",
                      "});",
                      "",
                      "pm.test('Has the correct type', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                      "});",
                      "",
                      "pm.test('Has the correct targetId', function() {",
                      "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                      "});",
                      "",
                      "pm.test('Has the correct accountHolderIndex', function() {",
                      "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Incomplete\",",
                      "        \"actions\": [",
                      "            \"HTTP-PUT\",",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {",
                      "                \"Custom_Agency ID\": \"Custom_Agency ID is required.\",",
                      "                \"Custom_Employee Identification Number (EIN)\": \"Custom_Employee Identification Number (EIN) is required.\"",
                      "            },",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      "",
                      "pm.test('Has the correct ux.accounts element', function() {",
                      "   var accounts = {",
                      "        \"limit\": 5,",
                      "        \"maxChecking\": 5,",
                      "        \"maxSavings\": 5,",
                      "        \"choices\": [",
                      "            {",
                      "                \"index\": 0,",
                      "                \"label\": \"*6363\"",
                      "            },",
                      "            {",
                      "                \"index\": 1,",
                      "                \"label\": \"*3630\"",
                      "            }",
                      "        ],",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"SplitAmount\",",
                      "                \"label\": \"Percent or Fixed Amount\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true,",
                      "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "            },",
                      "            {",
                      "                \"key\": \"SplitType\",",
                      "                \"label\": \"Type\",",
                      "                \"type\": \"select\",",
                      "                \"required\": true,",
                      "                \"selections\": [",
                      "                    {",
                      "                        \"key\": \"Remainder\",",
                      "                        \"label\": \"Remainder\"",
                      "                    }",
                      "                ]",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            }",
                      "        ]",
                      "    };",
                      "            ",
                      "    var customer_key = pm.environment.get('customer_key').toString();",
                      "    ",
                      "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                      "    ",
                      "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                      "    ",
                      "    accounts.choices[0].label = accountName1;",
                      "    accounts.choices[1].label = accountName2;",
                      "    ",
                      "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct values element', function() {",
                      "   var values ={",
                      "        \"accounts\": [",
                      "            {",
                      "                \"index\": 0",
                      "            },",
                      "            {",
                      "                \"index\": 1",
                      "            }",
                      "        ],",
                      "        \"fields\": {",
                      "            \"Custom_Agency ID\": null,",
                      "            \"Custom_Employee Identification Number (EIN)\": null",
                      "        }",
                      "    };",
                      "    ",
                      "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "description": "Api-Key",
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n\t{ \t\r\n\t\t\"index\": 0,\r\n\t\t\"splitType\": \"Remainder\",\r\n\t\t\"splitAmount\": \"NET\"\r\n\t}\r\n    ]\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
              },
              "response": []
            },
            {
              "_postman_id": "8449c389-3b7c-4991-8d48-25be33347364",
              "name": "Update Switch",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "type": "text",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t\t{ \t\r\n\t\t\t\t\"index\": 0,\r\n\t\t\t\t\"splitType\": \"Remainder\",\r\n\t\t\t\t\"splitAmount\": \"NET\"\r\n\t\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_Employee ID or Social Security Number\": \"1234\",\r\n\t  \"Custom_Work Location\": \"Testing\"\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
              },
              "response": []
            },
            {
              "_postman_id": "4efba2bd-a82d-4428-b1cd-143f8487d734",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc9a5690-3ae7-4784-a80f-1de7b2c418db",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has the correct context', function() {",
                      "    pm.expect(jsonData.context).to.equal('testing_context');",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Submitted\",",
                      "        \"actions\": [",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {},",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"index\": 1,\r\n  \"action\": \"Submit\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1/action{{context_param}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "59ca7b99-02fc-48f6-8118-be943f0196d5",
          "name": "ASI Group, Inc (23409) Copy",
          "description": "",
          "item": [
            {
              "_postman_id": "d5afe072-87d7-49a8-a989-651266badc59",
              "name": "Target By Name",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "10795ed6-ce38-4565-8bdb-19fc007914ed",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has some items', function() {",
                      "   pm.expect(jsonData.data.currentItemCount).to.be.above(0);",
                      "   pm.expect(jsonData.data.items.length).to.be.above(0);",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    jsonData.data.items.forEach(i => {",
                      "        pm.expect(i).to.have.property('targetId');",
                      "        pm.expect(i).to.have.property('name');",
                      "        pm.expect(i).to.have.property('type');",
                      "        pm.expect(i.type).to.eql('deposit');",
                      "    });",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('types#targets'); ",
                      "});",
                      "",
                      "// Set an environment variable to test get target by id next.",
                      "pm.environment.set(\"split_deposit_target_id\", jsonData.data.items[0].targetId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base_url}}{{targets_postfix2}}?type=deposit&name=Apple, Inc.&customer={{customer_key}}",
                  "host": [
                    "{{base_url}}{{targets_postfix2}}"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "deposit",
                      "equals": true
                    },
                    {
                      "key": "name",
                      "value": "Apple, Inc.",
                      "equals": true
                    },
                    {
                      "key": "customer",
                      "value": "{{customer_key}}",
                      "equals": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "44d24880-aa8c-4472-96d4-423f8d6eb58f",
              "name": "Target By Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e61e303a-619f-4bcf-aa1a-8b5f128fc5bc",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const isCanada = pm.environment.get('isCanada') === 'true';",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "    pm.expect(jsonData.data).to.have.property('item');",
                      "});",
                      "",
                      "pm.test('Has required inner elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('finalAction');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "});",
                      "",
                      "pm.test('Has the correct kind attribute', function() {",
                      "   pm.expect(jsonData.data.kind).to.equal('target'); ",
                      "});",
                      "",
                      "pm.test('Has the correct type element', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal('deposit'); ",
                      "});",
                      "",
                      "pm.test('Has the correct categories', function() {",
                      "    var categories = {",
                      "        \"key\": \"1\",",
                      "        \"label\": \"Payroll\"",
                      "    };  ",
                      "    pm.expect(jsonData.data.item.categories).to.deep.include(categories); ",
                      "});",
                      "",
                      "pm.test('Has the correct ux element', function() {",
                      "    var ux = {",
                      "        \"accounts\": {",
                      "            \"limit\": 5,",
                      "            \"maxChecking\": 5,",
                      "            \"maxSavings\": 5,",
                      "            \"choices\": [],",
                      "            \"fields\": [",
                      "                {",
                      "                    \"key\": \"SplitAmount\",",
                      "                    \"label\": \"Percent or Fixed Amount\",",
                      "                    \"type\": \"textbox\",",
                      "                    \"required\": true,",
                      "                    \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                    \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "                },",
                      "                {",
                      "                    \"key\": \"SplitType\",",
                      "                    \"label\": \"Type\",",
                      "                    \"type\": \"select\",",
                      "                    \"required\": true,",
                      "                    \"selections\": [",
                      "                        {",
                      "                            \"key\": \"Remainder\",",
                      "                            \"label\": \"Remainder\"",
                      "                        }",
                      "                    ]",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                    \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                },",
                      "                {",
                      "                    \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                    \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                    \"type\": \"Textbox\",",
                      "                    \"required\": false",
                      "                }",
                      "            ]",
                      "        },",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"Custom_Agency ID\",",
                      "                \"label\": \"Agency ID\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Employee Identification Number (EIN)\",",
                      "                \"label\": \"Employee Identification Number (EIN)\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true",
                      "            }",
                      "        ]",
                      "    };",
                      "",
                      "    pm.expect(jsonData.data.item.ux).to.deep.include(ux); ",
                      "});",
                      "",
                      "pm.test('Has the correct final action', function() {",
                      "   pm.expect(jsonData.data.item.finalAction).to.equal('submit'); ",
                      "});",
                      "",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "description": "Api Key"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{targets_postfix3}}{{split_deposit_target_id}}"
              },
              "response": []
            },
            {
              "_postman_id": "76dfd0f8-9147-42fc-ad18-7bfa09287783",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30a09755-1908-49ff-b5a5-9b2ac7c04a6f",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('apiVersion');",
                      "    pm.expect(jsonData).to.have.property('id');",
                      "    pm.expect(jsonData.data).to.have.property('kind');",
                      "    pm.expect(jsonData.data).to.have.property('lang');",
                      "});",
                      "",
                      "pm.test('Has required 2nd level elements', function() {",
                      "    pm.expect(jsonData.data.item).to.have.property('index');",
                      "    pm.expect(jsonData.data.item).to.have.property('type');",
                      "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                      "    pm.expect(jsonData.data.item).to.have.property('name');",
                      "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                      "    pm.expect(jsonData.data.item).to.have.property('values');",
                      "    pm.expect(jsonData.data.item).to.have.property('ux');",
                      "    pm.expect(jsonData.data.item).to.have.property('state');",
                      "});",
                      "",
                      "pm.test('Has the correct index', function() {",
                      "   pm.expect(jsonData.data.item.index).to.equal(1);",
                      "});",
                      "",
                      "pm.test('Has the correct type', function() {",
                      "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                      "});",
                      "",
                      "pm.test('Has the correct targetId', function() {",
                      "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                      "});",
                      "",
                      "pm.test('Has the correct accountHolderIndex', function() {",
                      "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Incomplete\",",
                      "        \"actions\": [",
                      "            \"HTTP-PUT\",",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {",
                      "                \"Custom_Agency ID\": \"Custom_Agency ID is required.\",",
                      "                \"Custom_Employee Identification Number (EIN)\": \"Custom_Employee Identification Number (EIN) is required.\"",
                      "            },",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      "",
                      "pm.test('Has the correct ux.accounts element', function() {",
                      "   var accounts = {",
                      "        \"limit\": 5,",
                      "        \"maxChecking\": 5,",
                      "        \"maxSavings\": 5,",
                      "        \"choices\": [",
                      "            {",
                      "                \"index\": 0,",
                      "                \"label\": \"*6363\"",
                      "            },",
                      "            {",
                      "                \"index\": 1,",
                      "                \"label\": \"*3630\"",
                      "            }",
                      "        ],",
                      "        \"fields\": [",
                      "            {",
                      "                \"key\": \"SplitAmount\",",
                      "                \"label\": \"Percent or Fixed Amount\",",
                      "                \"type\": \"textbox\",",
                      "                \"required\": true,",
                      "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                      "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                      "            },",
                      "            {",
                      "                \"key\": \"SplitType\",",
                      "                \"label\": \"Type\",",
                      "                \"type\": \"select\",",
                      "                \"required\": true,",
                      "                \"selections\": [",
                      "                    {",
                      "                        \"key\": \"Remainder\",",
                      "                        \"label\": \"Remainder\"",
                      "                    }",
                      "                ]",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_A for Add account or C for Change acct\",",
                      "                \"label\": \"Split[5]_A for Add account or C for Change account\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            },",
                      "            {",
                      "                \"key\": \"Custom_Deposit Times per Year (24 or 26)\",",
                      "                \"label\": \"Split[2]_Deposit Times per Year (24 or 26)\",",
                      "                \"type\": \"Textbox\",",
                      "                \"required\": false",
                      "            }",
                      "        ]",
                      "    };",
                      "            ",
                      "    var customer_key = pm.environment.get('customer_key').toString();",
                      "    ",
                      "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                      "    ",
                      "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                      "    ",
                      "    accounts.choices[0].label = accountName1;",
                      "    accounts.choices[1].label = accountName2;",
                      "    ",
                      "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct values element', function() {",
                      "   var values ={",
                      "        \"accounts\": [",
                      "            {",
                      "                \"index\": 0",
                      "            },",
                      "            {",
                      "                \"index\": 1",
                      "            }",
                      "        ],",
                      "        \"fields\": {",
                      "            \"Custom_Agency ID\": null,",
                      "            \"Custom_Employee Identification Number (EIN)\": null",
                      "        }",
                      "    };",
                      "    ",
                      "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "description": "Api-Key",
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n\t{ \t\r\n\t\t\"index\": 0\r\n\t}, {\r\n\t\t\"index\": 1\r\n\t}\r\n    ]\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
              },
              "response": []
            },
            {
              "_postman_id": "8aa43c02-a698-44be-bb4b-0b01e72d37b4",
              "name": "Update Switch",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "type": "text",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t\t{ \t\r\n\t\t\t\t\"index\": 0,\r\n\t\t\t\t\"splitType\": \"Remainder\",\r\n\t\t\t\t\"splitAmount\": \"NET\"\r\n\t\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SSN4\": \"1234\",\r\n\t  \"Custom_Work Location\": \"Testing\",\r\n\t   \"Custom_Company/MailingAddress\": {\r\n                        \"line1\": \"123 Main Street\",\r\n                        \"line2\": null,\r\n                        \"line3\": null,\r\n                        \"city\": \"New York\",\r\n                        \"state\": \"NY\",\r\n                        \"zip\": \"55555\"\r\n                    }\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
              },
              "response": []
            },
            {
              "_postman_id": "de02338d-eb46-4544-af63-92f544cb1f3d",
              "name": "Submit Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc9a5690-3ae7-4784-a80f-1de7b2c418db",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has the correct context', function() {",
                      "    pm.expect(jsonData.context).to.equal('testing_context');",
                      "});",
                      "",
                      "pm.test('Has the correct state', function() {",
                      "    var state = {",
                      "        \"status\": \"Submitted\",",
                      "        \"actions\": [",
                      "            \"Cancel\"",
                      "        ],",
                      "        \"validation\": {",
                      "            \"accounts\": [],",
                      "            \"fields\": {},",
                      "            \"overall\": []",
                      "        }",
                      "    };",
                      "    ",
                      "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"index\": 1,\r\n  \"action\": \"Submit\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1/action{{context_param}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "664ed8b4-f318-4a19-8193-fa11d6a5e3f6",
      "name": "Get Switch by Index",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "api-key",
            "type": "text",
            "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
          },
          {
            "key": "Content-Type",
            "type": "text",
            "value": "application/json"
          },
          {
            "key": "Content",
            "type": "text",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "http://localhost:52512/v3/customers/megan3/switches/17?",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "52512",
          "path": [
            "v3",
            "customers",
            "megan3",
            "switches",
            "17"
          ],
          "query": [
            {
              "key": "api-key",
              "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
              "disabled": true
            },
            {
              "key": "content-Type",
              "value": "application/json",
              "disabled": true
            },
            {
              "key": "content",
              "value": "application/json",
              "disabled": true
            }
          ]
        }
      },
      "response": []
    },
    {
      "_postman_id": "b3eb5827-b3d7-43a0-9ee3-0db16a3175aa",
      "name": "Get All Switches",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "api-key",
            "value": "{{api_key}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t  {\r\n\t\t\"index\": 0\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
        },
        "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}",
        "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
      },
      "response": []
    },
    {
      "_postman_id": "d6878339-e4e3-42fb-8fb5-f373979c4c57",
      "name": "Put Switch",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "api-key",
            "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Content",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"index\": 17,\r\n\t\"type\": \"Deposit\",\r\n\t\"targetId\": 1649,\r\n\t\"accountHolderIndex\": 0,\r\n\t\"values\": {\r\n\t\t \"accounts\":[\r\n\t\t {\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitAmount\": 45,\r\n\t\t\t\t\"splitType\": \"Currency\",\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t  },\r\n\t\t  {\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t  \"splitAmount\": 44,\r\n\t\t\t  \"splitType\": \"Currency\",\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t  }\r\n\t\t],\r\n\t\t\"fields\": {\r\n\t\t  \"Custom_SocialSecurityNumber\": null\r\n\t\t}\r\n\t}\r\n}"
        },
        "url": {
          "raw": "http://localhost:52512/v3/customers/megan3/switches/17?",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "52512",
          "path": [
            "v3",
            "customers",
            "megan3",
            "switches",
            "17"
          ],
          "query": [
            {
              "key": "api-key",
              "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
              "disabled": true
            },
            {
              "key": "content-Type",
              "value": "application/json",
              "disabled": true
            },
            {
              "key": "content",
              "value": "application/json",
              "disabled": true
            }
          ]
        }
      },
      "response": []
    }
  ]
}