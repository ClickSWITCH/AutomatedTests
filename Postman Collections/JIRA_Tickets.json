{
  "info": {
    "_postman_id": "5faf4640-0844-4c79-be80-211d9a90a5ac",
    "name": "JIRA Tickets",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "4e6fe489-940e-4b74-be43-fd83179378c0",
      "name": "Split Deposit Switches",
      "description": null,
      "item": [
        {
          "_postman_id": "97e29782-f743-4c88-b2e4-3d6a3a476f03",
          "name": "One Account",
          "description": null,
          "item": [
            {
              "_postman_id": "30f0dad7-256f-47d9-9fba-715423cbd291",
              "name": "Zero Split Fields",
              "description": null,
              "item": [
                {
                  "_postman_id": "f7ec3069-7404-41ad-929e-ee151e46df10",
                  "name": "Create Switch",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "30a09755-1908-49ff-b5a5-9b2ac7c04a6f",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('data');",
                          "    pm.expect(jsonData).to.have.property('apiVersion');",
                          "    pm.expect(jsonData).to.have.property('id');",
                          "    pm.expect(jsonData.data).to.have.property('kind');",
                          "    pm.expect(jsonData.data).to.have.property('lang');",
                          "});",
                          "",
                          "pm.test('Has required 2nd level elements', function() {",
                          "    pm.expect(jsonData.data.item).to.have.property('index');",
                          "    pm.expect(jsonData.data.item).to.have.property('type');",
                          "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                          "    pm.expect(jsonData.data.item).to.have.property('name');",
                          "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                          "    pm.expect(jsonData.data.item).to.have.property('values');",
                          "    pm.expect(jsonData.data.item).to.have.property('ux');",
                          "    pm.expect(jsonData.data.item).to.have.property('state');",
                          "});",
                          "",
                          "pm.test('Has the correct index', function() {",
                          "   pm.expect(jsonData.data.item.index).to.equal(1);",
                          "});",
                          "",
                          "pm.test('Has the correct type', function() {",
                          "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                          "});",
                          "",
                          "pm.test('Has the correct targetId', function() {",
                          "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                          "});",
                          "",
                          "pm.test('Has the correct accountHolderIndex', function() {",
                          "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                          "});",
                          "",
                          "pm.test('Has the correct state', function() {",
                          "    var state = {",
                          "        \"status\": \"Ready\",",
                          "        \"actions\": [",
                          "            \"HTTP-PUT\",",
                          "            \"Cancel\",",
                          "            \"Submit\"",
                          "        ],",
                          "        \"validation\": {",
                          "            \"accounts\": [],",
                          "            \"fields\": {},",
                          "            \"overall\": []",
                          "        }",
                          "    };",
                          "    ",
                          "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                          "});",
                          "",
                          "pm.test('Has the correct ux.accounts element', function() {",
                          "   var accounts = {",
                          "        \"limit\": 3,",
                          "        \"maxChecking\": 3,",
                          "        \"maxSavings\": 3,",
                          "        \"choices\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"label\": \"*8519\"",
                          "            },",
                          "            {",
                          "                \"index\": 1,",
                          "                \"label\": \"*5190\"",
                          "            }",
                          "        ],",
                          "        \"fields\": [",
                          "            {",
                          "                \"key\": \"splitAmount\",",
                          "                \"label\": \"Percent or Fixed Amount\",",
                          "                \"type\": \"textbox\",",
                          "                \"required\": true,",
                          "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                          "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                          "            },",
                          "            {",
                          "                \"key\": \"splitType\",",
                          "                \"label\": \"Type\",",
                          "                \"type\": \"select\",",
                          "                \"required\": true,",
                          "                \"selections\": [",
                          "                    {",
                          "                        \"key\": \"remainder\",",
                          "                        \"label\": \"Remainder\"",
                          "                    }",
                          "                ]",
                          "            },",
                          "            {",
                          "                \"key\": \"Custom_Is Entire Net Amount\",",
                          "                \"label\": \"Split[1]_Is Entire Net Amount\",",
                          "                \"type\": \"Checkbox\",",
                          "                \"required\": false",
                          "            }",
                          "        ]",
                          "    };",
                          "            ",
                          "    var customer_key = pm.environment.get('customer_key').toString();",
                          "    ",
                          "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                          "    ",
                          "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                          "    ",
                          "    accounts.choices[0].label = accountName1;",
                          "    accounts.choices[1].label = accountName2;",
                          "    ",
                          "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct values element', function() {",
                          "   var values ={",
                          "        \"accounts\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"fields\": {",
                          "                    \"splitAmount\": null,",
                          "                    \"splitType\": null,",
                          "                    \"Custom_Is Entire Net Amount\": \"false\"",
                          "                }",
                          "            }",
                          "        ],",
                          "        \"fields\": {",
                          "            \"Custom_SocialSecurityNumber\": null",
                          "        }",
                          "    };",
                          "    ",
                          "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Api-Key",
                        "key": "api-key",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n\t{ \t\r\n\t\t\"index\": 0\r\n\t}\r\n    ]\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
                  },
                  "response": []
                },
                {
                  "_postman_id": "01aed9db-f25a-4a6a-9ae6-6e7d0118207d",
                  "name": "Update - one account, index only, no fields array",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7dc7d174-b230-4601-b0dc-5b0860016c64",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('data');",
                          "    pm.expect(jsonData).to.have.property('apiVersion');",
                          "    pm.expect(jsonData).to.have.property('id');",
                          "    pm.expect(jsonData.data).to.have.property('kind');",
                          "    pm.expect(jsonData.data).to.have.property('lang');",
                          "});",
                          "",
                          "pm.test('Has required 2nd level elements', function() {",
                          "    pm.expect(jsonData.data.item).to.have.property('index');",
                          "    pm.expect(jsonData.data.item).to.have.property('type');",
                          "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                          "    pm.expect(jsonData.data.item).to.have.property('name');",
                          "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                          "    pm.expect(jsonData.data.item).to.have.property('values');",
                          "    pm.expect(jsonData.data.item).to.have.property('ux');",
                          "    pm.expect(jsonData.data.item).to.have.property('state');",
                          "});",
                          "",
                          "pm.test('Has the correct index', function() {",
                          "   pm.expect(jsonData.data.item.index).to.equal(1);",
                          "});",
                          "",
                          "pm.test('Has the correct type', function() {",
                          "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                          "});",
                          "",
                          "pm.test('Has the correct targetId', function() {",
                          "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                          "});",
                          "",
                          "pm.test('Has the correct accountHolderIndex', function() {",
                          "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                          "});",
                          "",
                          "pm.test('Has the correct state', function() {",
                          "    var state = {",
                          "        \"status\": \"Ready\",",
                          "        \"actions\": [",
                          "            \"HTTP-PUT\",",
                          "            \"Cancel\",",
                          "            \"Submit\"",
                          "        ],",
                          "        \"validation\": {",
                          "            \"accounts\": [],",
                          "            \"fields\": {},",
                          "            \"overall\": []",
                          "        }",
                          "    };",
                          "    ",
                          "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                          "});",
                          "",
                          "pm.test('Has the correct ux.accounts element', function() {",
                          "   var accounts = {",
                          "        \"limit\": 3,",
                          "        \"maxChecking\": 3,",
                          "        \"maxSavings\": 3,",
                          "        \"choices\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"label\": \"*8519\"",
                          "            },",
                          "            {",
                          "                \"index\": 1,",
                          "                \"label\": \"*5190\"",
                          "            }",
                          "        ],",
                          "        \"fields\": [",
                          "            {",
                          "                \"key\": \"splitAmount\",",
                          "                \"label\": \"Percent or Fixed Amount\",",
                          "                \"type\": \"textbox\",",
                          "                \"required\": true,",
                          "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                          "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                          "            },",
                          "            {",
                          "                \"key\": \"splitType\",",
                          "                \"label\": \"Type\",",
                          "                \"type\": \"select\",",
                          "                \"required\": true,",
                          "                \"selections\": [",
                          "                    {",
                          "                        \"key\": \"remainder\",",
                          "                        \"label\": \"Remainder\"",
                          "                    }",
                          "                ]",
                          "            },",
                          "            {",
                          "                \"key\": \"Custom_Is Entire Net Amount\",",
                          "                \"label\": \"Split[1]_Is Entire Net Amount\",",
                          "                \"type\": \"Checkbox\",",
                          "                \"required\": false",
                          "            }",
                          "        ]",
                          "    };",
                          "            ",
                          "    var customer_key = pm.environment.get('customer_key').toString();",
                          "    ",
                          "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                          "    ",
                          "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                          "    ",
                          "    accounts.choices[0].label = accountName1;",
                          "    accounts.choices[1].label = accountName2;",
                          "    ",
                          "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct values element', function() {",
                          "   var values ={",
                          "        \"accounts\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"fields\": {",
                          "                    \"splitAmount\": null,",
                          "                    \"splitType\": null,",
                          "                    \"Custom_Is Entire Net Amount\": \"false\"",
                          "                }",
                          "            }",
                          "        ],",
                          "        \"fields\": {",
                          "            \"Custom_SocialSecurityNumber\": null",
                          "        }",
                          "    };",
                          "    ",
                          "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "{\"index\": 0}"
                  },
                  "response": []
                },
                {
                  "_postman_id": "6b5cddf5-d761-4a45-b6c2-c37e1695a98e",
                  "name": "Update - one account,  empty fields array",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "601d9270-4f30-4704-abaf-ee4a24a0bc42",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('data');",
                          "    pm.expect(jsonData).to.have.property('apiVersion');",
                          "    pm.expect(jsonData).to.have.property('id');",
                          "    pm.expect(jsonData.data).to.have.property('kind');",
                          "    pm.expect(jsonData.data).to.have.property('lang');",
                          "});",
                          "",
                          "pm.test('Has required 2nd level elements', function() {",
                          "    pm.expect(jsonData.data.item).to.have.property('index');",
                          "    pm.expect(jsonData.data.item).to.have.property('type');",
                          "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                          "    pm.expect(jsonData.data.item).to.have.property('name');",
                          "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                          "    pm.expect(jsonData.data.item).to.have.property('values');",
                          "    pm.expect(jsonData.data.item).to.have.property('ux');",
                          "    pm.expect(jsonData.data.item).to.have.property('state');",
                          "});",
                          "",
                          "pm.test('Has the correct index', function() {",
                          "   pm.expect(jsonData.data.item.index).to.equal(1);",
                          "});",
                          "",
                          "pm.test('Has the correct type', function() {",
                          "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                          "});",
                          "",
                          "pm.test('Has the correct targetId', function() {",
                          "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                          "});",
                          "",
                          "pm.test('Has the correct accountHolderIndex', function() {",
                          "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                          "});",
                          "",
                          "pm.test('Has the correct state', function() {",
                          "    var state = {",
                          "        \"status\": \"Ready\",",
                          "        \"actions\": [",
                          "            \"HTTP-PUT\",",
                          "            \"Cancel\",",
                          "            \"Submit\"",
                          "        ],",
                          "        \"validation\": {",
                          "            \"accounts\": [],",
                          "            \"fields\": {},",
                          "            \"overall\": []",
                          "        }",
                          "    };",
                          "    ",
                          "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                          "});",
                          "",
                          "pm.test('Has the correct ux.accounts element', function() {",
                          "   var accounts = {",
                          "        \"limit\": 3,",
                          "        \"maxChecking\": 3,",
                          "        \"maxSavings\": 3,",
                          "        \"choices\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"label\": \"*8519\"",
                          "            },",
                          "            {",
                          "                \"index\": 1,",
                          "                \"label\": \"*5190\"",
                          "            }",
                          "        ],",
                          "        \"fields\": [",
                          "            {",
                          "                \"key\": \"splitAmount\",",
                          "                \"label\": \"Percent or Fixed Amount\",",
                          "                \"type\": \"textbox\",",
                          "                \"required\": true,",
                          "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                          "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                          "            },",
                          "            {",
                          "                \"key\": \"splitType\",",
                          "                \"label\": \"Type\",",
                          "                \"type\": \"select\",",
                          "                \"required\": true,",
                          "                \"selections\": [",
                          "                    {",
                          "                        \"key\": \"remainder\",",
                          "                        \"label\": \"Remainder\"",
                          "                    }",
                          "                ]",
                          "            },",
                          "            {",
                          "                \"key\": \"Custom_Is Entire Net Amount\",",
                          "                \"label\": \"Split[1]_Is Entire Net Amount\",",
                          "                \"type\": \"Checkbox\",",
                          "                \"required\": false",
                          "            }",
                          "        ]",
                          "    };",
                          "            ",
                          "    var customer_key = pm.environment.get('customer_key').toString();",
                          "    ",
                          "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                          "    ",
                          "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                          "    ",
                          "    accounts.choices[0].label = accountName1;",
                          "    accounts.choices[1].label = accountName2;",
                          "    ",
                          "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct values element', function() {",
                          "   var values ={",
                          "        \"accounts\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"fields\": {",
                          "                    \"splitAmount\": null,",
                          "                    \"splitType\": null,",
                          "                    \"Custom_Is Entire Net Amount\": \"false\"",
                          "                }",
                          "            }",
                          "        ],",
                          "        \"fields\": {",
                          "            \"Custom_SocialSecurityNumber\": null",
                          "        }",
                          "    };",
                          "    ",
                          "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "8aae7b4a-25c3-4ca9-b946-138a48b24a35",
                  "name": "Update - one account, splitType included",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6a844d06-7ae9-4a7f-8c3f-e08a91fa9b67",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('data');",
                          "    pm.expect(jsonData).to.have.property('apiVersion');",
                          "    pm.expect(jsonData).to.have.property('id');",
                          "    pm.expect(jsonData.data).to.have.property('kind');",
                          "    pm.expect(jsonData.data).to.have.property('lang');",
                          "});",
                          "",
                          "pm.test('Has required 2nd level elements', function() {",
                          "    pm.expect(jsonData.data.item).to.have.property('index');",
                          "    pm.expect(jsonData.data.item).to.have.property('type');",
                          "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                          "    pm.expect(jsonData.data.item).to.have.property('name');",
                          "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                          "    pm.expect(jsonData.data.item).to.have.property('values');",
                          "    pm.expect(jsonData.data.item).to.have.property('ux');",
                          "    pm.expect(jsonData.data.item).to.have.property('state');",
                          "});",
                          "",
                          "pm.test('Has the correct index', function() {",
                          "   pm.expect(jsonData.data.item.index).to.equal(1);",
                          "});",
                          "",
                          "pm.test('Has the correct type', function() {",
                          "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                          "});",
                          "",
                          "pm.test('Has the correct targetId', function() {",
                          "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                          "});",
                          "",
                          "pm.test('Has the correct accountHolderIndex', function() {",
                          "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                          "});",
                          "",
                          "pm.test('Has the correct state', function() {",
                          "    var state = {",
                          "        \"status\": \"Ready\",",
                          "        \"actions\": [",
                          "            \"HTTP-PUT\",",
                          "            \"Cancel\",",
                          "            \"Submit\"",
                          "        ],",
                          "        \"validation\": {",
                          "            \"accounts\": [],",
                          "            \"fields\": {},",
                          "            \"overall\": []",
                          "        }",
                          "    };",
                          "    ",
                          "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                          "});",
                          "",
                          "pm.test('Has the correct ux.accounts element', function() {",
                          "   var accounts = {",
                          "        \"limit\": 3,",
                          "        \"maxChecking\": 3,",
                          "        \"maxSavings\": 3,",
                          "        \"choices\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"label\": \"*8519\"",
                          "            },",
                          "            {",
                          "                \"index\": 1,",
                          "                \"label\": \"*5190\"",
                          "            }",
                          "        ],",
                          "        \"fields\": [",
                          "            {",
                          "                \"key\": \"splitAmount\",",
                          "                \"label\": \"Percent or Fixed Amount\",",
                          "                \"type\": \"textbox\",",
                          "                \"required\": true,",
                          "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                          "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                          "            },",
                          "            {",
                          "                \"key\": \"splitType\",",
                          "                \"label\": \"Type\",",
                          "                \"type\": \"select\",",
                          "                \"required\": true,",
                          "                \"selections\": [",
                          "                    {",
                          "                        \"key\": \"remainder\",",
                          "                        \"label\": \"Remainder\"",
                          "                    }",
                          "                ]",
                          "            },",
                          "            {",
                          "                \"key\": \"Custom_Is Entire Net Amount\",",
                          "                \"label\": \"Split[1]_Is Entire Net Amount\",",
                          "                \"type\": \"Checkbox\",",
                          "                \"required\": false",
                          "            }",
                          "        ]",
                          "    };",
                          "            ",
                          "    var customer_key = pm.environment.get('customer_key').toString();",
                          "    ",
                          "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                          "    ",
                          "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                          "    ",
                          "    accounts.choices[0].label = accountName1;",
                          "    accounts.choices[1].label = accountName2;",
                          "    ",
                          "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct values element', function() {",
                          "   var values ={",
                          "        \"accounts\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"fields\": {",
                          "                    \"splitAmount\": 0,",
                          "                    \"splitType\": \"Remainder\",",
                          "                    \"Custom_Is Entire Net Amount\": \"false\"",
                          "                }",
                          "            }",
                          "        ],",
                          "        \"fields\": {",
                          "            \"Custom_SocialSecurityNumber\": null",
                          "        }",
                          "    };",
                          "    ",
                          "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\": \"Remainder\"\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "512139b5-251c-4913-9e46-df4ac2eb515e",
                  "name": "Update - one account, splitType, splitAmount included",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9c454410-9b01-4952-a42e-4fde4b388119",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('data');",
                          "    pm.expect(jsonData).to.have.property('apiVersion');",
                          "    pm.expect(jsonData).to.have.property('id');",
                          "    pm.expect(jsonData.data).to.have.property('kind');",
                          "    pm.expect(jsonData.data).to.have.property('lang');",
                          "});",
                          "",
                          "pm.test('Has required 2nd level elements', function() {",
                          "    pm.expect(jsonData.data.item).to.have.property('index');",
                          "    pm.expect(jsonData.data.item).to.have.property('type');",
                          "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                          "    pm.expect(jsonData.data.item).to.have.property('name');",
                          "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                          "    pm.expect(jsonData.data.item).to.have.property('values');",
                          "    pm.expect(jsonData.data.item).to.have.property('ux');",
                          "    pm.expect(jsonData.data.item).to.have.property('state');",
                          "});",
                          "",
                          "pm.test('Has the correct index', function() {",
                          "   pm.expect(jsonData.data.item.index).to.equal(1);",
                          "});",
                          "",
                          "pm.test('Has the correct type', function() {",
                          "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                          "});",
                          "",
                          "pm.test('Has the correct targetId', function() {",
                          "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                          "});",
                          "",
                          "pm.test('Has the correct accountHolderIndex', function() {",
                          "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                          "});",
                          "",
                          "pm.test('Has the correct state', function() {",
                          "    var state = {",
                          "        \"status\": \"Ready\",",
                          "        \"actions\": [",
                          "            \"HTTP-PUT\",",
                          "            \"Cancel\",",
                          "            \"Submit\"",
                          "        ],",
                          "        \"validation\": {",
                          "            \"accounts\": [],",
                          "            \"fields\": {},",
                          "            \"overall\": []",
                          "        }",
                          "    };",
                          "    ",
                          "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                          "});",
                          "",
                          "pm.test('Has the correct ux.accounts element', function() {",
                          "   var accounts = {",
                          "        \"limit\": 3,",
                          "        \"maxChecking\": 3,",
                          "        \"maxSavings\": 3,",
                          "        \"choices\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"label\": \"*8519\"",
                          "            },",
                          "            {",
                          "                \"index\": 1,",
                          "                \"label\": \"*5190\"",
                          "            }",
                          "        ],",
                          "        \"fields\": [",
                          "            {",
                          "                \"key\": \"splitAmount\",",
                          "                \"label\": \"Percent or Fixed Amount\",",
                          "                \"type\": \"textbox\",",
                          "                \"required\": true,",
                          "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                          "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                          "            },",
                          "            {",
                          "                \"key\": \"splitType\",",
                          "                \"label\": \"Type\",",
                          "                \"type\": \"select\",",
                          "                \"required\": true,",
                          "                \"selections\": [",
                          "                    {",
                          "                        \"key\": \"remainder\",",
                          "                        \"label\": \"Remainder\"",
                          "                    }",
                          "                ]",
                          "            },",
                          "            {",
                          "                \"key\": \"Custom_Is Entire Net Amount\",",
                          "                \"label\": \"Split[1]_Is Entire Net Amount\",",
                          "                \"type\": \"Checkbox\",",
                          "                \"required\": false",
                          "            }",
                          "        ]",
                          "    };",
                          "            ",
                          "    var customer_key = pm.environment.get('customer_key').toString();",
                          "    ",
                          "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                          "    ",
                          "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                          "    ",
                          "    accounts.choices[0].label = accountName1;",
                          "    accounts.choices[1].label = accountName2;",
                          "    ",
                          "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct values element', function() {",
                          "   var values ={",
                          "        \"accounts\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"fields\": {",
                          "                    \"splitAmount\": 0,",
                          "                    \"splitType\": \"Remainder\",",
                          "                    \"Custom_Is Entire Net Amount\": \"false\"",
                          "                }",
                          "            }",
                          "        ],",
                          "        \"fields\": {",
                          "            \"Custom_SocialSecurityNumber\": null",
                          "        }",
                          "    };",
                          "    ",
                          "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\": \"Remainder\",\r\n\t\t\t\t\"splitAmount\": 0\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "280f73c4-a51f-4d3b-a2f1-345eeeb9db24",
                  "name": "Submit Switch",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f390423b-d7b2-4cc2-b058-060f8d297a5c",
                        "type": "text/javascript",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has the correct state', function() {",
                          "    var state = {",
                          "        \"status\": \"Submitted\",",
                          "        \"actions\": [",
                          "            \"Cancel\"",
                          "        ],",
                          "        \"validation\": {",
                          "            \"accounts\": [],",
                          "            \"fields\": {},",
                          "            \"overall\": []",
                          "        }",
                          "    };",
                          "    ",
                          "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"index\": 1,\r\n  \"action\": \"Submit\"\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1/action"
                  },
                  "response": []
                },
                {
                  "_postman_id": "ff19a866-e832-4563-9c16-caaec1a8968b",
                  "name": "Cancel Switch",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9b4982a1-c3ae-4b11-9f97-6ccd09edb375",
                        "type": "text/javascript",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has the correct state', function() {",
                          "    var state = {",
                          "        \"status\": \"Canceled\",",
                          "        \"actions\": [",
                          "            \"Uncancel\",",
                          "            \"HTTP-DELETE\"",
                          "        ],",
                          "        \"validation\": {",
                          "            \"accounts\": [],",
                          "            \"fields\": {},",
                          "            \"overall\": []",
                          "        }",
                          "    };",
                          "    ",
                          "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"index\": 1,\r\n  \"action\": \"Cancel\"\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1/action"
                  },
                  "response": []
                },
                {
                  "_postman_id": "044a6d09-b999-4c12-98b8-7ff02fe6d452",
                  "name": "Delete Switch",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1be1b33e-16f0-4720-af7c-af5cad2f089b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "api-key",
                        "value": "{{api_key}}"
                      }
                    ],
                    "body": {},
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "\t"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "3c566dcd-6602-47fa-b39d-30f8fa8e5ec8",
              "name": "One Split Field",
              "description": null,
              "item": [
                {
                  "_postman_id": "fe025df6-6560-466b-ad56-bdac49f670ed",
                  "name": "Create Switch",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "30a09755-1908-49ff-b5a5-9b2ac7c04a6f",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('data');",
                          "    pm.expect(jsonData).to.have.property('apiVersion');",
                          "    pm.expect(jsonData).to.have.property('id');",
                          "    pm.expect(jsonData.data).to.have.property('kind');",
                          "    pm.expect(jsonData.data).to.have.property('lang');",
                          "});",
                          "",
                          "pm.test('Has required 2nd level elements', function() {",
                          "    pm.expect(jsonData.data.item).to.have.property('index');",
                          "    pm.expect(jsonData.data.item).to.have.property('type');",
                          "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                          "    pm.expect(jsonData.data.item).to.have.property('name');",
                          "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                          "    pm.expect(jsonData.data.item).to.have.property('values');",
                          "    pm.expect(jsonData.data.item).to.have.property('ux');",
                          "    pm.expect(jsonData.data.item).to.have.property('state');",
                          "});",
                          "",
                          "pm.test('Has the correct index', function() {",
                          "   pm.expect(jsonData.data.item.index).to.equal(1);",
                          "});",
                          "",
                          "pm.test('Has the correct type', function() {",
                          "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                          "});",
                          "",
                          "pm.test('Has the correct targetId', function() {",
                          "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                          "});",
                          "",
                          "pm.test('Has the correct accountHolderIndex', function() {",
                          "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                          "});",
                          "",
                          "pm.test('Has the correct state', function() {",
                          "    var state = {",
                          "        \"status\": \"Ready\",",
                          "        \"actions\": [",
                          "            \"HTTP-PUT\",",
                          "            \"Cancel\",",
                          "            \"Submit\"",
                          "        ],",
                          "        \"validation\": {",
                          "            \"accounts\": [],",
                          "            \"fields\": {},",
                          "            \"overall\": []",
                          "        }",
                          "    };",
                          "    ",
                          "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                          "});",
                          "",
                          "pm.test('Has the correct ux.accounts element', function() {",
                          "   var accounts = {",
                          "        \"limit\": 3,",
                          "        \"maxChecking\": 3,",
                          "        \"maxSavings\": 3,",
                          "        \"choices\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"label\": \"*8519\"",
                          "            },",
                          "            {",
                          "                \"index\": 1,",
                          "                \"label\": \"*5190\"",
                          "            }",
                          "        ],",
                          "        \"fields\": [",
                          "            {",
                          "                \"key\": \"splitAmount\",",
                          "                \"label\": \"Percent or Fixed Amount\",",
                          "                \"type\": \"textbox\",",
                          "                \"required\": true,",
                          "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                          "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                          "            },",
                          "            {",
                          "                \"key\": \"splitType\",",
                          "                \"label\": \"Type\",",
                          "                \"type\": \"select\",",
                          "                \"required\": true,",
                          "                \"selections\": [",
                          "                    {",
                          "                        \"key\": \"remainder\",",
                          "                        \"label\": \"Remainder\"",
                          "                    }",
                          "                ]",
                          "            },",
                          "            {",
                          "                \"key\": \"Custom_Is Entire Net Amount\",",
                          "                \"label\": \"Split[1]_Is Entire Net Amount\",",
                          "                \"type\": \"Checkbox\",",
                          "                \"required\": false",
                          "            }",
                          "        ]",
                          "    };",
                          "            ",
                          "    var customer_key = pm.environment.get('customer_key').toString();",
                          "    ",
                          "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                          "    ",
                          "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                          "    ",
                          "    accounts.choices[0].label = accountName1;",
                          "    accounts.choices[1].label = accountName2;",
                          "    ",
                          "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct values element', function() {",
                          "   var values ={",
                          "        \"accounts\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"fields\": {",
                          "                    \"splitAmount\": null,",
                          "                    \"splitType\": null,",
                          "                    \"Custom_Is Entire Net Amount\": \"false\"",
                          "                }",
                          "            }",
                          "        ],",
                          "        \"fields\": {",
                          "            \"Custom_SocialSecurityNumber\": null",
                          "        }",
                          "    };",
                          "    ",
                          "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Api-Key",
                        "key": "api-key",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n\t{ \t\r\n\t\t\"index\": 0\r\n\t}\r\n    ]\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
                  },
                  "response": []
                },
                {
                  "_postman_id": "a95308b8-e03b-4585-8d10-907cfa03a4e3",
                  "name": "Update - one account, one split field, default value",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2ec68a2f-41b2-4ca0-b1eb-7538e6272e5f",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('data');",
                          "    pm.expect(jsonData).to.have.property('apiVersion');",
                          "    pm.expect(jsonData).to.have.property('id');",
                          "    pm.expect(jsonData.data).to.have.property('kind');",
                          "    pm.expect(jsonData.data).to.have.property('lang');",
                          "});",
                          "",
                          "pm.test('Has required 2nd level elements', function() {",
                          "    pm.expect(jsonData.data.item).to.have.property('index');",
                          "    pm.expect(jsonData.data.item).to.have.property('type');",
                          "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                          "    pm.expect(jsonData.data.item).to.have.property('name');",
                          "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                          "    pm.expect(jsonData.data.item).to.have.property('values');",
                          "    pm.expect(jsonData.data.item).to.have.property('ux');",
                          "    pm.expect(jsonData.data.item).to.have.property('state');",
                          "});",
                          "",
                          "pm.test('Has the correct index', function() {",
                          "   pm.expect(jsonData.data.item.index).to.equal(1);",
                          "});",
                          "",
                          "pm.test('Has the correct type', function() {",
                          "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                          "});",
                          "",
                          "pm.test('Has the correct targetId', function() {",
                          "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                          "});",
                          "",
                          "pm.test('Has the correct accountHolderIndex', function() {",
                          "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                          "});",
                          "",
                          "pm.test('Has the correct state', function() {",
                          "    var state = {",
                          "        \"status\": \"Ready\",",
                          "        \"actions\": [",
                          "            \"HTTP-PUT\",",
                          "            \"Cancel\",",
                          "            \"Submit\"",
                          "        ],",
                          "        \"validation\": {",
                          "            \"accounts\": [],",
                          "            \"fields\": {},",
                          "            \"overall\": []",
                          "        }",
                          "    };",
                          "    ",
                          "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                          "});",
                          "",
                          "pm.test('Has the correct ux.accounts element', function() {",
                          "   var accounts = {",
                          "        \"limit\": 3,",
                          "        \"maxChecking\": 3,",
                          "        \"maxSavings\": 3,",
                          "        \"choices\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"label\": \"*8519\"",
                          "            },",
                          "            {",
                          "                \"index\": 1,",
                          "                \"label\": \"*5190\"",
                          "            }",
                          "        ],",
                          "        \"fields\": [",
                          "            {",
                          "                \"key\": \"splitAmount\",",
                          "                \"label\": \"Percent or Fixed Amount\",",
                          "                \"type\": \"textbox\",",
                          "                \"required\": true,",
                          "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                          "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                          "            },",
                          "            {",
                          "                \"key\": \"splitType\",",
                          "                \"label\": \"Type\",",
                          "                \"type\": \"select\",",
                          "                \"required\": true,",
                          "                \"selections\": [",
                          "                    {",
                          "                        \"key\": \"remainder\",",
                          "                        \"label\": \"Remainder\"",
                          "                    }",
                          "                ]",
                          "            },",
                          "            {",
                          "                \"key\": \"Custom_Is Entire Net Amount\",",
                          "                \"label\": \"Split[1]_Is Entire Net Amount\",",
                          "                \"type\": \"Checkbox\",",
                          "                \"required\": false",
                          "            }",
                          "        ]",
                          "    };",
                          "            ",
                          "    var customer_key = pm.environment.get('customer_key').toString();",
                          "    ",
                          "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                          "    ",
                          "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                          "    ",
                          "    accounts.choices[0].label = accountName1;",
                          "    accounts.choices[1].label = accountName2;",
                          "    ",
                          "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct values element', function() {",
                          "   var values ={",
                          "        \"accounts\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"fields\": {",
                          "                    \"splitAmount\": 0,",
                          "                    \"splitType\": \"Remainder\",",
                          "                    \"Custom_Is Entire Net Amount\": \"false\"",
                          "                }",
                          "            }",
                          "        ],",
                          "        \"fields\": {",
                          "            \"Custom_SocialSecurityNumber\": null",
                          "        }",
                          "    };",
                          "    ",
                          "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "39242308-f0fc-4573-9de0-139877dd74d3",
                  "name": "Update - one account, one split field, not default value",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "80d93aed-0ad1-43f6-8ad7-043fa41bfe35",
                        "exec": [
                          "const jsonData = pm.response.json();",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test('Has required elements', function() {",
                          "    pm.expect(jsonData).to.have.property('data');",
                          "    pm.expect(jsonData).to.have.property('apiVersion');",
                          "    pm.expect(jsonData).to.have.property('id');",
                          "    pm.expect(jsonData.data).to.have.property('kind');",
                          "    pm.expect(jsonData.data).to.have.property('lang');",
                          "});",
                          "",
                          "pm.test('Has required 2nd level elements', function() {",
                          "    pm.expect(jsonData.data.item).to.have.property('index');",
                          "    pm.expect(jsonData.data.item).to.have.property('type');",
                          "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                          "    pm.expect(jsonData.data.item).to.have.property('name');",
                          "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                          "    pm.expect(jsonData.data.item).to.have.property('values');",
                          "    pm.expect(jsonData.data.item).to.have.property('ux');",
                          "    pm.expect(jsonData.data.item).to.have.property('state');",
                          "});",
                          "",
                          "pm.test('Has the correct index', function() {",
                          "   pm.expect(jsonData.data.item.index).to.equal(1);",
                          "});",
                          "",
                          "pm.test('Has the correct type', function() {",
                          "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                          "});",
                          "",
                          "pm.test('Has the correct targetId', function() {",
                          "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"split_deposit_target_id\"));",
                          "});",
                          "",
                          "pm.test('Has the correct accountHolderIndex', function() {",
                          "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                          "});",
                          "",
                          "pm.test('Has the correct state', function() {",
                          "    var state = {",
                          "        \"status\": \"Ready\",",
                          "        \"actions\": [",
                          "            \"HTTP-PUT\",",
                          "            \"Cancel\",",
                          "            \"Submit\"",
                          "        ],",
                          "        \"validation\": {",
                          "            \"accounts\": [],",
                          "            \"fields\": {},",
                          "            \"overall\": []",
                          "        }",
                          "    };",
                          "    ",
                          "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                          "});",
                          "",
                          "pm.test('Has the correct ux.accounts element', function() {",
                          "   var accounts = {",
                          "        \"limit\": 3,",
                          "        \"maxChecking\": 3,",
                          "        \"maxSavings\": 3,",
                          "        \"choices\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"label\": \"*8519\"",
                          "            },",
                          "            {",
                          "                \"index\": 1,",
                          "                \"label\": \"*5190\"",
                          "            }",
                          "        ],",
                          "        \"fields\": [",
                          "            {",
                          "                \"key\": \"splitAmount\",",
                          "                \"label\": \"Percent or Fixed Amount\",",
                          "                \"type\": \"textbox\",",
                          "                \"required\": true,",
                          "                \"regex\": \"^(1-9\\\\\\\\d*\\\\\\\\.\\\\\\\\d2|(100(.0)?|(0(\\\\\\\\.1-9))|(1-90-9?(\\\\\\\\.\\\\\\\\d)?)))$\",",
                          "                \"validationMessage\": \"Must be an amount with 2 decimal places or a whole percentage\"",
                          "            },",
                          "            {",
                          "                \"key\": \"splitType\",",
                          "                \"label\": \"Type\",",
                          "                \"type\": \"select\",",
                          "                \"required\": true,",
                          "                \"selections\": [",
                          "                    {",
                          "                        \"key\": \"remainder\",",
                          "                        \"label\": \"Remainder\"",
                          "                    }",
                          "                ]",
                          "            },",
                          "            {",
                          "                \"key\": \"Custom_Is Entire Net Amount\",",
                          "                \"label\": \"Split[1]_Is Entire Net Amount\",",
                          "                \"type\": \"Checkbox\",",
                          "                \"required\": false",
                          "            }",
                          "        ]",
                          "    };",
                          "            ",
                          "    var customer_key = pm.environment.get('customer_key').toString();",
                          "    ",
                          "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                          "    ",
                          "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                          "    ",
                          "    accounts.choices[0].label = accountName1;",
                          "    accounts.choices[1].label = accountName2;",
                          "    ",
                          "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                          "});",
                          "",
                          "pm.test('Has the correct values element', function() {",
                          "   var values ={",
                          "        \"accounts\": [",
                          "            {",
                          "                \"index\": 0,",
                          "                \"fields\": {",
                          "                    \"splitAmount\": 0,",
                          "                    \"splitType\": \"Remainder\",",
                          "                    \"Custom_Is Entire Net Amount\": \"true\"",
                          "                }",
                          "            }",
                          "        ],",
                          "        \"fields\": {",
                          "            \"Custom_SocialSecurityNumber\": null",
                          "        }",
                          "    };",
                          "    ",
                          "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "2c07c15e-e18b-4142-a625-0bc55b18d87e",
              "name": "Two Split Fields",
              "description": null,
              "item": [
                {
                  "_postman_id": "35ba4288-48dc-46ab-897f-ef288c145bb5",
                  "name": "One account, Two Split Fields, default values",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n \"type\": \"Deposit\",\r\n \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "b2963f1e-2835-4750-a961-e795a42ac621",
                  "name": "One Account, Two Split Fields, First not default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n \"type\": \"Deposit\",\r\n \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "9cfcccc0-3cfc-4ed8-93e2-35e6331666cb",
                  "name": "One Account, Two Split Fields, Second not default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n \"type\": \"Deposit\",\r\n \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "817fda73-35b6-4400-a69f-3bf86c3404ee",
                  "name": "One Account, Two Split Fields, neither is default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n \"type\": \"Deposit\",\r\n \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\": true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "de16961e-009c-47a3-971f-d2e4327896ca",
          "name": "Two Accounts",
          "description": null,
          "item": [
            {
              "_postman_id": "18498e52-6ed4-4589-9c5a-d7e91a0b5b49",
              "name": "Zero Split Fields",
              "description": null,
              "item": [
                {
                  "_postman_id": "65b3af54-6ed0-41fc-b43a-3aaacce21f9e",
                  "name": "index only, no fields array",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "465bcd59-db89-4c45-8eea-380af8d9a275",
                  "name": "empty fields array",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "6e2b06ba-1091-4152-9c4e-c858bfc55b67",
                  "name": "splitType included",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\":\"Remainder\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\":\"Currency\"\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "fdd4903f-d480-445f-8554-30cda2cfc620",
                  "name": "splitType, splitAmount included",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Remainder\",\r\n\t\t\t\t\"SplitAmount\": 0\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"SplitType\": \"Currency\",\r\n\t\t\t\t\"SplitAmount\": 10\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "d494c10f-f87f-47a8-8a29-02a5f7922f61",
              "name": "One Split Field",
              "description": null,
              "item": [
                {
                  "_postman_id": "f3cb77a4-ba9d-45c2-becb-311901948cf4",
                  "name": "default value in both splits",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "164bcb95-fe37-4b17-b369-b9b9340b7a52",
                  "name": "non-default value in first",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "1141b7d5-781c-46e2-ad10-1029b7f2c5d1",
                  "name": "non-default value in second",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\": {\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "this is a failing case because expected result is:\n\"accounts\": [\n    {\n        \"index\": 0,\n        \"fields\": {\n            \"splitAmount\": 0,\n            \"splitType\": \"Remainder\",\n            \"Custom_Is Entire Net Amount\": \"False\"\n        }\n    },\n    {\n        \"index\": 1,\n        \"fields\": {\n            \"splitAmount\": 10,\n            \"splitType\": \"Currency\",\n            \"Custom_Is Entire Net Amount\": \"true\"\n        }\n    }\n]\n\nThe SwitchToCustomerAccounts need to be inserted into the database in the opposite order they are in now"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "69422c37-e1c4-4972-9004-f801bd409755",
              "name": "Two SplitFields",
              "description": null,
              "item": [
                {
                  "_postman_id": "19ab5092-c7e9-488e-a2ca-b9e41dec2b13",
                  "name": "all answers default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "5019cba8-3299-44b8-bd33-35413ad825be",
                  "name": "one answer not default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "c5a29282-08bc-489b-bb6f-48151d9ff3a5",
                  "name": "two answers not default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\": true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "54676db5-3b9f-4b4d-b4a5-faf77b9c9aa5",
                  "name": "three answers not default -fail",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\": true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "082e208b-51c4-49af-bf17-dff02f8b1992",
                  "name": "no answers are default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "5f64ccfb-10c7-4b61-b0fc-31bbcf582f71",
                  "name": "first set of answers default, second set of answers not default",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "ea34aeef-c5fb-4e9c-8441-0499f061b6ad",
          "name": "More Than Two Accounts",
          "description": null,
          "item": [
            {
              "_postman_id": "53a00551-05ca-494f-96be-0ba3786962b1",
              "name": "Zero Split Fields",
              "description": null,
              "item": [
                {
                  "_postman_id": "19f4cbed-9864-43b8-8547-06fb863ed171",
                  "name": "index only, no fields array",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "08e71e01-e032-45c9-9fa3-3748231055ed",
                  "name": "empty fields array",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                },
                {
                  "_postman_id": "12e9f8cd-c429-4e1a-a94a-2805f82beba8",
                  "name": "splitType included",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Currency\"\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "6f3b0f1c-dff7-40eb-8d7d-bf6c32c63c13",
                  "name": "splitType, splitAmount included",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "fail = validation should not be present\nexpected result = fields array of split template fields should be given"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "6cf252bb-7c93-406e-8438-4ddee1fdedac",
              "name": "One Split Field",
              "description": null,
              "item": [
                {
                  "_postman_id": "157bc869-be18-460a-b1a6-596b34277b40",
                  "name": "default value in both splits",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "0d2fb43a-308d-403c-be7e-b20d8418b77c",
                  "name": "non-default value in first",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
                  },
                  "response": []
                },
                {
                  "_postman_id": "1861a638-666f-4852-a3e1-453010e9f82f",
                  "name": "non-default value in second",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "{{api_key}}"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n \"targetId\": \"{{split_deposit_target_id}}\",\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \"accounts\":[\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Remainder\",\r\n\t\t\t\t\"splitAmount\" : 0,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": false\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"fields\":{\r\n\t\t\t\t\"splitType\":\"Currency\",\r\n\t\t\t\t\"splitAmount\" : 10,\r\n\t\t\t\t\"Custom_Is Entire Net Amount\": true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                    "description": "this is a failing case because expected result is:\n\"accounts\": [\n    {\n        \"index\": 0,\n        \"fields\": {\n            \"splitAmount\": 0,\n            \"splitType\": \"Remainder\",\n            \"Custom_Is Entire Net Amount\": \"False\"\n        }\n    },\n    {\n        \"index\": 1,\n        \"fields\": {\n            \"splitAmount\": 10,\n            \"splitType\": \"Currency\",\n            \"Custom_Is Entire Net Amount\": \"true\"\n        }\n    }\n]\n\nThe SwitchToCustomerAccounts need to be inserted into the database in the opposite order they are in now"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "200318c7-60af-42cc-ad01-c959fef8d3c8",
              "name": "Two SplitFields",
              "description": null,
              "item": [
                {
                  "_postman_id": "5610a361-2cad-433b-8e9c-83e1588b17eb",
                  "name": "all answers default",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0xMC0wMlQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.0YnhuhaOktkdZ9a34yT_wRDSemnFePAkanDXT5gZBW0"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "d48b893e-a997-41c7-a191-780921918197",
                  "name": "one answer not default",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0xMC0wMlQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.0YnhuhaOktkdZ9a34yT_wRDSemnFePAkanDXT5gZBW0",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "fa7d927a-2006-4810-a481-e490f3215697",
                  "name": "two answers not default",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0xMC0wMlQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.0YnhuhaOktkdZ9a34yT_wRDSemnFePAkanDXT5gZBW0",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "b6f960e2-48ba-4afa-820d-f84daeb68cb3",
                  "name": "three answers not default -fail",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "f30738fa-1e6f-4b99-955a-3dc402e6d2c1",
                  "name": "no answers are default",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                },
                {
                  "_postman_id": "33318027-4851-4ab0-a555-6f590b1ef234",
                  "name": "first set of answers default, second set of answers not default",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "api-key",
                        "type": "text",
                        "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk"
                      },
                      {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "Content",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": true,\r\n\t\t  \"Custom_Is this a Change of Accounts\":true\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                    },
                    "url": {
                      "raw": "http://localhost:52512/v3/customers/megan1/switches?",
                      "protocol": "http",
                      "host": [
                        "localhost"
                      ],
                      "port": "52512",
                      "path": [
                        "v3",
                        "customers",
                        "megan1",
                        "switches"
                      ],
                      "query": [
                        {
                          "key": "api-key",
                          "value": "AAeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnN0aXR1dGlvbklkIjoyMTIwLCJjcmVhdGVEYXRlIjoiMjAxOC0wOS0xMVQwMDowMDowMCIsImVudmlyb25tZW50IjoiVXNMb2NhbCIsInZlcnNpb24iOiIzLjAuMCIsImFwcE1vZGUiOjEsInJvbGVzIjpbIkludGVybmFsRnVsbEFjY2VzcyJdfQ.ezXBNoh0Qzs_Jsj4IVa2t94xgWt_ng3hJAZM5GIaGLk",
                          "disabled": true
                        },
                        {
                          "key": "content-Type",
                          "value": "application/json",
                          "disabled": true
                        },
                        {
                          "key": "content",
                          "value": "application/json",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "answer is given for an account with the same index as in \"custom_split[index]_form template field\""
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e24a52f3-3137-4df0-b080-c1ee47fc0a3d",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c463a736-d5d8-4df0-8871-0d501f734980",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "65c7eef0-dcd1-4bbe-8aa3-b0ce3f5dc272",
          "name": "MissingSplitFieldsInRequest",
          "description": "An imperfect request is sent such that the fields array is present, but not all form template fields have a key value pair in the request",
          "item": [
            {
              "_postman_id": "59945d72-0823-487e-ac0d-bef75108a722",
              "name": "One Missing Split Field",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "value": "{{api_key}}",
                    "type": "text"
                  },
                  {
                    "key": "Content",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                "description": "One split field is missing from request"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "b3f8b162-6806-4f4a-9068-5ad99326cae6",
          "name": "ExtraneousSplitFieldsInRequest",
          "description": "The request contains a key value pair for a field that does not exist in the form template fields table.",
          "item": [
            {
              "_postman_id": "017d2c8c-314a-4878-90a7-205ead93b217",
              "name": "One Extra Split Field",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "api-key",
                    "type": "text",
                    "value": "{{api_key}}"
                  },
                  {
                    "key": "Content",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 4534,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t\"accounts\": [\r\n\t {\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitType\": \"Remainder\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false,\r\n\t\t  \"Custom_I am extra field\":false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"Custom_Is this to Add an Account\": false,\r\n\t\t  \"Custom_Is this a Change of Accounts\":false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_IsWeekly\": null,\r\n\t  \"Custom_IsMonthly\":null,\r\n\t  \"Custom_Personnel Number\":null\r\n\t}\r\n  }\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1",
                "description": "One split field is missing from request"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "e264c5df-7b6a-4826-8f3f-1af439c65b62",
          "name": "Account index does not exist",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "api-key",
                "type": "text",
                "value": "{{api_key}}"
              },
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"type\": \"Deposit\",\r\n  \"targetId\": 1649,\r\n  \"accountHolderIndex\": 0,\r\n  \"values\": {\r\n\t  \t\"accounts\":[\r\n{\r\n\t\t\"index\": 0,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\":50,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"__Is Entire Net Amount\": true\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 1,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"__Is Entire Net Amount\": false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 2,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"__Is Entire Net Amount\": false\r\n\t\t}\r\n\t  },\r\n\t  {\r\n\t\t\"index\": 3,\r\n\t\t\"fields\": {\r\n\t\t  \"splitAmount\": 44,\r\n\t\t  \"splitType\": \"Currency\",\r\n\t\t  \"__Is Entire Net Amount\": false\r\n\t\t}\r\n\t  }\r\n\t],\r\n\t\"fields\": {\r\n\t  \"Custom_SocialSecurityNumber\": null\r\n\t}\r\n  }\r\n}"
            },
            "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}/1"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "0797b513-44ee-4039-94cd-d80e60f9d9cd",
      "name": "3614",
      "description": "",
      "item": []
    },
    {
      "_postman_id": "fab4bb01-2ac5-411d-9a42-09d2087c3c6f",
      "name": "3452",
      "description": "",
      "item": [
        {
          "_postman_id": "97b2a609-f030-4a86-8bfb-30d7b0d69d2d",
          "name": "Customer",
          "description": "",
          "item": [
            {
              "_postman_id": "a5723a3e-dc63-486e-a9ad-4dab90a363ab",
              "name": "Joint Customer Joint Account Enroll",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fdc852cd-24c2-430b-97b7-02f7cd1aa25e",
                    "type": "text/javascript",
                    "exec": [
                      "var timestamp = Date.now();",
                      "",
                      "var randomString = makeRandomString();",
                      "",
                      "// Set the timestamp to environment vars to create an unique",
                      "// customer on each test run.",
                      "pm.environment.set(\"customer_key\", timestamp);",
                      "",
                      "pm.environment.set(\"customer_name\", randomString);",
                      "",
                      "// Creates a random string of length 10.",
                      "function makeRandomString() {",
                      "  var text = \"\";",
                      "  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
                      "",
                      "  for (var i = 0; i < 10; i++)",
                      "    text += possible.charAt(Math.floor(Math.random() * possible.length));",
                      "",
                      "  return text;",
                      "}",
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "25b13e01-3f30-414f-a319-4fd7166f53b5",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has to correct IDs\", function () {",
                      "    pm.expect(jsonData.CustomerId).to.be.a('number');",
                      "    pm.expect(jsonData.PrimaryContactId).to.be.a('number');",
                      "    pm.expect(jsonData.SecondaryContactId).to.be.a('number');",
                      "});",
                      "",
                      "pm.environment.set(\"customer_id\", jsonData.CustomerId);",
                      "pm.environment.set(\"customer_contact_id\", jsonData.PrimaryContactId);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"AccountTypeId\": 1,\r\n      \"AccountName\": \"{{checking_name}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"BranchId\": \"{{branch_id}}\"\r\n    },\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}0\",\r\n      \"AccountTypeId\": 2,\r\n      \"AccountName\": \"{{checking_name}}\",\r\n      \"ExternalBranchId\": 123,\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"BranchId\": \"{{branch_id}}\"\r\n    }\r\n  ],\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"AddressLine2\": \"Apt. 1\",\r\n    \"AddressLine3\": \"Attn: Test\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55803\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"BusinessName\": \"Test\",\r\n  \"ConsentToEsign\": true,\r\n  \"DefaultBranchId\": \"{{branch_id}}\",\r\n  \"DefaultExternalBranchId\": 123,\r\n  \"DefaultRoutingNumber\": \"{{routing_number}}\",\r\n  \"EmailAddress\": \"{{customer_key}}@clickswitch.com\",\r\n  \"InstitutionId\": \"{{institution_id}}\",\r\n  \"PhoneNumber\": \"2185555555\",\r\n  \"PrimaryContact\": {\r\n    \"FirstName\": \"{{customer_name}}\",\r\n    \"MiddleInitial\": \"T\",\r\n    \"LastName\": \"Test\"\r\n  },\r\n  \"SecondaryContact\": {\r\n\t\"FirstName\": \"{{customer_name}}\",\r\n\t\"MiddleInitial\": \"T\",\r\n\t\"LastName\": \"Test\"\r\n  },\r\n  \"UserName\": \"{{customer_name}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "d3a2c4f2-8d56-46e6-bff5-938a50df5798",
          "name": "Unknown Depositor",
          "description": "",
          "item": [
            {
              "_postman_id": "9cf25f61-e338-4043-9fd6-0deea60d2357",
              "name": "Create Depositor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7949c388-1e48-45d3-ae5b-62f29b75a2cd",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                      "    pm.expect(jsonData).to.have.property('Form');",
                      "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                      "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                      "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                      "    pm.expect(jsonData).to.have.property('ProfileId');",
                      "    pm.expect(jsonData).to.have.property('Type');",
                      "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                      "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                      "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                      "});",
                      "",
                      "pm.environment.set('custom_depositor_id', jsonData.CustomerCreatedDepositorId);",
                      "pm.environment.set('custom_depositor_switch_profile_id', jsonData.ProfileId);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor\",\r\n  \"Notes\": \"Test\",\r\n  \"PhoneNumber\": \"2185555555\"\r\n}"
                },
                "url": "{{base_url}}{{customer_id}}/depositors{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "4cf33c83-064b-48e9-9d3c-71bd405d4d77",
          "name": "Location Depositor",
          "description": "",
          "item": [
            {
              "_postman_id": "91e3f8da-b416-46e0-aa31-94818a841bab",
              "name": "Location Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e7770e3-231f-4c08-8901-770715598451",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Contains at least one result\", function () {",
                      "    pm.expect(jsonData.length).to.be.at.least(1);",
                      "});",
                      "",
                      "pm.environment.set('location_id', jsonData[jsonData.length-1].PlaceId);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{base_url}}{{customer_id}}/depositors{{api_key_param}}{{api_key}}&searchName={{location_name}}&latitude=-92&longitude=47"
              },
              "response": []
            },
            {
              "_postman_id": "075fe434-7c53-4796-8f49-d89610a6a582",
              "name": "Create Depositor From LocationId",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "91b6c2c6-3cf4-4f52-9f79-1cb88b287d41",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositSplitInfo');",
                      "    pm.expect(jsonData).to.have.property('Form');",
                      "    pm.expect(jsonData).to.have.property('IsSplittingDepositsPossible');",
                      "    pm.expect(jsonData).to.have.property('OnlineOnlyInstructions');",
                      "    pm.expect(jsonData).to.have.property('PrintOnlyInstructions');",
                      "    pm.expect(jsonData).to.have.property('ProfileId');",
                      "    pm.expect(jsonData).to.have.property('Type');",
                      "    pm.expect(jsonData).to.have.property('TermsAndConditions');",
                      "    pm.expect(jsonData).to.have.property('SplitAccountTypeCheckingLimit');",
                      "    pm.expect(jsonData).to.have.property('SplitAccountTypeSavingsLimit');",
                      "});",
                      "",
                      "pm.environment.set('custom_location_depositor_id', jsonData.CustomerCreatedDepositorId);",
                      "pm.environment.set('custom_location_switch_profile_id', jsonData.ProfileId);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Address\": {\r\n    \"AddressLine1\": \"600 Canal Park Dr.\",\r\n    \"City\": \"Duluth\",\r\n    \"CountryCode\": \"US\",\r\n    \"PostalCode\": \"55555\",\r\n    \"StateProvinceCode\": \"MN\"\r\n  },\r\n  \"Name\": \"Test Depositor2\",\r\n  \"Notes\": \"Test\",\r\n  \"PlaceId\": \"{{location_id}}\",\r\n  \"PhoneNumber\": \"2185555555\"\r\n}"
                },
                "url": "{{base_url}}{{customer_id}}/depositors{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "ef63e67e-8596-46da-9687-f1ad5b19882e",
          "name": "Unknown Switch",
          "description": "",
          "item": [
            {
              "_postman_id": "c78434fe-4194-4426-bfc5-59a20b0c4493",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "628931bc-540b-450d-a63e-d0bcad4c179d",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": 100,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(2);",
                      "});",
                      "",
                      "pm.environment.set('custom_switch_id', jsonData.Id);",
                      "pm.environment.set('custom_target_guid', jsonData.SwitchProfileGuid);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{custom_depositor_id}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{custom_depositor_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "f3f7d2c1-8e7f-4c52-a563-79629a611357",
          "name": "Location Id Switch",
          "description": "",
          "item": [
            {
              "_postman_id": "f10018f2-c8fb-46e8-bd8c-b8dbd1075503",
              "name": "Create Switch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a30754e4-17a2-43d9-8787-be0c751d51ab",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Has required elements', function() {",
                      "    pm.expect(jsonData).to.have.property('Accounts');",
                      "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorId');",
                      "    pm.expect(jsonData).to.have.property('DepositorName');",
                      "    pm.expect(jsonData).to.have.property('FormFields');",
                      "    pm.expect(jsonData).to.have.property('Id');",
                      "    pm.expect(jsonData).to.have.property('Status');",
                      "    pm.expect(jsonData).to.have.property('IsPrintable');",
                      "    pm.expect(jsonData).to.have.property('SwitchAccountHolderId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileId');",
                      "    pm.expect(jsonData).to.have.property('SwitchProfileGuid');",
                      "});",
                      "",
                      "pm.test('Has the correct accounts element', function() {",
                      "   var accounts = ",
                      "    {",
                      "        \"AccountName\": \"\",",
                      "        \"AccountNumber\": \"\",",
                      "        \"AccountType\": \"\",",
                      "        \"InstitutionName\": \"Saturn Systems API Testing\",",
                      "        \"RoutingNumber\": \"\",",
                      "        \"SplitAmount\": null,",
                      "        \"SplitUnitType\": \"Percentage\"",
                      "    };",
                      "        ",
                      "    accounts.AccountName = pm.environment.get('checking_name');",
                      "    accounts.AccountNumber = pm.environment.get('customer_key').toString();",
                      "    accounts.AccountType = pm.environment.get('checking_name');",
                      "    accounts.RoutingNumber = pm.environment.get('routing_number');",
                      "    ",
                      "    pm.expect(jsonData.Accounts).to.deep.include(accounts);",
                      "});",
                      "",
                      "pm.test('Has the correct status', function() {",
                      "   pm.expect(jsonData.Status).to.equal('Initial') ;",
                      "});",
                      "",
                      "pm.test('Has the correct form fields', function() {",
                      "    pm.expect(jsonData.FormFields.length).to.be.at.least(3);",
                      "});",
                      "",
                      "pm.environment.set('location_deposit_switch_id', jsonData.Id);",
                      "pm.environment.set('location_target_guid', jsonData.SwitchProfileGuid);",
                      "",
                      "",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Ocp-Apim-Subscription-Key",
                    "value": "{{subscription_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"Accounts\": [\r\n    {\r\n      \"AccountNumber\": \"{{customer_key}}\",\r\n      \"RoutingNumber\": \"{{routing_number}}\",\r\n      \"SplitUnitType\": \"Percentage\",\r\n      \"SplitAmount\": 100\r\n    }\r\n  ],\r\n  \"CustomerCreatedDepositorId\": \"{{custom_location_depositor_id}}\",\r\n  \"FormFields\": [\r\n\r\n  ],\r\n  \"Signatures\": {\r\n    \"PrimaryContactSignature\": {\r\n      \"ContactId\": \"{{customer_contact_id}}\",\r\n      \"Signature\": \"Test\"\r\n    }\r\n  },\r\n  \"SwitchAccountHolderId\": \"{{customer_contact_id}}\",\r\n  \"SwitchProfileId\": \"{{custom_location_switch_profile_id}}\"\r\n}"
                },
                "url": "{{base_url}}{{customers_postfix}}/{{customer_id}}{{switches_postfix}}{{api_key_param}}{{api_key}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "ac1bf353-9207-4262-9ebd-f4d3495ba31b",
          "name": "Get Custom Depositor By Switch Profile Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('Address');",
                  "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                  "    pm.expect(jsonData).to.have.property('DepositorId');",
                  "    pm.expect(jsonData).to.have.property('Name');",
                  "    pm.expect(jsonData).to.have.property('PhoneNumber');",
                  "    pm.expect(jsonData).to.have.property('PlaceId');",
                  "    pm.expect(jsonData).to.have.property('SwitchTemplate');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('CustomerCreatedDepositorId');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositorId');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositSplitInfo');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('Form');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('IsSplittingDepositsPossible');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('OnlineOnlyInstructions');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('PrintOnlyInstructions');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('ProfileId');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('Type');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('TermsAndConditions');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeCheckingLimit');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeSavingsLimit');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{base_url}}{{customer_id}}/depositors/{{custom_target_guid}}{{api_key_param}}{{api_key}}"
          },
          "response": []
        },
        {
          "_postman_id": "1ff21e75-e46f-42d3-b375-40d609b35520",
          "name": "Get Location Depositor By Switch Profile Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dd7f840c-5157-4a09-b1e9-aea9cddc2905",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('Address');",
                  "    pm.expect(jsonData).to.have.property('CustomerCreatedDepositorId');",
                  "    pm.expect(jsonData).to.have.property('DepositorId');",
                  "    pm.expect(jsonData).to.have.property('Name');",
                  "    pm.expect(jsonData).to.have.property('PhoneNumber');",
                  "    pm.expect(jsonData).to.have.property('PlaceId');",
                  "    pm.expect(jsonData).to.have.property('SwitchTemplate');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('CustomerCreatedDepositorId');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositorId');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('DepositSplitInfo');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('Form');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('IsSplittingDepositsPossible');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('OnlineOnlyInstructions');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('PrintOnlyInstructions');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('ProfileId');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('Type');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('TermsAndConditions');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeCheckingLimit');",
                  "    pm.expect(jsonData.SwitchTemplate).to.have.property('SplitAccountTypeSavingsLimit');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Ocp-Apim-Subscription-Key",
                "value": "{{subscription_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{base_url}}{{customer_id}}/depositors/{{location_target_guid}}{{api_key_param}}{{api_key}}"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "ea9765c6-3b68-430b-a3a3-67a8b6491589",
      "name": "3625",
      "description": "",
      "item": [
        {
          "_postman_id": "1b923a59-d28a-4640-966d-55c2a9a88dda",
          "name": "Create Switch- invalid state and zip",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e9353eb-a31c-4b79-96b3-f0da8b150a5a",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "const isCanada = pm.environment.get('isCanada') === 'true';",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api-Key"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"type\": \"deposit\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n      {\r\n        \"index\": 0\r\n      }\r\n    ], \r\n    \"fields\": {\r\n\t\t\"name\": \"Test\",\r\n\t\t\"mailingAddress\": {\r\n\t\t  \"line1\": \"123 Main Street\",\r\n\t\t  \"city\": \"Duluth\",\r\n\t\t  \"state\": \"MNN\",\r\n\t\t  \"zip\": 558033\r\n\t\t},\r\n\t\t\"category\": 1,\r\n\t\t\"Custom_Amount or Net Pay\": \"Net\",\r\n\t\t\"Custom_or Percentage\": \"100\",\r\n\t\t\"Custom_Last 4 of SSN\": \"1234\",\r\n\t\t\"Custom_Employee ID\": \"123\",\r\n\t\t\"Custom_Work Location\": \"Test\"\r\n    }\r\n  }\r\n}"
            },
            "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "ca676135-ca55-4e65-9c32-b2ab080ea233",
      "name": "3628",
      "description": "",
      "item": [
        {
          "_postman_id": "bc6d1391-f22a-49c5-a8a3-d25490ca3605",
          "name": "Create Switch - Huge value for field",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e78918a-5289-42d1-9bfe-158a7b64381e",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Has required elements', function() {",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('apiVersion');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('kind');",
                  "    pm.expect(jsonData.data).to.have.property('lang');",
                  "});",
                  "",
                  "pm.test('Has the correct context', function() {",
                  "    pm.expect(jsonData.context).to.equal('testing_context');",
                  "})",
                  "",
                  "pm.test('Has required 2nd level elements', function() {",
                  "    pm.expect(jsonData.data.item).to.have.property('index');",
                  "    pm.expect(jsonData.data.item).to.have.property('type');",
                  "    pm.expect(jsonData.data.item).to.have.property('targetId');",
                  "    pm.expect(jsonData.data.item).to.have.property('name');",
                  "    pm.expect(jsonData.data.item).to.have.property('accountHolderIndex');",
                  "    pm.expect(jsonData.data.item).to.have.property('values');",
                  "    pm.expect(jsonData.data.item).to.have.property('ux');",
                  "    pm.expect(jsonData.data.item).to.have.property('state');",
                  "});",
                  "",
                  "pm.test('Has the correct index', function() {",
                  "   pm.expect(jsonData.data.item.index).to.equal(1);",
                  "});",
                  "",
                  "pm.test('Has the correct type', function() {",
                  "   pm.expect(jsonData.data.item.type).to.equal(\"Deposit\");",
                  "});",
                  "",
                  "pm.test('Has the correct targetId', function() {",
                  "   pm.expect(jsonData.data.item.targetId).to.equal(pm.environment.get(\"deposit_target_id\"));",
                  "});",
                  "",
                  "pm.test('Has the correct accountHolderIndex', function() {",
                  "   pm.expect(jsonData.data.item.accountHolderIndex).to.equal(0);",
                  "});",
                  "",
                  "pm.test('Has the correct state', function() {",
                  "    var state = {",
                  "        \"status\": \"Incomplete\",",
                  "        \"actions\": [",
                  "            \"HTTP-PUT\",",
                  "            \"Cancel\"",
                  "        ],",
                  "        \"validation\": {",
                  "            \"accounts\": [],",
                  "            \"fields\": {",
                  "                \"Custom_Depositor's Full Mailing Address\": \"This field is required\",",
                  "                \"Custom_Last 4 of SSN\": \"This field is required\"",
                  "            },",
                  "            \"overall\": []",
                  "        }",
                  "    };",
                  "    ",
                  "   pm.expect(jsonData.data.item.state).to.deep.include(state);",
                  "});",
                  "",
                  "pm.test('Has the correct ux.accounts element', function() {",
                  "   var accounts = {",
                  "        \"limit\": 1,",
                  "        \"maxChecking\": 1,",
                  "        \"maxSavings\": 1,",
                  "        \"choices\": [",
                  "            {",
                  "                \"index\": 0,",
                  "                \"label\": \"*3607\"",
                  "            },",
                  "            {",
                  "                \"index\": 1,",
                  "                \"label\": \"*6070\"",
                  "            }",
                  "        ],",
                  "        \"fields\": []",
                  "    };",
                  "            ",
                  "    var customer_key = pm.environment.get('customer_key').toString();",
                  "    ",
                  "    var accountName1 = '*' + customer_key.substring(customer_key.length-4,customer_key.length);",
                  "    ",
                  "    var accountName2 = '*' + customer_key.substring(customer_key.length-3,customer_key.length) + '0';",
                  "    ",
                  "    accounts.choices[0].label = accountName1;",
                  "    accounts.choices[1].label = accountName2;",
                  "    ",
                  "    pm.expect(jsonData.data.item.ux.accounts).to.deep.include(accounts);",
                  "});",
                  "",
                  "pm.test('Has the correct values element', function() {",
                  "   var values = {",
                  "        \"accounts\": [",
                  "            {",
                  "                \"index\": 0",
                  "            }",
                  "        ],",
                  "        \"fields\": {",
                  "            \"Custom_Net or Amount (in dollars)\": null,",
                  "            \"Custom_or Percentage of Pay (1 - 100)\": null,",
                  "            \"Custom_Depositor's Full Mailing Address\": null,",
                  "            \"Custom_Employee ID\": null,",
                  "            \"Custom_Last 4 of SSN\": null",
                  "        }",
                  "    };",
                  "    ",
                  "    pm.expect(jsonData.data.item.values).to.deep.include(values);",
                  "});",
                  "",
                  "pm.test('Has matching values and ux.fields names', function() {",
                  "   var values = jsonData.data.item.values.fields;",
                  "   var ux = jsonData.data.item.ux.fields;",
                  "   ",
                  "   var getValueKeys = function(object, array) {",
                  "       for (var k in object) {",
                  "           if (typeof object[k] === 'object' && object[k] !== null) {",
                  "               for (var i in object[k]) array.push(i);",
                  "           } else {",
                  "               array.push(k);",
                  "           }",
                  "       } ",
                  "   };",
                  "   ",
                  "    var getUxKeys = function(object, array) {",
                  "        for (var k in object) {",
                  "           if (object[k].hasOwnProperty('fields')) {",
                  "                for (var i in object[k].fields) {",
                  "                   array.push(object[k].fields[i].key);",
                  "                }",
                  "           } else {",
                  "              array.push(object[k].key);",
                  "           }",
                  "        } ",
                  "    };",
                  "   ",
                  "    var valueKeys = [];",
                  "    var uxKeys = [];",
                  "    ",
                  "    getValueKeys(values, valueKeys);",
                  "    getUxKeys(ux, uxKeys);",
                  "   ",
                  "   valueKeys.sort();",
                  "   uxKeys.sort();",
                  "   ",
                  "   pm.expect(valueKeys).to.eql(uxKeys);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "api-key",
                "value": "{{api_key}}",
                "description": "Api-Key"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"index\": 1,\r\n  \"type\": \"deposit\",\r\n  \"targetId\": \"{{deposit_target_id}}\",\r\n  \"accountholderIndex\": 0,\r\n  \"values\": {\r\n    \"accounts\": [\r\n      {\r\n        \"index\": 0\r\n      }\r\n    ],\r\n    \"fields\": {\r\n      \"Custom_Net or Amount (in dollars)\": \"500\",\r\n      \"Custom_or Percentage of Pay (1 - 100)\": \"50\",\r\n      \"Custom_Last 4 of SSN\": \"1234\",\r\n      \"Custom_Employee ID\": \"123\",\r\n      \"Custom_Depositor's Full Mailing Address\": \"Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing Testing\"\r\n    }\r\n  }\r\n}"
            },
            "url": "{{base_url}}{{customers_postfix}}{{customer_key}}{{switches_postfix}}"
          },
          "response": []
        }
      ]
    }
  ]
}